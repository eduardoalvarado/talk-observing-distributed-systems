/*
 * This file is generated by jOOQ.
*/
package io.github.jeqo.demo.infra.jooq;


import io.github.jeqo.demo.infra.jooq.tables.Hashtags;
import io.github.jeqo.demo.infra.jooq.tables.Tweets;
import io.github.jeqo.demo.infra.jooq.tables.Users;
import io.github.jeqo.demo.infra.jooq.tables.records.HashtagsRecord;
import io.github.jeqo.demo.infra.jooq.tables.records.TweetsRecord;
import io.github.jeqo.demo.infra.jooq.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TweetsRecord> TWEETS_PKEY = UniqueKeys0.TWEETS_PKEY;
    public static final UniqueKey<UsersRecord> USERS_PKEY = UniqueKeys0.USERS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<HashtagsRecord, TweetsRecord> HASHTAGS__HASHTAGS_TWEET_ID_FKEY = ForeignKeys0.HASHTAGS__HASHTAGS_TWEET_ID_FKEY;
    public static final ForeignKey<TweetsRecord, UsersRecord> TWEETS__TWEETS_USER_ID_FKEY = ForeignKeys0.TWEETS__TWEETS_USER_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<TweetsRecord> TWEETS_PKEY = createUniqueKey(Tweets.TWEETS, "tweets_pkey", Tweets.TWEETS.ID);
        public static final UniqueKey<UsersRecord> USERS_PKEY = createUniqueKey(Users.USERS, "users_pkey", Users.USERS.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<HashtagsRecord, TweetsRecord> HASHTAGS__HASHTAGS_TWEET_ID_FKEY = createForeignKey(io.github.jeqo.demo.infra.jooq.Keys.TWEETS_PKEY, Hashtags.HASHTAGS, "hashtags__hashtags_tweet_id_fkey", Hashtags.HASHTAGS.TWEET_ID);
        public static final ForeignKey<TweetsRecord, UsersRecord> TWEETS__TWEETS_USER_ID_FKEY = createForeignKey(io.github.jeqo.demo.infra.jooq.Keys.USERS_PKEY, Tweets.TWEETS, "tweets__tweets_user_id_fkey", Tweets.TWEETS.USER_ID);
    }
}
