{"version":3,"sources":["webpack:///static/js/1.acaf8887.chunk.js","webpack:///./~/chance/chance.js","webpack:///./src/demo/jaeger-mock.js","webpack:///./src/demo/dependency-generators.js","webpack:///./src/demo/trace-generators.js","webpack:///./~/base64-js/index.js","webpack:///./~/buffer/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js"],"names":["webpackJsonp","179","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Buffer","Chance","seed","this","random","arguments","length","i","seedling","Object","prototype","toString","call","j","hash","k","charCodeAt","mt","mersenne_twister","bimd5","blueimp_md5","initOptions","options","defaults","testRange","test","errorMessage","RangeError","diceFn","range","natural","_copyObject","source","target","key","keys","o_keys","l","_copyArray","copyObject","_target","isArray","Array","MAX_INT","MIN_INT","NUMBERS","CHARS_LOWER","CHARS_UPPER","toUpperCase","HEX_POOL","slice","VERSION","base64","Error","btoa","input","bool","likelihood","character","alpha","symbols","letters","pool","casing","charAt","max","floating","fixed","precision","num","Math","pow","min","integer","num_fixed","toFixed","parseFloat","floor","hex","string","text","n","join","capitalize","word","substr","mixin","obj","func_name","unique","fn","comparator","arr","val","indexOf","result","count","MAX_DUPLICATES","params","clonedParams","JSON","parse","stringify","apply","push","pad","number","width","pick","shuffle","pickone","pickset","old_array","new_array","Number","splice","weighted","weights","trim","sum","weightIndex","isNaN","chosenIdx","selected","total","lastGoodIdx","chosen","paragraph","sentences","sentence_array","sentence","words","punctuation","word_array","syllable","chr","consonants","vowels","all","syllables","substring","age","ageRange","type","birthday","currentYear","Date","getFullYear","setFullYear","year","date","cpf","formatted","d1","d2","replace","cnpj","first","gender","nationality","get","toLowerCase","profession","extraGenders","concat","last","israelId","x","y","thisDigit","parseInt","mrz","checkDigit","split","multipliers","runningTotal","forEach","idx","pos","generate","opts","issuer","passportNumber","dob","expiry","that","getMonth","getDate","name","middle","middle_initial","prefix","suffix","name_prefixes","prefixes","abbreviation","name_prefix","full","HIDN","idn_pool","idn_chrs","idn","ssn","ssnFour","dashes","ssn_pool","dash","name_suffixes","suffixes","name_suffix","nationalities","android_id","apple_token","wp8_anid2","wp7_anid","guid","bb_pin","avatar","url","URL_BASE","PROTOCOLS","http","https","FILE_TYPES","bmp","gif","jpg","png","FALLBACKS","404","mm","identicon","monsterid","wavatar","retro","blank","RATINGS","g","pg","r","protocol","email","fileExtension","size","fallback","rating","constructor","md5","color","z","gray","value","delimiter","rgb","hasAlpha","rgbValue","alphaChannel","min_alpha","max_alpha","colorValue","min_rgb","max_rgb","min_green","max_green","min_blue","max_blue","start","end","withHash","symbol","hexstring","isGrayscale","format","console","log","min_red","max_red","undefined","grayscale","domain","tld","fbid","google_analytics","account","property","hashtag","ip","ipv6","ip_addr","klout","semver","include_prerelease","prerelease","rpg","tlds","twitter","domain_prefix","path","extensions","extension","port","address","street","altitude","areacode","parens","city","coordinates","latitude","longitude","countries","country","depth","geohash","geojson","phone","numPick","self","ukNum","parts","section","sections","area","mobile","match","exchange","subscriber","postal","pd","fsa","ldu","counties","county","provinces","province","state","states","us_states_and_dc","territories","armed_forces","short_suffix","street_suffix","street_suffixes","zip","plusfour","ampm","date_string","american","getTime","m","month","raw","daysInMonth","days","numeric","day","hour","twentyfour","minute","second","millisecond","hammertime","months","timestamp","weekday","weekday_only","weekdays","cc","to_generate","cc_type","luhn_calculate","cc_types","types","short_name","currency_types","currency","timezones","timezone","currency_pair","returnAsString","currencies","reduce","acc","item","code","dollar","cents","euro","toLocaleString","exp","exp_year","exp_month","future","month_int","curMonth","curYear","vat","it_vat","iban","alphanum","cf","name_generator","isLast","temp","return_value","map","c","date_generator","lettermonths","checkdigit_generator","range1","range2","evens","odds","digit","pl_pesel","controlNumber","pl_nip","pl_regon","d4","d6","d8","d10","d12","d20","d30","d100","thrown","bits","rolls","p","version","guid_pool","variant_pool","luhn_check","str","digits","reverse","file","fileName","fileOptions","poolCollectionKey","typeRange","extensionObjectCollection","fileType","data","firstNames","male","en","it","female","lastNames","uk","ca","country_regions","us","colorNames","raster","vector","3d","document","abbr","offset","isdst","utc","o_hasOwnProperty","hasOwnProperty","mac_address","separator","networkVersion","mac_pool","mac","normal","mean","dev","normal_pool","s","u","v","norm","sqrt","performanceCounter","round","radio","side","fl","set","values","tv","MersenneTwister","BlueImpMD5","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","mti","init_genrand","init_by_array","init_key","key_length","genrand_int32","mag01","kk","genrand_int31","genrand_real1","genrand_real3","genrand_res53","a","b","safe_add","lsw","msw","bit_roll","cnt","md5_cmn","q","t","md5_ff","d","md5_gg","md5_hh","md5_ii","binl_md5","len","olda","oldb","oldc","oldd","binl2rstr","output","String","fromCharCode","rstr2binl","rstr_md5","rstr_hmac_md5","bkey","ipad","opad","rstr2hex","hex_tab","str2rstr_utf8","unescape","encodeURIComponent","raw_md5","hex_md5","raw_hmac_md5","hex_hmac_md5","importScripts","chance","window","294","_interopRequireDefault","__esModule","default","resolveWithData","Promise","resolve","setTimeout","rejectWithErrors","_len","errors","_key","reject","defineProperty","TRACE_FIXTURES","DEPENDENCIES_FIXTURES","_chance","_chance2","_traceGenerators","_traceGenerators2","_dependencyGenerators","_dependencyGenerators2","_trace","dependencies","traces","traceMap","Map","trace","getTraceId","fetchTrace","id","has","assign","searchTraces","fetchServices","fetchServiceOperations","fetchDependencies","687","_ref","_ref$numOfNodes","numOfNodes","_ref$numOfLinks","numOfLinks","linkFromNodes","nodeList","node","link","_ref2","_ref2$parent","parent","_ref2$child","child","_ref2$callCount","callCount","_ref3","688","_defineProperty","enumerable","configurable","writable","setupParentSpan","spans","parentSpanValues","getParentSpanId","span","levels","nestingLevel","level","_span","getSpanId","attachReferences","duplicateLevelFilter","currentLevels","spanID","find","newLevel","filter","parentSpanId","references","refType","traceID","OPERATIONS_LIST","SERVICE_LIST","_ref$numberOfSpans","numberOfSpans","ceil","_ref$numberOfProcesse","numberOfProcesses","duration","processArray","processes","pMap","processID","traceStartTime","traceEndTime","startTime","tag","_ref2$traceID","_ref2$processes","_ref2$traceStartTime","_ref2$traceEndTime","_ref2$operations","operations","flags","operationName","tags","logs","process","_ref3$services","services","serviceName","_ref4","_ref4$numberOfTraces","numberOfTraces","_ref5","_ref5$numberOfProcess","702","placeHoldersCount","b64","byteLength","toByteArray","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","lookup","encodeChunk","uint8","fromByteArray","extraBytes","maxChunkLength","len2","Uint8Array","703","global","typedArraySupport","__proto__","foo","subarray","e","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","actual","write","fromArrayLike","array","byteOffset","isBuffer","copy","buffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","874","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","875"],"mappings":"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,KAAA,MAAApM,KAAA,iBACAoM,KAAA,MAAApM,KAAA,mBACAoM,KAAA,MAAApM,KAAA,sBACAoM,KAAA,MAAApM,KAAA,kBACAoM,KAAA,MAAApM,KAAA,iBACAoM,KAAA,MAAApM,KAAA,eACAoM,KAAA,MAAApM,KAAA,0DACAoM,KAAA,MAAApM,KAAA,0BACAoM,KAAA,MAAApM,KAAA,6DACAoM,KAAA,MAAApM,KAAA,kDACAoM,KAAA,MAAApM,KAAA,gDACAoM,KAAA,MAAApM,KAAA,eACAoM,KAAA,MAAApM,KAAA,sBACAoM,KAAA,MAAApM,KAAA,kBACAoM,KAAA,MAAApM,KAAA,oBAIb4Q,YAAA,uKACA,sMACA,oMACA,0IACA,mMACA,8LACA,oMACA,0MACA,oNAGAtN,eACAuN,QAAA,+DACAC,QAAA,yFACAC,MAAA,+GACAC,UAAA,oFAIApF,YAEA5L,KAAA,yBACAiR,KAAA,MACAC,QAAA,GACAC,OAAA,EACA/X,KAAA,2CACAgY,KACA,gBAIApR,KAAA,SACAiR,KAAA,IACAC,QAAA,GACAC,OAAA,EACA/X,KAAA;AACAgY,KACA,aACA,iBACA,eACA,uBAIApR,KAAA,yBACAiR,KAAA,MACAC,QAAA,GACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,aACA,mBACA,mBACA,oBACA,oBAIApR,KAAA,wBACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,oBACA,iBACA,eACA,gBACA,qBAIApR,KAAA,iCACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,8BACAgY,KACA,0BAIApR,KAAA,wBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,yCACAgY,KACA,iBACA,sBACA,kBACA,oBACA,qBACA,aAIApR,KAAA,4BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,kBACA,uBACA,qBACA,kBACA,eAIApR,KAAA,kCACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,0CACAgY,KACA,oBACA,sBAIApR,KAAA,yBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,0CACAgY,KACA,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,aAIApR,KAAA,gCACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,8BACAgY,KACA,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,uBAIApR,KAAA,wBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,yCACAgY,KACA,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,aAIApR,KAAA,iCACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,kDACAgY,KACA,yBACA,iBACA,iBACA,sBACA,uBAIApR,KAAA,+BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,2BACAgY,KACA,iBACA,2BAIApR,KAAA,2BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,kCACAgY,KACA,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,eAIApR,KAAA,wBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,yCACAgY,KACA,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,aAIApR,KAAA,2BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,6BACAgY,KACA,0BACA,wBACA,0BAIApR,KAAA,0BACAiR,KAAA,MACAC,QAAA,IACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,qBAIApR,KAAA,yBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,sBAIApR,KAAA,yBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,qCACAgY,KACA,oBACA,oBACA,kBACA,kBACA,gBACA,sBAIApR,KAAA,kCACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,uBACA,oBAIApR,KAAA,2BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,mDACAgY,KACA,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,eAIApR,KAAA,2BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,mBACA,uBAIApR,KAAA,6BACAiR,KAAA,MACAC,QAAA,IACAC,OAAA,EACA/X,KAAA,2BACAgY,KACA,sBAIApR,KAAA,iCACAiR,KAAA,QACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,uBAIApR,KAAA,0BACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,2BACAgY,KACA,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,qBAIApR,KAAA,2BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,iCACAgY,KACA,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,eAIApR,KAAA,0BACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,wBACAgY,KACA,qBAIApR,KAAA,2BACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,yBACAgY,KACA,wBAIApR,KAAA,sBACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,mBAIApR,KAAA,SACAiR,KAAA,IACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,4CACAgY,KACA,kBACA,yBACA,eAIApR,KAAA,6BACAiR,KAAA,MACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,mCAGA4G,KAAA,uBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,uBACA,qBAIApR,KAAA,2BACAiR,KAAA,OACAC,QAAA,EACAC,OAAA,EACA/X,KAAA,6BACAgY,KACA,sBACA,eAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,mBACAgY,KACA,oBACA,qBAIApR,KAAA,MACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,mCACAgY,KACA,uBACA,aAIApR,KAAA,oBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,0CACAgY,KACA,kBACA,kBACA,mBACA,gBACA,kBACA,qBACA,gBACA,gBACA,mBAIApR,KAAA,0BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,4BACAgY,KACA,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,wBAIApR,KAAA,0BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,+DACAgY,KACA,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,mBAIApR,KAAA,+BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,gEACAgY,KACA,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,mBAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,kDACAgY,KACA,eACA,kBACA,oBACA,gBACA,kBAIApR,KAAA,iCACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,+CACAgY,KACA,kBACA,gBACA,gBACA,mBAIApR,KAAA,kCACAiR,KAAA,QACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,kCACAgY,KACA,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,eAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,qBAIApR,KAAA,oBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,gCACAgY,KACA,eACA,gBACA,mBACA,qBAIApR,KAAA,4BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,iBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,kBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,mBAIApR,KAAA,0BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,0BAGA4G,KAAA,6BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,+BACAgY,KACA,kBACA,mBACA,kBACA,gBACA,sBACA,gBACA,oBACA,gBACA,gBACA,gBACA,iBACA,eAIApR,KAAA,oBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,4DACAgY,KACA,kBACA,cACA,mBACA,cACA,eACA,iBACA,kBACA,iBACA,uBAIApR,KAAA,uBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,qBAIApR,KAAA,uBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,wBACAgY,KACA,oBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,oBAIApR,KAAA,uBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,gBAIApR,KAAA,uBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,kBAIApR,KAAA,4BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,iCACAgY,KACA,qBACA,kBAIApR,KAAA,qBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,6BACAgY,KACA,YACA,eACA,cACA,aACA,iBAIApR,KAAA,0BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,qBACA,gBACA,uBACA,kBACA,cACA,iBACA,kBACA,mBACA,iBACA,mBACA,YACA,sBACA,gBACA,oBAIApR,KAAA,qBACAiR,KAAA,MACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,iBAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,gCACAgY,KACA,aACA,cACA,eAIApR,KAAA,2BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,mBACAgY,KACA,eAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,gDACAgY,KACA,gBACA,gBACA,oBACA,sBAIApR,KAAA,0BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,yBACAgY,KACA,cACA,mBACA,oBAIApR,KAAA,yBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,kBAIApR,KAAA,yBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,kBAIApR,KAAA,4BACAiR,KAAA,MACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,gBAIApR,KAAA,0BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,iCACAgY,KACA,oBACA,aACA,cACA,gBACA,gBACA,YACA,iBACA,gBACA,YACA,mBACA,qBAIApR,KAAA,yBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,iCACAgY,KACA,kBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,kDACAgY,KACA,mBAIApR,KAAA,0BACAiR,KAAA,OACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,kCACAgY,KACA,kBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,KACAC,OAAA,EACA/X,KAAA,wBACAgY,KACA,mBAIApR,KAAA,6BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,oBACA,cACA,eACA,iBACA,cACA,YACA,mBAIApR,KAAA,2BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,aACA,kBAIApR,KAAA,6BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,2BACAgY,KACA,wBAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,+BACAgY,KACA,eACA,kBAIApR,KAAA,wBACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sCACAgY,KACA,mBACA,eACA,YACA,eACA,kBACA,iBACA,cACA,iBACA,YACA,sBAIApR,KAAA,gCACAiR,KAAA,QACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,0BACAgY,KACA,oBACA,mBACA,eAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oDACAgY,KACA,iBACA,aACA,mBAIApR,KAAA,2BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,0BACAgY,KACA,sBAIApR,KAAA,0BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sCACAgY,KACA,cACA,oBACA,eACA,gBACA,cACA,iBACA,eAIApR,KAAA,6BACAiR,KAAA,OACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,mBACA,qBAIApR,KAAA,uBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,iBAIApR,KAAA,4BACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,0BACAgY,KACA,kBACA,sBAIApR,KAAA,gCACAiR,KAAA,QACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,kBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oCACAgY,KACA,YACA,gBACA,aACA,YACA,mBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,EACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,iBACA,gBAIApR,KAAA,+BACAiR,KAAA,OACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,qBACA,2BAIApR,KAAA,4BACAiR,KAAA,OACAC,OAAA,IACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,sBAIApR,KAAA,6BACAiR,KAAA,OACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,uBACAgY,KACA,qBACA,wBAIApR,KAAA,4BACAiR,KAAA,OACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,0CACAgY,KACA,sBACA,sBAIApR,KAAA,6BACAiR,KAAA,OACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,iCACAgY,KACA,4BACA,aACA,eACA,uBACA,iBACA,kBAIApR,KAAA,yBACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,qBACAgY,KACA,mBACA,sBAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,aACA,gBACA,kBAIApR,KAAA,gCACAiR,KAAA,OACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,yCACAgY,KACA,uBACA,aACA,gBACA,sBACA,iBACA,iBACA,oBAIApR,KAAA,4BACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,0BACAgY,KACA,gBACA,gBACA,sBAIApR,KAAA,4BACAiR,KAAA,OACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,mCACAgY,KACA,qBACA,sBAIApR,KAAA,SACAiR,KAAA,IACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,4CACAgY,KACA,aACA,mBACA,oBACA,iBACA,gBACA,iBACA,eACA,oBAIApR,KAAA,qBACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,mBACAgY,KACA,kBAIApR,KAAA,wBACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,sBACAgY,KACA,cACA,iBACA,eACA,wBAIApR,KAAA,0BACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,+CAGA4G,KAAA,sBACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,yBACAgY,KACA,aACA,oBACA,kBACA,uBAIApR,KAAA,sBACAiR,KAAA,MACAC,OAAA,GACAC,OAAA,EACA/X,KAAA,oBACAgY,KACA,kBAKA9S,YACA,gBACA,gBACA,aACA,oBACA,QACA,UACA,sBACA,uBACA,yBACA,gBACA,uBACA,qBACA,QACA,yBACA,yBACA,yBACA,iBACA,iBACA,YACA,YACA,eACA,SACA,aACA,iBACA,UACA,SACA,QACA,SACA,sBACA,mBACA,YACA,0BACA,sBACA,0BACA,cACA,SACA,mBACA,sBACA,qBACA,mBACA,mBACA,mBACA,QACA,sBACA,mBACA,eACA,mBACA,0BACA,0BACA,OACA,oBACA,UACA,qBACA,wBACA,eACA,kBACA,uBACA,eACA,iBACA,iBACA,8BACA,uBACA,qBACA,cACA,mBACA,oBACA,kCACA,0BACA,0BACA,uBACA,sBACA,wBACA,oBACA,oBACA,+BACA,wBACA,uBACA,aACA,6BACA,yBACA,qBACA,aACA,oBACA,sBACA,gBACA,iBACA,kBACA,4BACA,2BACA,2BACA,eACA,SACA,wBACA,mBACA,sBACA,UACA,WACA,kBACA,oBACA,YACA,sBACA,mBACA,YACA,kBACA,WACA,uBACA,oBACA,YACA,yBACA,SACA,sBACA,sBACA,2BACA,uBACA,qBACA,mBACA,sBACA,eACA,wBACA,yBACA,yBACA,2BACA,iBACA,YACA,sBACA,qBACA,sBACA,qBACA,mBACA,yBACA,uBACA,oBACA,gBACA,4BACA,oBACA,oBACA,YACA,cACA,sBACA,qBACA,mBACA,kBACA,kBACA,2BACA,uBACA,sBACA,uBACA,kBACA,qBACA,mBACA,cACA,kBACA,YACA,kBACA,uBACA,gBACA,uBACA,oBACA,eACA,mBACA,iBACA,0BACA,sBACA,mBACA,+BACA,kBACA,iBACA,iBACA,yBACA,gBACA,0BACA,WACA,sBACA,sBACA,uBACA,eACA,qBACA,qBACA,6BACA,sBACA,wBACA,uBACA,cACA,eACA,oBACA,qBACA,eACA,qBACA,qBACA,UACA,wBACA,aACA,mBACA,kBACA,0BACA,wBACA,iBACA,iBACA,sBACA,0BACA,SACA,yBACA,8BACA,kBACA,kBACA,kBACA,sBACA,eACA,WACA,oBACA,sBACA,wBACA,wBACA,mBACA,yBACA,mBACA,mBACA,sBACA,qBACA,oBACA,gBACA,sBACA,WACA,sBACA,cACA,mBACA,oBACA,qBACA,0BACA,eACA,4BACA,gBACA,iBACA,cACA,0BACA,sBACA,WACA,wBACA,qBACA,mBACA,sBACA,WACA,mBACA,qBACA,eACA,wBACA,yBACA,gBACA,iBACA,qBACA,+BACA,qBACA,cACA,qCACA,0BACA,YACA,cACA,kBACA,qBACA,uBACA,qBACA,aACA,eACA,qBACA,YACA,sBACA,YACA,oBACA,aACA,oBACA,sBACA,aACA,oBACA,uBACA,oBACA,YACA,iBACA,uBACA,oBACA,mBACA,WACA,kBACA,mBACA,sBACA,qBACA,uBACA,qBACA,YACA,mBACA,kBACA,kBACA,mBACA,uBACA,yBACA,gBACA,YACA,mBACA,sBACA,+BACA,2BACA,4BACA,oBACA,oBACA,qBACA,wBACA,YACA,2BACA,6BACA,mBACA,2BACA,qBACA,WACA,sBACA,qBACA,uBACA,eACA,kBACA,iBACA,gBACA,0BACA,uBACA,gBACA,kBACA,sBACA,wBACA,oBACA,qBACA,sBACA,oBACA,oBACA,iBACA,SACA,kBACA,yBACA,kBACA,mBACA,gBACA,cACA,qBACA,oBACA,yBACA,iBACA,yBACA,4BACA,4BACA,qBACA,gBACA,uBACA,eACA,gBACA,8BACA,8BACA,8BACA,cACA,WACA,sBACA,iBACA,wBACA,kBACA,kBACA,qBACA,uBACA,iBACA,UACA,+BACA,wBACA,mBACA,sBACA,kBACA,eACA,sBACA,iBACA,cACA,sBACA,kBACA,qBACA,yBACA,eACA,YACA,gB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","file":"static/js/1.acaf8887.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 179:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Buffer) {//  Chance.js 1.0.6\n\t//  http://chancejs.com\n\t//  (c) 2013 Victor Quinn\n\t//  Chance may be freely distributed or modified under the MIT license.\n\t\n\t(function () {\n\t\n\t    // Constants\n\t    var MAX_INT = 9007199254740992;\n\t    var MIN_INT = -MAX_INT;\n\t    var NUMBERS = '0123456789';\n\t    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n\t    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n\t    var HEX_POOL  = NUMBERS + \"abcdef\";\n\t\n\t    // Cached array helpers\n\t    var slice = Array.prototype.slice;\n\t\n\t    // Constructor\n\t    function Chance (seed) {\n\t        if (!(this instanceof Chance)) {\n\t            return seed == null ? new Chance() : new Chance(seed);\n\t        }\n\t\n\t        // if user has provided a function, use that as the generator\n\t        if (typeof seed === 'function') {\n\t            this.random = seed;\n\t            return this;\n\t        }\n\t\n\t        if (arguments.length) {\n\t            // set a starting value of zero so we can add to it\n\t            this.seed = 0;\n\t        }\n\t\n\t        // otherwise, leave this.seed blank so that MT will receive a blank\n\t\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            var seedling = 0;\n\t            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\n\t                for (var j = 0; j < arguments[i].length; j++) {\n\t                    // create a numeric hash for each argument, add to seedling\n\t                    var hash = 0;\n\t                    for (var k = 0; k < arguments[i].length; k++) {\n\t                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\n\t                    }\n\t                    seedling += hash;\n\t                }\n\t            } else {\n\t                seedling = arguments[i];\n\t            }\n\t            this.seed += (arguments.length - i) * seedling;\n\t        }\n\t\n\t        // If no generator function was provided, use our MT\n\t        this.mt = this.mersenne_twister(this.seed);\n\t        this.bimd5 = this.blueimp_md5();\n\t        this.random = function () {\n\t            return this.mt.random(this.seed);\n\t        };\n\t\n\t        return this;\n\t    }\n\t\n\t    Chance.prototype.VERSION = \"1.0.6\";\n\t\n\t    // Random helper functions\n\t    function initOptions(options, defaults) {\n\t        options || (options = {});\n\t\n\t        if (defaults) {\n\t            for (var i in defaults) {\n\t                if (typeof options[i] === 'undefined') {\n\t                    options[i] = defaults[i];\n\t                }\n\t            }\n\t        }\n\t\n\t        return options;\n\t    }\n\t\n\t    function testRange(test, errorMessage) {\n\t        if (test) {\n\t            throw new RangeError(errorMessage);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Encode the input string with Base64.\n\t     */\n\t    var base64 = function() {\n\t        throw new Error('No Base64 encoder available.');\n\t    };\n\t\n\t    // Select proper Base64 encoder.\n\t    (function determineBase64Encoder() {\n\t        if (typeof btoa === 'function') {\n\t            base64 = btoa;\n\t        } else if (typeof Buffer === 'function') {\n\t            base64 = function(input) {\n\t                return new Buffer(input).toString('base64');\n\t            };\n\t        }\n\t    })();\n\t\n\t    // -- Basics --\n\t\n\t    /**\n\t     *  Return a random bool, either true or false\n\t     *\n\t     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\n\t     *    receiving a true or false value back.\n\t     *  @throws {RangeError} if the likelihood is out of bounds\n\t     *  @returns {Bool} either true or false\n\t     */\n\t    Chance.prototype.bool = function (options) {\n\t        // likelihood of success (true)\n\t        options = initOptions(options, {likelihood : 50});\n\t\n\t        // Note, we could get some minor perf optimizations by checking range\n\t        // prior to initializing defaults, but that makes code a bit messier\n\t        // and the check more complicated as we have to check existence of\n\t        // the object then existence of the key before checking constraints.\n\t        // Since the options initialization should be minor computationally,\n\t        // decision made for code cleanliness intentionally. This is mentioned\n\t        // here as it's the first occurrence, will not be mentioned again.\n\t        testRange(\n\t            options.likelihood < 0 || options.likelihood > 100,\n\t            \"Chance: Likelihood accepts values from 0 to 100.\"\n\t        );\n\t\n\t        return this.random() * 100 < options.likelihood;\n\t    };\n\t\n\t    /**\n\t     *  Return a random character.\n\t     *\n\t     *  @param {Object} [options={}] can specify a character pool, only alpha,\n\t     *    only symbols, and casing (lower or upper)\n\t     *  @returns {String} a single random character\n\t     *  @throws {RangeError} Can only specify alpha or symbols, not both\n\t     */\n\t    Chance.prototype.character = function (options) {\n\t        options = initOptions(options);\n\t        testRange(\n\t            options.alpha && options.symbols,\n\t            \"Chance: Cannot specify both alpha and symbols.\"\n\t        );\n\t\n\t        var symbols = \"!@#$%^&*()[]\",\n\t            letters, pool;\n\t\n\t        if (options.casing === 'lower') {\n\t            letters = CHARS_LOWER;\n\t        } else if (options.casing === 'upper') {\n\t            letters = CHARS_UPPER;\n\t        } else {\n\t            letters = CHARS_LOWER + CHARS_UPPER;\n\t        }\n\t\n\t        if (options.pool) {\n\t            pool = options.pool;\n\t        } else if (options.alpha) {\n\t            pool = letters;\n\t        } else if (options.symbols) {\n\t            pool = symbols;\n\t        } else {\n\t            pool = letters + NUMBERS + symbols;\n\t        }\n\t\n\t        return pool.charAt(this.natural({max: (pool.length - 1)}));\n\t    };\n\t\n\t    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\t\n\t    // Note, fixed means N OR LESS digits after the decimal. This because\n\t    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n\t    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n\t    // needed\n\t    /**\n\t     *  Return a random floating point number\n\t     *\n\t     *  @param {Object} [options={}] can specify a fixed precision, min, max\n\t     *  @returns {Number} a single floating point number\n\t     *  @throws {RangeError} Can only specify fixed or precision, not both. Also\n\t     *    min cannot be greater than max\n\t     */\n\t    Chance.prototype.floating = function (options) {\n\t        options = initOptions(options, {fixed : 4});\n\t        testRange(\n\t            options.fixed && options.precision,\n\t            \"Chance: Cannot specify both fixed and precision.\"\n\t        );\n\t\n\t        var num;\n\t        var fixed = Math.pow(10, options.fixed);\n\t\n\t        var max = MAX_INT / fixed;\n\t        var min = -max;\n\t\n\t        testRange(\n\t            options.min && options.fixed && options.min < min,\n\t            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n\t        );\n\t        testRange(\n\t            options.max && options.fixed && options.max > max,\n\t            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n\t        );\n\t\n\t        options = initOptions(options, { min : min, max : max });\n\t\n\t        // Todo - Make this work!\n\t        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\t\n\t        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n\t        var num_fixed = (num / fixed).toFixed(options.fixed);\n\t\n\t        return parseFloat(num_fixed);\n\t    };\n\t\n\t    /**\n\t     *  Return a random integer\n\t     *\n\t     *  NOTE the max and min are INCLUDED in the range. So:\n\t     *  chance.integer({min: 1, max: 3});\n\t     *  would return either 1, 2, or 3.\n\t     *\n\t     *  @param {Object} [options={}] can specify a min and/or max\n\t     *  @returns {Number} a single random integer number\n\t     *  @throws {RangeError} min cannot be greater than max\n\t     */\n\t    Chance.prototype.integer = function (options) {\n\t        // 9007199254740992 (2^53) is the max integer number in JavaScript\n\t        // See: http://vq.io/132sa2j\n\t        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\t\n\t        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n\t    };\n\t\n\t    /**\n\t     *  Return a random natural\n\t     *\n\t     *  NOTE the max and min are INCLUDED in the range. So:\n\t     *  chance.natural({min: 1, max: 3});\n\t     *  would return either 1, 2, or 3.\n\t     *\n\t     *  @param {Object} [options={}] can specify a min and/or max\n\t     *  @returns {Number} a single random integer number\n\t     *  @throws {RangeError} min cannot be greater than max\n\t     */\n\t    Chance.prototype.natural = function (options) {\n\t        options = initOptions(options, {min: 0, max: MAX_INT});\n\t        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\t        return this.integer(options);\n\t    };\n\t\t\n\t\t/**\n\t     *  Return a random hex number as string\n\t     *\n\t     *  NOTE the max and min are INCLUDED in the range. So:\n\t     *  chance.hex({min: '9', max: 'B'});\n\t     *  would return either '9', 'A' or 'B'.\n\t     *\n\t     *  @param {Object} [options={}] can specify a min and/or max and/or casing\n\t     *  @returns {String} a single random string hex number\n\t     *  @throws {RangeError} min cannot be greater than max\n\t     */\n\t    Chance.prototype.hex = function (options) {\n\t        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});\n\t        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\t\t\tvar integer = this.natural({min: options.min, max: options.max});\n\t\t\tif (options.casing === 'upper') {\n\t\t\t\treturn integer.toString(16).toUpperCase();\n\t\t\t}\n\t\t\treturn integer.toString(16);\n\t    };\n\t\n\t    /**\n\t     *  Return a random string\n\t     *\n\t     *  @param {Object} [options={}] can specify a length\n\t     *  @returns {String} a string of random length\n\t     *  @throws {RangeError} length cannot be less than zero\n\t     */\n\t    Chance.prototype.string = function (options) {\n\t        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\n\t        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n\t        var length = options.length,\n\t            text = this.n(this.character, length, options);\n\t\n\t        return text.join(\"\");\n\t    };\n\t\n\t    // -- End Basics --\n\t\n\t    // -- Helpers --\n\t\n\t    Chance.prototype.capitalize = function (word) {\n\t        return word.charAt(0).toUpperCase() + word.substr(1);\n\t    };\n\t\n\t    Chance.prototype.mixin = function (obj) {\n\t        for (var func_name in obj) {\n\t            Chance.prototype[func_name] = obj[func_name];\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     *  Given a function that generates something random and a number of items to generate,\n\t     *    return an array of items where none repeat.\n\t     *\n\t     *  @param {Function} fn the function that generates something random\n\t     *  @param {Number} num number of terms to generate\n\t     *  @param {Object} options any options to pass on to the generator function\n\t     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\n\t     *\n\t     *  There can be more parameters after these. All additional parameters are provided to the given function\n\t     */\n\t    Chance.prototype.unique = function(fn, num, options) {\n\t        testRange(\n\t            typeof fn !== \"function\",\n\t            \"Chance: The first argument must be a function.\"\n\t        );\n\t\n\t        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };\n\t\n\t        if (options) {\n\t            comparator = options.comparator || comparator;\n\t        }\n\t\n\t        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\t\n\t        while (arr.length < num) {\n\t            var clonedParams = JSON.parse(JSON.stringify(params));\n\t            result = fn.apply(this, clonedParams);\n\t            if (!comparator(arr, result)) {\n\t                arr.push(result);\n\t                // reset count when unique found\n\t                count = 0;\n\t            }\n\t\n\t            if (++count > MAX_DUPLICATES) {\n\t                throw new RangeError(\"Chance: num is likely too large for sample set\");\n\t            }\n\t        }\n\t        return arr;\n\t    };\n\t\n\t    /**\n\t     *  Gives an array of n random terms\n\t     *\n\t     *  @param {Function} fn the function that generates something random\n\t     *  @param {Number} n number of terms to generate\n\t     *  @returns {Array} an array of length `n` with items generated by `fn`\n\t     *\n\t     *  There can be more parameters after these. All additional parameters are provided to the given function\n\t     */\n\t    Chance.prototype.n = function(fn, n) {\n\t        testRange(\n\t            typeof fn !== \"function\",\n\t            \"Chance: The first argument must be a function.\"\n\t        );\n\t\n\t        if (typeof n === 'undefined') {\n\t            n = 1;\n\t        }\n\t        var i = n, arr = [], params = slice.call(arguments, 2);\n\t\n\t        // Providing a negative count should result in a noop.\n\t        i = Math.max( 0, i );\n\t\n\t        for (null; i--; null) {\n\t            arr.push(fn.apply(this, params));\n\t        }\n\t\n\t        return arr;\n\t    };\n\t\n\t    // H/T to SO for this one: http://vq.io/OtUrZ5\n\t    Chance.prototype.pad = function (number, width, pad) {\n\t        // Default pad to 0 if none provided\n\t        pad = pad || '0';\n\t        // Convert number to a string\n\t        number = number + '';\n\t        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n\t    };\n\t\n\t    // DEPRECATED on 2015-10-01\n\t    Chance.prototype.pick = function (arr, count) {\n\t        if (arr.length === 0) {\n\t            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n\t        }\n\t        if (!count || count === 1) {\n\t            return arr[this.natural({max: arr.length - 1})];\n\t        } else {\n\t            return this.shuffle(arr).slice(0, count);\n\t        }\n\t    };\n\t\n\t    // Given an array, returns a single random element\n\t    Chance.prototype.pickone = function (arr) {\n\t        if (arr.length === 0) {\n\t          throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\n\t        }\n\t        return arr[this.natural({max: arr.length - 1})];\n\t    };\n\t\n\t    // Given an array, returns a random set with 'count' elements\n\t    Chance.prototype.pickset = function (arr, count) {\n\t        if (count === 0) {\n\t            return [];\n\t        }\n\t        if (arr.length === 0) {\n\t            throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\n\t        }\n\t        if (count < 0) {\n\t            throw new RangeError(\"Chance: count must be positive number\");\n\t        }\n\t        if (!count || count === 1) {\n\t            return [ this.pickone(arr) ];\n\t        } else {\n\t            return this.shuffle(arr).slice(0, count);\n\t        }\n\t    };\n\t\n\t    Chance.prototype.shuffle = function (arr) {\n\t        var old_array = arr.slice(0),\n\t            new_array = [],\n\t            j = 0,\n\t            length = Number(old_array.length);\n\t\n\t        for (var i = 0; i < length; i++) {\n\t            // Pick a random index from the array\n\t            j = this.natural({max: old_array.length - 1});\n\t            // Add it to the new array\n\t            new_array[i] = old_array[j];\n\t            // Remove that element from the original array\n\t            old_array.splice(j, 1);\n\t        }\n\t\n\t        return new_array;\n\t    };\n\t\n\t    // Returns a single item from an array with relative weighting of odds\n\t    Chance.prototype.weighted = function (arr, weights, trim) {\n\t        if (arr.length !== weights.length) {\n\t            throw new RangeError(\"Chance: length of array and weights must match\");\n\t        }\n\t\n\t        // scan weights array and sum valid entries\n\t        var sum = 0;\n\t        var val;\n\t        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n\t            val = weights[weightIndex];\n\t            if (isNaN(val)) {\n\t                throw new RangeError(\"all weights must be numbers\");\n\t            }\n\t\n\t            if (val > 0) {\n\t                sum += val;\n\t            }\n\t        }\n\t\n\t        if (sum === 0) {\n\t            throw new RangeError(\"Chance: no valid entries in array weights\");\n\t        }\n\t\n\t        // select a value within range\n\t        var selected = this.random() * sum;\n\t\n\t        // find array entry corresponding to selected value\n\t        var total = 0;\n\t        var lastGoodIdx = -1;\n\t        var chosenIdx;\n\t        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n\t            val = weights[weightIndex];\n\t            total += val;\n\t            if (val > 0) {\n\t                if (selected <= total) {\n\t                    chosenIdx = weightIndex;\n\t                    break;\n\t                }\n\t                lastGoodIdx = weightIndex;\n\t            }\n\t\n\t            // handle any possible rounding error comparison to ensure something is picked\n\t            if (weightIndex === (weights.length - 1)) {\n\t                chosenIdx = lastGoodIdx;\n\t            }\n\t        }\n\t\n\t        var chosen = arr[chosenIdx];\n\t        trim = (typeof trim === 'undefined') ? false : trim;\n\t        if (trim) {\n\t            arr.splice(chosenIdx, 1);\n\t            weights.splice(chosenIdx, 1);\n\t        }\n\t\n\t        return chosen;\n\t    };\n\t\n\t    // -- End Helpers --\n\t\n\t    // -- Text --\n\t\n\t    Chance.prototype.paragraph = function (options) {\n\t        options = initOptions(options);\n\t\n\t        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n\t            sentence_array = this.n(this.sentence, sentences);\n\t\n\t        return sentence_array.join(' ');\n\t    };\n\t\n\t    // Could get smarter about this than generating random words and\n\t    // chaining them together. Such as: http://vq.io/1a5ceOh\n\t    Chance.prototype.sentence = function (options) {\n\t        options = initOptions(options);\n\t\n\t        var words = options.words || this.natural({min: 12, max: 18}),\n\t            punctuation = options.punctuation,\n\t            text, word_array = this.n(this.word, words);\n\t\n\t        text = word_array.join(' ');\n\t\n\t        // Capitalize first letter of sentence\n\t        text = this.capitalize(text);\n\t\n\t        // Make sure punctuation has a usable value\n\t        if (punctuation !== false && !/^[\\.\\?;!:]$/.test(punctuation)) {\n\t            punctuation = '.';\n\t        }\n\t\n\t        // Add punctuation mark\n\t        if (punctuation) {\n\t            text += punctuation;\n\t        }\n\t\n\t        return text;\n\t    };\n\t\n\t    Chance.prototype.syllable = function (options) {\n\t        options = initOptions(options);\n\t\n\t        var length = options.length || this.natural({min: 2, max: 3}),\n\t            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n\t            vowels = 'aeiou', // vowels\n\t            all = consonants + vowels, // all\n\t            text = '',\n\t            chr;\n\t\n\t        // I'm sure there's a more elegant way to do this, but this works\n\t        // decently well.\n\t        for (var i = 0; i < length; i++) {\n\t            if (i === 0) {\n\t                // First character can be anything\n\t                chr = this.character({pool: all});\n\t            } else if (consonants.indexOf(chr) === -1) {\n\t                // Last character was a vowel, now we want a consonant\n\t                chr = this.character({pool: consonants});\n\t            } else {\n\t                // Last character was a consonant, now we want a vowel\n\t                chr = this.character({pool: vowels});\n\t            }\n\t\n\t            text += chr;\n\t        }\n\t\n\t        if (options.capitalize) {\n\t            text = this.capitalize(text);\n\t        }\n\t\n\t        return text;\n\t    };\n\t\n\t    Chance.prototype.word = function (options) {\n\t        options = initOptions(options);\n\t\n\t        testRange(\n\t            options.syllables && options.length,\n\t            \"Chance: Cannot specify both syllables AND length.\"\n\t        );\n\t\n\t        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n\t            text = '';\n\t\n\t        if (options.length) {\n\t            // Either bound word by length\n\t            do {\n\t                text += this.syllable();\n\t            } while (text.length < options.length);\n\t            text = text.substring(0, options.length);\n\t        } else {\n\t            // Or by number of syllables\n\t            for (var i = 0; i < syllables; i++) {\n\t                text += this.syllable();\n\t            }\n\t        }\n\t\n\t        if (options.capitalize) {\n\t            text = this.capitalize(text);\n\t        }\n\t\n\t        return text;\n\t    };\n\t\n\t    // -- End Text --\n\t\n\t    // -- Person --\n\t\n\t    Chance.prototype.age = function (options) {\n\t        options = initOptions(options);\n\t        var ageRange;\n\t\n\t        switch (options.type) {\n\t            case 'child':\n\t                ageRange = {min: 0, max: 12};\n\t                break;\n\t            case 'teen':\n\t                ageRange = {min: 13, max: 19};\n\t                break;\n\t            case 'adult':\n\t                ageRange = {min: 18, max: 65};\n\t                break;\n\t            case 'senior':\n\t                ageRange = {min: 65, max: 100};\n\t                break;\n\t            case 'all':\n\t                ageRange = {min: 0, max: 100};\n\t                break;\n\t            default:\n\t                ageRange = {min: 18, max: 65};\n\t                break;\n\t        }\n\t\n\t        return this.natural(ageRange);\n\t    };\n\t\n\t    Chance.prototype.birthday = function (options) {\n\t        var age = this.age(options);\n\t        var currentYear = new Date().getFullYear();\n\t\n\t        if (options && options.type) {\n\t            var min = new Date();\n\t            var max = new Date();\n\t            min.setFullYear(currentYear - age - 1);\n\t            max.setFullYear(currentYear - age);\n\t\n\t            options = initOptions(options, {\n\t                min: min,\n\t                max: max\n\t            });\n\t        } else {\n\t            options = initOptions(options, {\n\t                year: currentYear - age\n\t            });\n\t        }\n\t\n\t        return this.date(options);\n\t    };\n\t\n\t    // CPF; ID to identify taxpayers in Brazil\n\t    Chance.prototype.cpf = function (options) {\n\t        options = initOptions(options, {\n\t            formatted: true\n\t        });\n\t\n\t        var n = this.n(this.natural, 9, { max: 9 });\n\t        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n\t        d1 = 11 - (d1 % 11);\n\t        if (d1>=10) {\n\t            d1 = 0;\n\t        }\n\t        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n\t        d2 = 11 - (d2 % 11);\n\t        if (d2>=10) {\n\t            d2 = 0;\n\t        }\n\t        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n\t        return options.formatted ? cpf : cpf.replace(/\\D/g,'');\n\t    };\n\t\n\t    // CNPJ: ID to identify companies in Brazil\n\t    Chance.prototype.cnpj = function (options) {\n\t        options = initOptions(options, {\n\t            formatted: true\n\t        });\n\t\n\t        var n = this.n(this.natural, 12, { max: 12 });\n\t        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n\t        d1 = 11 - (d1 % 11);\n\t        if (d1<2) {\n\t            d1 = 0;\n\t        }\n\t        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n\t        d2 = 11 - (d2 % 11);\n\t        if (d2<2) {\n\t            d2 = 0;\n\t        }\n\t        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;\n\t        return options.formatted ? cnpj : cnpj.replace(/\\D/g,'');\n\t    };\n\t\n\t    Chance.prototype.first = function (options) {\n\t        options = initOptions(options, {gender: this.gender(), nationality: 'en'});\n\t        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\n\t    };\n\t\n\t    Chance.prototype.profession = function () {\n\t        return this.pick(this.get(\"professions\"));\n\t    };\n\t\n\t    Chance.prototype.gender = function (options) {\n\t        options = initOptions(options, {extraGenders: []});\n\t        return this.pick(['Male', 'Female'].concat(options.extraGenders));\n\t    };\n\t\n\t    Chance.prototype.last = function (options) {\n\t        options = initOptions(options, {nationality: 'en'});\n\t        return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\n\t    };\n\t\n\t    Chance.prototype.israelId=function(){\n\t        var x=this.string({pool: '0123456789',length:8});\n\t        var y=0;\n\t        for (var i=0;i<x.length;i++){\n\t            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);\n\t            thisDigit=this.pad(thisDigit,2).toString();\n\t            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\n\t            y=y+thisDigit;\n\t        }\n\t        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);\n\t        return x;\n\t    };\n\t\n\t    Chance.prototype.mrz = function (options) {\n\t        var checkDigit = function (input) {\n\t            var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\n\t                multipliers = [ 7, 3, 1 ],\n\t                runningTotal = 0;\n\t\n\t            if (typeof input !== 'string') {\n\t                input = input.toString();\n\t            }\n\t\n\t            input.split('').forEach(function(character, idx) {\n\t                var pos = alpha.indexOf(character);\n\t\n\t                if(pos !== -1) {\n\t                    character = pos === 0 ? 0 : pos + 9;\n\t                } else {\n\t                    character = parseInt(character, 10);\n\t                }\n\t                character *= multipliers[idx % multipliers.length];\n\t                runningTotal += character;\n\t            });\n\t            return runningTotal % 10;\n\t        };\n\t        var generate = function (opts) {\n\t            var pad = function (length) {\n\t                return new Array(length + 1).join('<');\n\t            };\n\t            var number = [ 'P<',\n\t                           opts.issuer,\n\t                           opts.last.toUpperCase(),\n\t                           '<<',\n\t                           opts.first.toUpperCase(),\n\t                           pad(39 - (opts.last.length + opts.first.length + 2)),\n\t                           opts.passportNumber,\n\t                           checkDigit(opts.passportNumber),\n\t                           opts.nationality,\n\t                           opts.dob,\n\t                           checkDigit(opts.dob),\n\t                           opts.gender,\n\t                           opts.expiry,\n\t                           checkDigit(opts.expiry),\n\t                           pad(14),\n\t                           checkDigit(pad(14)) ].join('');\n\t\n\t            return number +\n\t                (checkDigit(number.substr(44, 10) +\n\t                            number.substr(57, 7) +\n\t                            number.substr(65, 7)));\n\t        };\n\t\n\t        var that = this;\n\t\n\t        options = initOptions(options, {\n\t            first: this.first(),\n\t            last: this.last(),\n\t            passportNumber: this.integer({min: 100000000, max: 999999999}),\n\t            dob: (function () {\n\t                var date = that.birthday({type: 'adult'});\n\t                return [date.getFullYear().toString().substr(2),\n\t                        that.pad(date.getMonth() + 1, 2),\n\t                        that.pad(date.getDate(), 2)].join('');\n\t            }()),\n\t            expiry: (function () {\n\t                var date = new Date();\n\t                return [(date.getFullYear() + 5).toString().substr(2),\n\t                        that.pad(date.getMonth() + 1, 2),\n\t                        that.pad(date.getDate(), 2)].join('');\n\t            }()),\n\t            gender: this.gender() === 'Female' ? 'F': 'M',\n\t            issuer: 'GBR',\n\t            nationality: 'GBR'\n\t        });\n\t        return generate (options);\n\t    };\n\t\n\t    Chance.prototype.name = function (options) {\n\t        options = initOptions(options);\n\t\n\t        var first = this.first(options),\n\t            last = this.last(options),\n\t            name;\n\t\n\t        if (options.middle) {\n\t            name = first + ' ' + this.first(options) + ' ' + last;\n\t        } else if (options.middle_initial) {\n\t            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n\t        } else {\n\t            name = first + ' ' + last;\n\t        }\n\t\n\t        if (options.prefix) {\n\t            name = this.prefix(options) + ' ' + name;\n\t        }\n\t\n\t        if (options.suffix) {\n\t            name = name + ' ' + this.suffix(options);\n\t        }\n\t\n\t        return name;\n\t    };\n\t\n\t    // Return the list of available name prefixes based on supplied gender.\n\t    // @todo introduce internationalization\n\t    Chance.prototype.name_prefixes = function (gender) {\n\t        gender = gender || \"all\";\n\t        gender = gender.toLowerCase();\n\t\n\t        var prefixes = [\n\t            { name: 'Doctor', abbreviation: 'Dr.' }\n\t        ];\n\t\n\t        if (gender === \"male\" || gender === \"all\") {\n\t            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n\t        }\n\t\n\t        if (gender === \"female\" || gender === \"all\") {\n\t            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n\t            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n\t        }\n\t\n\t        return prefixes;\n\t    };\n\t\n\t    // Alias for name_prefix\n\t    Chance.prototype.prefix = function (options) {\n\t        return this.name_prefix(options);\n\t    };\n\t\n\t    Chance.prototype.name_prefix = function (options) {\n\t        options = initOptions(options, { gender: \"all\" });\n\t        return options.full ?\n\t            this.pick(this.name_prefixes(options.gender)).name :\n\t            this.pick(this.name_prefixes(options.gender)).abbreviation;\n\t    };\n\t    //Hungarian ID number\n\t    Chance.prototype.HIDN= function(){\n\t     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\n\t      var idn_pool=\"0123456789\";\n\t      var idn_chrs=\"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\n\t      var idn=\"\";\n\t        idn+=this.string({pool:idn_pool,length:6});\n\t        idn+=this.string({pool:idn_chrs,length:2});\n\t        return idn;\n\t    };\n\t\n\t\n\t    Chance.prototype.ssn = function (options) {\n\t        options = initOptions(options, {ssnFour: false, dashes: true});\n\t        var ssn_pool = \"1234567890\",\n\t            ssn,\n\t            dash = options.dashes ? '-' : '';\n\t\n\t        if(!options.ssnFour) {\n\t            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n\t            this.string({pool: ssn_pool, length: 2}) + dash +\n\t            this.string({pool: ssn_pool, length: 4});\n\t        } else {\n\t            ssn = this.string({pool: ssn_pool, length: 4});\n\t        }\n\t        return ssn;\n\t    };\n\t\n\t    // Return the list of available name suffixes\n\t    // @todo introduce internationalization\n\t    Chance.prototype.name_suffixes = function () {\n\t        var suffixes = [\n\t            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n\t            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n\t            { name: 'Esquire', abbreviation: 'Esq.' },\n\t            { name: 'Junior', abbreviation: 'Jr.' },\n\t            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n\t            { name: 'Master of Arts', abbreviation: 'M.A.' },\n\t            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n\t            { name: 'Master of Science', abbreviation: 'M.S.' },\n\t            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n\t            { name: 'Senior', abbreviation: 'Sr.' },\n\t            { name: 'The Third', abbreviation: 'III' },\n\t            { name: 'The Fourth', abbreviation: 'IV' },\n\t            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },\n\t            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }\n\t        ];\n\t        return suffixes;\n\t    };\n\t\n\t    // Alias for name_suffix\n\t    Chance.prototype.suffix = function (options) {\n\t        return this.name_suffix(options);\n\t    };\n\t\n\t    Chance.prototype.name_suffix = function (options) {\n\t        options = initOptions(options);\n\t        return options.full ?\n\t            this.pick(this.name_suffixes()).name :\n\t            this.pick(this.name_suffixes()).abbreviation;\n\t    };\n\t\n\t    Chance.prototype.nationalities = function () {\n\t        return this.get(\"nationalities\");\n\t    };\n\t\n\t    // Generate random nationality based on json list\n\t    Chance.prototype.nationality = function () {\n\t        var nationality = this.pick(this.nationalities());\n\t        return nationality.name;\n\t    };\n\t\n\t    // -- End Person --\n\t\n\t    // -- Mobile --\n\t    // Android GCM Registration ID\n\t    Chance.prototype.android_id = function () {\n\t        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n\t    };\n\t\n\t    // Apple Push Token\n\t    Chance.prototype.apple_token = function () {\n\t        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n\t    };\n\t\n\t    // Windows Phone 8 ANID2\n\t    Chance.prototype.wp8_anid2 = function () {\n\t        return base64( this.hash( { length : 32 } ) );\n\t    };\n\t\n\t    // Windows Phone 7 ANID\n\t    Chance.prototype.wp7_anid = function () {\n\t        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n\t    };\n\t\n\t    // BlackBerry Device PIN\n\t    Chance.prototype.bb_pin = function () {\n\t        return this.hash({ length: 8 });\n\t    };\n\t\n\t    // -- End Mobile --\n\t\n\t    // -- Web --\n\t    Chance.prototype.avatar = function (options) {\n\t        var url = null;\n\t        var URL_BASE = '//www.gravatar.com/avatar/';\n\t        var PROTOCOLS = {\n\t            http: 'http',\n\t            https: 'https'\n\t        };\n\t        var FILE_TYPES = {\n\t            bmp: 'bmp',\n\t            gif: 'gif',\n\t            jpg: 'jpg',\n\t            png: 'png'\n\t        };\n\t        var FALLBACKS = {\n\t            '404': '404', // Return 404 if not found\n\t            mm: 'mm', // Mystery man\n\t            identicon: 'identicon', // Geometric pattern based on hash\n\t            monsterid: 'monsterid', // A generated monster icon\n\t            wavatar: 'wavatar', // A generated face\n\t            retro: 'retro', // 8-bit icon\n\t            blank: 'blank' // A transparent png\n\t        };\n\t        var RATINGS = {\n\t            g: 'g',\n\t            pg: 'pg',\n\t            r: 'r',\n\t            x: 'x'\n\t        };\n\t        var opts = {\n\t            protocol: null,\n\t            email: null,\n\t            fileExtension: null,\n\t            size: null,\n\t            fallback: null,\n\t            rating: null\n\t        };\n\t\n\t        if (!options) {\n\t            // Set to a random email\n\t            opts.email = this.email();\n\t            options = {};\n\t        }\n\t        else if (typeof options === 'string') {\n\t            opts.email = options;\n\t            options = {};\n\t        }\n\t        else if (typeof options !== 'object') {\n\t            return null;\n\t        }\n\t        else if (options.constructor === 'Array') {\n\t            return null;\n\t        }\n\t\n\t        opts = initOptions(options, opts);\n\t\n\t        if (!opts.email) {\n\t            // Set to a random email\n\t            opts.email = this.email();\n\t        }\n\t\n\t        // Safe checking for params\n\t        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\n\t        opts.size = parseInt(opts.size, 0) ? opts.size : '';\n\t        opts.rating = RATINGS[opts.rating] ? opts.rating : '';\n\t        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\n\t        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\n\t\n\t        url =\n\t            opts.protocol +\n\t            URL_BASE +\n\t            this.bimd5.md5(opts.email) +\n\t            (opts.fileExtension ? '.' + opts.fileExtension : '') +\n\t            (opts.size || opts.rating || opts.fallback ? '?' : '') +\n\t            (opts.size ? '&s=' + opts.size.toString() : '') +\n\t            (opts.rating ? '&r=' + opts.rating : '') +\n\t            (opts.fallback ? '&d=' + opts.fallback : '')\n\t            ;\n\t\n\t        return url;\n\t    };\n\t\n\t    /**\n\t     * #Description:\n\t     * ===============================================\n\t     * Generate random color value base on color type:\n\t     * -> hex\n\t     * -> rgb\n\t     * -> rgba\n\t     * -> 0x\n\t     * -> named color\n\t     *\n\t     * #Examples:\n\t     * ===============================================\n\t     * * Geerate random hex color\n\t     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\n\t     *\n\t     * * Generate Hex based color value\n\t     * chance.color({format: 'hex'})    => '#d67118'\n\t     *\n\t     * * Generate simple rgb value\n\t     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\n\t     *\n\t     * * Generate Ox based color value\n\t     * chance.color({format: '0x'})     => '0x67ae0b'\n\t     *\n\t     * * Generate graiscale based value\n\t     * chance.color({grayscale: true})  => '#e2e2e2'\n\t     *\n\t     * * Return valide color name\n\t     * chance.color({format: 'name'})   => 'red'\n\t     *\n\t     * * Make color uppercase\n\t     * chance.color({casing: 'upper'})  => '#29CFA7'\n\t\t \n\t\t * * Min Max values for RGBA\n\t\t * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\n\t     *\n\t     * @param  [object] options\n\t     * @return [string] color value\n\t     */\n\t    Chance.prototype.color = function (options) {\n\t\t\tfunction pad(n, width, z) {\n\t\t\t\tz = z || '0';\n\t\t\t\tn = n + '';\n\t\t\t\treturn n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t\t\t}\n\t\t\t\n\t        function gray(value, delimiter) {\n\t            return [value, value, value].join(delimiter || '');\n\t        }\n\t\n\t        function rgb(hasAlpha) {\n\t            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';\n\t            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : \"\";\n\t            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));\n\t            return rgbValue + '(' + colorValue + alphaChannel + ')';\n\t        }\n\t\n\t        function hex(start, end, withHash) {\n\t            var symbol = (withHash) ? \"#\" : \"\";\n\t\t\t\tvar hexstring = \"\";\n\t\t\t\t\n\t\t\t\tif (isGrayscale) {\n\t\t\t\t\thexstring = gray(pad(this.hex({min: min_rgb, max: max_rgb}), 2));\n\t\t\t\t\tif (options.format === \"shorthex\") {\n\t\t\t\t\t\thexstring = gray(this.hex({min: 0, max: 15}));\n\t\t\t\t\t\tconsole.log(\"hex: \" + hexstring);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (options.format === \"shorthex\") {\n\t\t\t\t\t\thexstring = pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);\n\t\t\t\t\t}\n\t\t\t\t\telse if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\n\t\t\t\t\t\thexstring = pad(this.hex({min: min_red, max: max_red}), 2) + pad(this.hex({min: min_green, max: max_green}), 2) + pad(this.hex({min: min_blue, max: max_blue}), 2);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thexstring = pad(this.hex({min: min_rgb, max: max_rgb}), 2) + pad(this.hex({min: min_rgb, max: max_rgb}), 2) + pad(this.hex({min: min_rgb, max: max_rgb}), 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t            return symbol + hexstring;\n\t        }\n\t\n\t        options = initOptions(options, {\n\t            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\n\t            grayscale: false,\n\t            casing: 'lower', \n\t\t\t\tmin: 0, \n\t\t\t\tmax: 255, \n\t\t\t\tmin_red: undefined,\n\t\t\t\tmax_red: undefined, \n\t\t\t\tmin_green: undefined,\n\t\t\t\tmax_green: undefined, \n\t\t\t\tmin_blue: undefined, \n\t\t\t\tmax_blue: undefined, \n\t\t\t\tmin_alpha: 0,\n\t\t\t\tmax_alpha: 1\n\t        });\n\t\n\t        var isGrayscale = options.grayscale;\n\t\t\tvar min_rgb = options.min;\n\t\t\tvar max_rgb = options.max;\t\t\n\t\t\tvar min_red = options.min_red;\n\t\t\tvar max_red = options.max_red;\n\t\t\tvar min_green = options.min_green;\n\t\t\tvar max_green = options.max_green;\n\t\t\tvar min_blue = options.min_blue;\n\t\t\tvar max_blue = options.max_blue;\n\t\t\tvar min_alpha = options.min_alpha;\n\t\t\tvar max_alpha = options.max_alpha;\n\t\t\tif (options.min_red === undefined) { min_red = min_rgb; }\n\t\t\tif (options.max_red === undefined) { max_red = max_rgb; }\n\t\t\tif (options.min_green === undefined) { min_green = min_rgb; }\n\t\t\tif (options.max_green === undefined) { max_green = max_rgb; }\n\t\t\tif (options.min_blue === undefined) { min_blue = min_rgb; }\n\t\t\tif (options.max_blue === undefined) { max_blue = max_rgb; }\n\t\t\tif (options.min_alpha === undefined) { min_alpha = 0; }\n\t\t\tif (options.max_alpha === undefined) { max_alpha = 1; }\n\t\t\tif (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\t\t\t\n\t\t\t\tmin_rgb = ((min_red + min_green + min_blue) / 3);\n\t\t\t\tmax_rgb = ((max_red + max_green + max_blue) / 3);\n\t\t\t}\n\t        var colorValue;\n\t\n\t        if (options.format === 'hex') {\n\t            colorValue = hex.call(this, 2, 6, true);\n\t        }\n\t        else if (options.format === 'shorthex') {\n\t            colorValue = hex.call(this, 1, 3, true);\n\t        }\n\t        else if (options.format === 'rgb') {\n\t            colorValue = rgb.call(this, false);\n\t        }\n\t        else if (options.format === 'rgba') {\n\t            colorValue = rgb.call(this, true);\n\t        }\n\t        else if (options.format === '0x') {\n\t            colorValue = '0x' + hex.call(this, 2, 6);\n\t        }\n\t        else if(options.format === 'name') {\n\t            return this.pick(this.get(\"colorNames\"));\n\t        }\n\t        else {\n\t            throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\n\t        }\n\t\n\t        if (options.casing === 'upper' ) {\n\t            colorValue = colorValue.toUpperCase();\n\t        }\n\t\n\t        return colorValue;\n\t    };\n\t\n\t    Chance.prototype.domain = function (options) {\n\t        options = initOptions(options);\n\t        return this.word() + '.' + (options.tld || this.tld());\n\t    };\n\t\n\t    Chance.prototype.email = function (options) {\n\t        options = initOptions(options);\n\t        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n\t    };\n\t\n\t    Chance.prototype.fbid = function () {\n\t        return parseInt('10000' + this.natural({max: 100000000000}), 10);\n\t    };\n\t\n\t    Chance.prototype.google_analytics = function () {\n\t        var account = this.pad(this.natural({max: 999999}), 6);\n\t        var property = this.pad(this.natural({max: 99}), 2);\n\t\n\t        return 'UA-' + account + '-' + property;\n\t    };\n\t\n\t    Chance.prototype.hashtag = function () {\n\t        return '#' + this.word();\n\t    };\n\t\n\t    Chance.prototype.ip = function () {\n\t        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n\t        // this should probably be updated to account for that rare as it may be\n\t        return this.natural({min: 1, max: 254}) + '.' +\n\t               this.natural({max: 255}) + '.' +\n\t               this.natural({max: 255}) + '.' +\n\t               this.natural({min: 1, max: 254});\n\t    };\n\t\n\t    Chance.prototype.ipv6 = function () {\n\t        var ip_addr = this.n(this.hash, 8, {length: 4});\n\t\n\t        return ip_addr.join(\":\");\n\t    };\n\t\n\t    Chance.prototype.klout = function () {\n\t        return this.natural({min: 1, max: 99});\n\t    };\n\t\n\t    Chance.prototype.semver = function (options) {\n\t        options = initOptions(options, { include_prerelease: true });\n\t\n\t        var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\n\t        if (options.range) {\n\t            range = options.range;\n\t        }\n\t\n\t        var prerelease = \"\";\n\t        if (options.include_prerelease) {\n\t            prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\n\t        }\n\t        return range + this.rpg('3d10').join('.') + prerelease;\n\t    };\n\t\n\t    Chance.prototype.tlds = function () {\n\t        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'bq', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\n\t    };\n\t\n\t    Chance.prototype.tld = function () {\n\t        return this.pick(this.tlds());\n\t    };\n\t\n\t    Chance.prototype.twitter = function () {\n\t        return '@' + this.word();\n\t    };\n\t\n\t    Chance.prototype.url = function (options) {\n\t        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\t\n\t        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n\t        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\t\n\t        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n\t    };\n\t\n\t    Chance.prototype.port = function() {\n\t        return this.integer({min: 0, max: 65535});\n\t    };\n\t\n\t    // -- End Web --\n\t\n\t    // -- Location --\n\t\n\t    Chance.prototype.address = function (options) {\n\t        options = initOptions(options);\n\t        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n\t    };\n\t\n\t    Chance.prototype.altitude = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: 0, max: 8848});\n\t        return this.floating({\n\t            min: options.min,\n\t            max: options.max,\n\t            fixed: options.fixed\n\t        });\n\t    };\n\t\n\t    Chance.prototype.areacode = function (options) {\n\t        options = initOptions(options, {parens : true});\n\t        // Don't want area codes to start with 1, or have a 9 as the second digit\n\t        var areacode = this.natural({min: 2, max: 9}).toString() +\n\t                this.natural({min: 0, max: 8}).toString() +\n\t                this.natural({min: 0, max: 9}).toString();\n\t\n\t        return options.parens ? '(' + areacode + ')' : areacode;\n\t    };\n\t\n\t    Chance.prototype.city = function () {\n\t        return this.capitalize(this.word({syllables: 3}));\n\t    };\n\t\n\t    Chance.prototype.coordinates = function (options) {\n\t        return this.latitude(options) + ', ' + this.longitude(options);\n\t    };\n\t\n\t    Chance.prototype.countries = function () {\n\t        return this.get(\"countries\");\n\t    };\n\t\n\t    Chance.prototype.country = function (options) {\n\t        options = initOptions(options);\n\t        var country = this.pick(this.countries());\n\t        return options.full ? country.name : country.abbreviation;\n\t    };\n\t\n\t    Chance.prototype.depth = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: -10994, max: 0});\n\t        return this.floating({\n\t            min: options.min,\n\t            max: options.max,\n\t            fixed: options.fixed\n\t        });\n\t    };\n\t\n\t    Chance.prototype.geohash = function (options) {\n\t        options = initOptions(options, { length: 7 });\n\t        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n\t    };\n\t\n\t    Chance.prototype.geojson = function (options) {\n\t        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n\t    };\n\t\n\t    Chance.prototype.latitude = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: -90, max: 90});\n\t        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n\t    };\n\t\n\t    Chance.prototype.longitude = function (options) {\n\t        options = initOptions(options, {fixed: 5, min: -180, max: 180});\n\t        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n\t    };\n\t\n\t    Chance.prototype.phone = function (options) {\n\t        var self = this,\n\t            numPick,\n\t            ukNum = function (parts) {\n\t                var section = [];\n\t                //fills the section part of the phone number with random numbers.\n\t                parts.sections.forEach(function(n) {\n\t                    section.push(self.string({ pool: '0123456789', length: n}));\n\t                });\n\t                return parts.area + section.join(' ');\n\t            };\n\t        options = initOptions(options, {\n\t            formatted: true,\n\t            country: 'us',\n\t            mobile: false\n\t        });\n\t        if (!options.formatted) {\n\t            options.parens = false;\n\t        }\n\t        var phone;\n\t        switch (options.country) {\n\t            case 'fr':\n\t                if (!options.mobile) {\n\t                    numPick = this.pick([\n\t                        // Valid zone and département codes.\n\t                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '09' + self.string({ pool: '0123456789', length: 8}),\n\t                    ]);\n\t                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n\t                } else {\n\t                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n\t                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n\t                }\n\t                break;\n\t            case 'uk':\n\t                if (!options.mobile) {\n\t                    numPick = this.pick([\n\t                        //valid area codes of major cities/counties followed by random numbers in required format.\n\t\n\t                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n\t                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n\t                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n\t                        { area: '024 7', sections: [3,4] },\n\t                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n\t                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },\n\t                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },\n\t                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },\n\t                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },\n\t                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },\n\t                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },\n\t                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },\n\t                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }\n\t                    ]);\n\t                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n\t                } else {\n\t                    numPick = this.pick([\n\t                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n\t                        { area: '07624 ', sections: [6] }\n\t                    ]);\n\t                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n\t                }\n\t                break;\n\t            case 'za':\n\t                if (!options.mobile) {\n\t                    numPick = this.pick([\n\t                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n\t                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n\t                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),\n\t                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),   \n\t                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n\t                    ]);\n\t                    phone = options.formatted || numPick;\n\t                } else {\n\t                    numPick = this.pick([\n\t                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '06'  + self.string({ pool: '0123456789', length: 7}),\n\t                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n\t                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),\n\t                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),                     \n\t                    ]);\n\t                    phone = options.formatted || numPick;\n\t                }\n\t                \n\t                break;\n\t\n\t            case 'us':\n\t                var areacode = this.areacode(options).toString();\n\t                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n\t                    this.natural({ min: 0, max: 9 }).toString() +\n\t                    this.natural({ min: 0, max: 9 }).toString();\n\t                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n\t                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n\t        }\n\t        return phone;\n\t    };\n\t\n\t    Chance.prototype.postal = function () {\n\t        // Postal District\n\t        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n\t        // Forward Sortation Area (FSA)\n\t        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n\t        // Local Delivery Unut (LDU)\n\t        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\t\n\t        return fsa + \" \" + ldu;\n\t    };\n\t\n\t    Chance.prototype.counties = function (options) {\n\t        options = initOptions(options, { country: 'uk' });\n\t        return this.get(\"counties\")[options.country.toLowerCase()];\n\t    };\n\t\n\t    Chance.prototype.county = function (options) {\n\t        return this.pick(this.counties(options)).name;\n\t    };\n\t\n\t    Chance.prototype.provinces = function (options) {\n\t        options = initOptions(options, { country: 'ca' });\n\t        return this.get(\"provinces\")[options.country.toLowerCase()];\n\t    };\n\t\n\t    Chance.prototype.province = function (options) {\n\t        return (options && options.full) ?\n\t            this.pick(this.provinces(options)).name :\n\t            this.pick(this.provinces(options)).abbreviation;\n\t    };\n\t\n\t    Chance.prototype.state = function (options) {\n\t        return (options && options.full) ?\n\t            this.pick(this.states(options)).name :\n\t            this.pick(this.states(options)).abbreviation;\n\t    };\n\t\n\t    Chance.prototype.states = function (options) {\n\t        options = initOptions(options, { country: 'us', us_states_and_dc: true } );\n\t\n\t        var states;\n\t\n\t        switch (options.country.toLowerCase()) {\n\t            case 'us':\n\t                var us_states_and_dc = this.get(\"us_states_and_dc\"),\n\t                    territories = this.get(\"territories\"),\n\t                    armed_forces = this.get(\"armed_forces\");\n\t\n\t                states = [];\n\t\n\t                if (options.us_states_and_dc) {\n\t                    states = states.concat(us_states_and_dc);\n\t                }\n\t                if (options.territories) {\n\t                    states = states.concat(territories);\n\t                }\n\t                if (options.armed_forces) {\n\t                    states = states.concat(armed_forces);\n\t                }\n\t                break;\n\t            case 'it':\n\t                states = this.get(\"country_regions\")[options.country.toLowerCase()];\n\t                break;\n\t            case 'uk':\n\t                states = this.get(\"counties\")[options.country.toLowerCase()];\n\t                break;\n\t        }\n\t\n\t        return states;\n\t    };\n\t\n\t    Chance.prototype.street = function (options) {\n\t        options = initOptions(options, { country: 'us', syllables: 2 });\n\t        var     street;\n\t\n\t        switch (options.country.toLowerCase()) {\n\t            case 'us':\n\t                street = this.word({ syllables: options.syllables });\n\t                street = this.capitalize(street);\n\t                street += ' ';\n\t                street += options.short_suffix ?\n\t                    this.street_suffix(options).abbreviation :\n\t                    this.street_suffix(options).name;\n\t                break;\n\t            case 'it':\n\t                street = this.word({ syllables: options.syllables });\n\t                street = this.capitalize(street);\n\t                street = (options.short_suffix ?\n\t                    this.street_suffix(options).abbreviation :\n\t                    this.street_suffix(options).name) + \" \" + street;\n\t                break;\n\t        }\n\t        return street;\n\t    };\n\t\n\t    Chance.prototype.street_suffix = function (options) {\n\t        options = initOptions(options, { country: 'us' });\n\t        return this.pick(this.street_suffixes(options));\n\t    };\n\t\n\t    Chance.prototype.street_suffixes = function (options) {\n\t        options = initOptions(options, { country: 'us' });\n\t        // These are the most common suffixes.\n\t        return this.get(\"street_suffixes\")[options.country.toLowerCase()];\n\t    };\n\t\n\t    // Note: only returning US zip codes, internationalization will be a whole\n\t    // other beast to tackle at some point.\n\t    Chance.prototype.zip = function (options) {\n\t        var zip = this.n(this.natural, 5, {max: 9});\n\t\n\t        if (options && options.plusfour === true) {\n\t            zip.push('-');\n\t            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n\t        }\n\t\n\t        return zip.join(\"\");\n\t    };\n\t\n\t    // -- End Location --\n\t\n\t    // -- Time\n\t\n\t    Chance.prototype.ampm = function () {\n\t        return this.bool() ? 'am' : 'pm';\n\t    };\n\t\n\t    Chance.prototype.date = function (options) {\n\t        var date_string, date;\n\t\n\t        // If interval is specified we ignore preset\n\t        if(options && (options.min || options.max)) {\n\t            options = initOptions(options, {\n\t                american: true,\n\t                string: false\n\t            });\n\t            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n\t            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n\t            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\t\n\t            date = new Date(this.integer({min: min, max: max}));\n\t        } else {\n\t            var m = this.month({raw: true});\n\t            var daysInMonth = m.days;\n\t\n\t            if(options && options.month) {\n\t                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\n\t                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;\n\t            }\n\t\n\t            options = initOptions(options, {\n\t                year: parseInt(this.year(), 10),\n\t                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n\t                // for some reason.\n\t                month: m.numeric - 1,\n\t                day: this.natural({min: 1, max: daysInMonth}),\n\t                hour: this.hour({twentyfour: true}),\n\t                minute: this.minute(),\n\t                second: this.second(),\n\t                millisecond: this.millisecond(),\n\t                american: true,\n\t                string: false\n\t            });\n\t\n\t            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n\t        }\n\t\n\t        if (options.american) {\n\t            // Adding 1 to the month is necessary because Date() 0-indexes\n\t            // months but not day for some odd reason.\n\t            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n\t        } else {\n\t            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n\t        }\n\t\n\t        return options.string ? date_string : date;\n\t    };\n\t\n\t    Chance.prototype.hammertime = function (options) {\n\t        return this.date(options).getTime();\n\t    };\n\t\n\t    Chance.prototype.hour = function (options) {\n\t        options = initOptions(options, {\n\t            min: options && options.twentyfour ? 0 : 1,\n\t            max: options && options.twentyfour ? 23 : 12\n\t        });\n\t\n\t        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n\t        testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\n\t        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\t\n\t        return this.natural({min: options.min, max: options.max});\n\t    };\n\t\n\t    Chance.prototype.millisecond = function () {\n\t        return this.natural({max: 999});\n\t    };\n\t\n\t    Chance.prototype.minute = Chance.prototype.second = function (options) {\n\t        options = initOptions(options, {min: 0, max: 59});\n\t\n\t        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n\t        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\t\n\t        return this.natural({min: options.min, max: options.max});\n\t    };\n\t\n\t    Chance.prototype.month = function (options) {\n\t        options = initOptions(options, {min: 1, max: 12});\n\t\n\t        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n\t        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n\t        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\t\n\t        var month = this.pick(this.months().slice(options.min - 1, options.max));\n\t        return options.raw ? month : month.name;\n\t    };\n\t\n\t    Chance.prototype.months = function () {\n\t        return this.get(\"months\");\n\t    };\n\t\n\t    Chance.prototype.second = function () {\n\t        return this.natural({max: 59});\n\t    };\n\t\n\t    Chance.prototype.timestamp = function () {\n\t        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n\t    };\n\t\n\t    Chance.prototype.weekday = function (options) {\n\t        options = initOptions(options, {weekday_only: false});\n\t        var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\t        if (!options.weekday_only) {\n\t            weekdays.push(\"Saturday\");\n\t            weekdays.push(\"Sunday\");\n\t        }\n\t        return this.pickone(weekdays);\n\t    };\n\t\n\t    Chance.prototype.year = function (options) {\n\t        // Default to current year as min if none specified\n\t        options = initOptions(options, {min: new Date().getFullYear()});\n\t\n\t        // Default to one century after current year as max if none specified\n\t        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\t\n\t        return this.natural(options).toString();\n\t    };\n\t\n\t    // -- End Time\n\t\n\t    // -- Finance --\n\t\n\t    Chance.prototype.cc = function (options) {\n\t        options = initOptions(options);\n\t\n\t        var type, number, to_generate;\n\t\n\t        type = (options.type) ?\n\t                    this.cc_type({ name: options.type, raw: true }) :\n\t                    this.cc_type({ raw: true });\n\t\n\t        number = type.prefix.split(\"\");\n\t        to_generate = type.length - type.prefix.length - 1;\n\t\n\t        // Generates n - 1 digits\n\t        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\t\n\t        // Generates the last digit according to Luhn algorithm\n\t        number.push(this.luhn_calculate(number.join(\"\")));\n\t\n\t        return number.join(\"\");\n\t    };\n\t\n\t    Chance.prototype.cc_types = function () {\n\t        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n\t        return this.get(\"cc_types\");\n\t    };\n\t\n\t    Chance.prototype.cc_type = function (options) {\n\t        options = initOptions(options);\n\t        var types = this.cc_types(),\n\t            type = null;\n\t\n\t        if (options.name) {\n\t            for (var i = 0; i < types.length; i++) {\n\t                // Accept either name or short_name to specify card type\n\t                if (types[i].name === options.name || types[i].short_name === options.name) {\n\t                    type = types[i];\n\t                    break;\n\t                }\n\t            }\n\t            if (type === null) {\n\t                throw new RangeError(\"Credit card type '\" + options.name + \"'' is not supported\");\n\t            }\n\t        } else {\n\t            type = this.pick(types);\n\t        }\n\t\n\t        return options.raw ? type : type.name;\n\t    };\n\t\n\t    //return all world currency by ISO 4217\n\t    Chance.prototype.currency_types = function () {\n\t        return this.get(\"currency_types\");\n\t    };\n\t\n\t    //return random world currency by ISO 4217\n\t    Chance.prototype.currency = function () {\n\t        return this.pick(this.currency_types());\n\t    };\n\t\n\t    //return all timezones availabel\n\t    Chance.prototype.timezones = function () {\n\t        return this.get(\"timezones\");\n\t    };\n\t\n\t    //return random timezone\n\t    Chance.prototype.timezone = function () {\n\t        return this.pick(this.timezones());\n\t    };\n\t\n\t    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n\t    Chance.prototype.currency_pair = function (returnAsString) {\n\t        var currencies = this.unique(this.currency, 2, {\n\t            comparator: function(arr, val) {\n\t\n\t                return arr.reduce(function(acc, item) {\n\t                    // If a match has been found, short circuit check and just return\n\t                    return acc || (item.code === val.code);\n\t                }, false);\n\t            }\n\t        });\n\t\n\t        if (returnAsString) {\n\t            return currencies[0].code + '/' + currencies[1].code;\n\t        } else {\n\t            return currencies;\n\t        }\n\t    };\n\t\n\t    Chance.prototype.dollar = function (options) {\n\t        // By default, a somewhat more sane max for dollar than all available numbers\n\t        options = initOptions(options, {max : 10000, min : 0});\n\t\n\t        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n\t            cents = dollar.split('.')[1];\n\t\n\t        if (cents === undefined) {\n\t            dollar += '.00';\n\t        } else if (cents.length < 2) {\n\t            dollar = dollar + '0';\n\t        }\n\t\n\t        if (dollar < 0) {\n\t            return '-$' + dollar.replace('-', '');\n\t        } else {\n\t            return '$' + dollar;\n\t        }\n\t    };\n\t\n\t    Chance.prototype.euro = function (options) {\n\t        return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\n\t    };\n\t\n\t    Chance.prototype.exp = function (options) {\n\t        options = initOptions(options);\n\t        var exp = {};\n\t\n\t        exp.year = this.exp_year();\n\t\n\t        // If the year is this year, need to ensure month is greater than the\n\t        // current month or this expiration will not be valid\n\t        if (exp.year === (new Date().getFullYear()).toString()) {\n\t            exp.month = this.exp_month({future: true});\n\t        } else {\n\t            exp.month = this.exp_month();\n\t        }\n\t\n\t        return options.raw ? exp : exp.month + '/' + exp.year;\n\t    };\n\t\n\t    Chance.prototype.exp_month = function (options) {\n\t        options = initOptions(options);\n\t        var month, month_int,\n\t            // Date object months are 0 indexed\n\t            curMonth = new Date().getMonth() + 1;\n\t\n\t        if (options.future && (curMonth !== 12)) {\n\t            do {\n\t                month = this.month({raw: true}).numeric;\n\t                month_int = parseInt(month, 10);\n\t            } while (month_int <= curMonth);\n\t        } else {\n\t            month = this.month({raw: true}).numeric;\n\t        }\n\t\n\t        return month;\n\t    };\n\t\n\t    Chance.prototype.exp_year = function () {\n\t        var curMonth = new Date().getMonth() + 1,\n\t            curYear = new Date().getFullYear();\n\t\n\t        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});\n\t    };\n\t\n\t    Chance.prototype.vat = function (options) {\n\t        options = initOptions(options, { country: 'it' });\n\t        switch (options.country.toLowerCase()) {\n\t            case 'it':\n\t                return this.it_vat();\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number). \n\t     * No country-specific formats support (yet)\n\t     */\n\t    Chance.prototype.iban = function () {\n\t        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t        var alphanum = alpha + '0123456789';\n\t        var iban = \n\t            this.string({ length: 2, pool: alpha }) + \n\t            this.pad(this.integer({ min: 0, max: 99 }), 2) + \n\t            this.string({ length: 4, pool: alphanum }) + \n\t            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));\n\t        return iban;\n\t    };\n\t\n\t    // -- End Finance\n\t\n\t    // -- Regional\n\t\n\t    Chance.prototype.it_vat = function () {\n\t        var it_vat = this.natural({min: 1, max: 1800000});\n\t\n\t        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);\n\t        return it_vat + this.luhn_calculate(it_vat);\n\t    };\n\t\n\t    /*\n\t     * this generator is written following the official algorithm\n\t     * all data can be passed explicitely or randomized by calling chance.cf() without options\n\t     * the code does not check that the input data is valid (it goes beyond the scope of the generator)\n\t     *\n\t     * @param  [Object] options = { first: first name,\n\t     *                              last: last name,\n\t     *                              gender: female|male,\n\t                                    birthday: JavaScript date object,\n\t                                    city: string(4), 1 letter + 3 numbers\n\t                                   }\n\t     * @return [string] codice fiscale\n\t     *\n\t    */\n\t    Chance.prototype.cf = function (options) {\n\t        options = options || {};\n\t        var gender = !!options.gender ? options.gender : this.gender(),\n\t            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),\n\t            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),\n\t            birthday = !!options.birthday ? options.birthday : this.birthday(),\n\t            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),\n\t            cf = [],\n\t            name_generator = function(name, isLast) {\n\t                var temp,\n\t                    return_value = [];\n\t\n\t                if (name.length < 3) {\n\t                    return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0,3);\n\t                }\n\t                else {\n\t                    temp = name.toUpperCase().split('').map(function(c){\n\t                        return (\"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1) ? c : undefined;\n\t                    }).join('');\n\t                    if (temp.length > 3) {\n\t                        if (isLast) {\n\t                            temp = temp.substr(0,3);\n\t                        } else {\n\t                            temp = temp[0] + temp.substr(2,2);\n\t                        }\n\t                    }\n\t                    if (temp.length < 3) {\n\t                        return_value = temp;\n\t                        temp = name.toUpperCase().split('').map(function(c){\n\t                            return (\"AEIOU\".indexOf(c) !== -1) ? c : undefined;\n\t                        }).join('').substr(0, 3 - return_value.length);\n\t                    }\n\t                    return_value = return_value + temp;\n\t                }\n\t\n\t                return return_value;\n\t            },\n\t            date_generator = function(birthday, gender, that) {\n\t                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\n\t\n\t                return  birthday.getFullYear().toString().substr(2) +\n\t                        lettermonths[birthday.getMonth()] +\n\t                        that.pad(birthday.getDate() + ((gender.toLowerCase() === \"female\") ? 40 : 0), 2);\n\t            },\n\t            checkdigit_generator = function(cf) {\n\t                var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n\t                    range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n\t                    evens  = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n\t                    odds   = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\n\t                    digit  = 0;\n\t\n\t\n\t                for(var i = 0; i < 15; i++) {\n\t                    if (i % 2 !== 0) {\n\t                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\n\t                    }\n\t                    else {\n\t                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);\n\t                    }\n\t                }\n\t                return evens[digit % 26];\n\t            };\n\t\n\t        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\n\t        cf += checkdigit_generator(cf.toUpperCase(), this);\n\t\n\t        return cf.toUpperCase();\n\t    };\n\t\n\t    Chance.prototype.pl_pesel = function () {\n\t        var number = this.natural({min: 1, max: 9999999999});\n\t        var arr = this.pad(number, 10).split('');\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = parseInt(arr[i]);\n\t        }\n\t\n\t        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\n\t        if(controlNumber !== 0) {\n\t            controlNumber = 10 - controlNumber;\n\t        }\n\t\n\t        return arr.join('') + controlNumber;\n\t    };\n\t\n\t    Chance.prototype.pl_nip = function () {\n\t        var number = this.natural({min: 1, max: 999999999});\n\t        var arr = this.pad(number, 9).split('');\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = parseInt(arr[i]);\n\t        }\n\t\n\t        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\n\t        if(controlNumber === 10) {\n\t            return this.pl_nip();\n\t        }\n\t\n\t        return arr.join('') + controlNumber;\n\t    };\n\t\n\t    Chance.prototype.pl_regon = function () {\n\t        var number = this.natural({min: 1, max: 99999999});\n\t        var arr = this.pad(number, 8).split('');\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = parseInt(arr[i]);\n\t        }\n\t\n\t        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\n\t        if(controlNumber === 10) {\n\t            controlNumber = 0;\n\t        }\n\t\n\t        return arr.join('') + controlNumber;\n\t    };\n\t\n\t    // -- End Regional\n\t\n\t    // -- Miscellaneous --\n\t\n\t    // Dice - For all the board game geeks out there, myself included ;)\n\t    function diceFn (range) {\n\t        return function () {\n\t            return this.natural(range);\n\t        };\n\t    }\n\t    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n\t    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n\t    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n\t    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n\t    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n\t    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n\t    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n\t    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\t\n\t    Chance.prototype.rpg = function (thrown, options) {\n\t        options = initOptions(options);\n\t        if (!thrown) {\n\t            throw new RangeError(\"A type of die roll must be included\");\n\t        } else {\n\t            var bits = thrown.toLowerCase().split(\"d\"),\n\t                rolls = [];\n\t\n\t            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n\t                throw new Error(\"Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n\t            }\n\t            for (var i = bits[0]; i > 0; i--) {\n\t                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n\t            }\n\t            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n\t        }\n\t    };\n\t\n\t    // Guid\n\t    Chance.prototype.guid = function (options) {\n\t        options = initOptions(options, { version: 5 });\n\t\n\t        var guid_pool = \"abcdef1234567890\",\n\t            variant_pool = \"ab89\",\n\t            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n\t                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n\t                   // The Version\n\t                   options.version +\n\t                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n\t                   // The Variant\n\t                   this.string({ pool: variant_pool, length: 1 }) +\n\t                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n\t                   this.string({ pool: guid_pool, length: 12 });\n\t        return guid;\n\t    };\n\t\n\t    // Hash\n\t    Chance.prototype.hash = function (options) {\n\t        options = initOptions(options, {length : 40, casing: 'lower'});\n\t        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n\t        return this.string({pool: pool, length: options.length});\n\t    };\n\t\n\t    Chance.prototype.luhn_check = function (num) {\n\t        var str = num.toString();\n\t        var checkDigit = +str.substring(str.length - 1);\n\t        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n\t    };\n\t\n\t    Chance.prototype.luhn_calculate = function (num) {\n\t        var digits = num.toString().split(\"\").reverse();\n\t        var sum = 0;\n\t        var digit;\n\t\n\t        for (var i = 0, l = digits.length; l > i; ++i) {\n\t            digit = +digits[i];\n\t            if (i % 2 === 0) {\n\t                digit *= 2;\n\t                if (digit > 9) {\n\t                    digit -= 9;\n\t                }\n\t            }\n\t            sum += digit;\n\t        }\n\t        return (sum * 9) % 10;\n\t    };\n\t\n\t    // MD5 Hash\n\t    Chance.prototype.md5 = function(options) {\n\t        var opts = { str: '', key: null, raw: false };\n\t\n\t        if (!options) {\n\t            opts.str = this.string();\n\t            options = {};\n\t        }\n\t        else if (typeof options === 'string') {\n\t            opts.str = options;\n\t            options = {};\n\t        }\n\t        else if (typeof options !== 'object') {\n\t            return null;\n\t        }\n\t        else if(options.constructor === 'Array') {\n\t            return null;\n\t        }\n\t\n\t        opts = initOptions(options, opts);\n\t\n\t        if(!opts.str){\n\t            throw new Error('A parameter is required to return an md5 hash.');\n\t        }\n\t\n\t        return this.bimd5.md5(opts.str, opts.key, opts.raw);\n\t    };\n\t\n\t    /**\n\t     * #Description:\n\t     * =====================================================\n\t     * Generate random file name with extension\n\t     *\n\t     * The argument provide extension type\n\t     * -> raster\n\t     * -> vector\n\t     * -> 3d\n\t     * -> document\n\t     *\n\t     * If nothing is provided the function return random file name with random\n\t     * extension type of any kind\n\t     *\n\t     * The user can validate the file name length range\n\t     * If nothing provided the generated file name is random\n\t     *\n\t     * #Extension Pool :\n\t     * * Currently the supported extensions are\n\t     *  -> some of the most popular raster image extensions\n\t     *  -> some of the most popular vector image extensions\n\t     *  -> some of the most popular 3d image extensions\n\t     *  -> some of the most popular document extensions\n\t     *\n\t     * #Examples :\n\t     * =====================================================\n\t     *\n\t     * Return random file name with random extension. The file extension\n\t     * is provided by a predefined collection of extensions. More about the extension\n\t     * pool can be found in #Extension Pool section\n\t     *\n\t     * chance.file()\n\t     * => dsfsdhjf.xml\n\t     *\n\t     * In order to generate a file name with specific length, specify the\n\t     * length property and integer value. The extension is going to be random\n\t     *\n\t     * chance.file({length : 10})\n\t     * => asrtineqos.pdf\n\t     *\n\t     * In order to generate file with extension from some of the predefined groups\n\t     * of the extension pool just specify the extension pool category in fileType property\n\t     *\n\t     * chance.file({fileType : 'raster'})\n\t     * => dshgssds.psd\n\t     *\n\t     * You can provide specific extension for your files\n\t     * chance.file({extension : 'html'})\n\t     * => djfsd.html\n\t     *\n\t     * Or you could pass custom collection of extensions by array or by object\n\t     * chance.file({extensions : [...]})\n\t     * => dhgsdsd.psd\n\t     *\n\t     * chance.file({extensions : { key : [...], key : [...]}})\n\t     * => djsfksdjsd.xml\n\t     *\n\t     * @param  [collection] options\n\t     * @return [string]\n\t     *\n\t     */\n\t    Chance.prototype.file = function(options) {\n\t\n\t        var fileOptions = options || {};\n\t        var poolCollectionKey = \"fileExtension\";\n\t        var typeRange   = Object.keys(this.get(\"fileExtension\"));//['raster', 'vector', '3d', 'document'];\n\t        var fileName;\n\t        var fileExtension;\n\t\n\t        // Generate random file name\n\t        fileName = this.word({length : fileOptions.length});\n\t\n\t        // Generate file by specific extension provided by the user\n\t        if(fileOptions.extension) {\n\t\n\t            fileExtension = fileOptions.extension;\n\t            return (fileName + '.' + fileExtension);\n\t        }\n\t\n\t        // Generate file by specific extension collection\n\t        if(fileOptions.extensions) {\n\t\n\t            if(Array.isArray(fileOptions.extensions)) {\n\t\n\t                fileExtension = this.pickone(fileOptions.extensions);\n\t                return (fileName + '.' + fileExtension);\n\t            }\n\t            else if(fileOptions.extensions.constructor === Object) {\n\t\n\t                var extensionObjectCollection = fileOptions.extensions;\n\t                var keys = Object.keys(extensionObjectCollection);\n\t\n\t                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\n\t                return (fileName + '.' + fileExtension);\n\t            }\n\t\n\t            throw new Error(\"Expect collection of type Array or Object to be passed as an argument \");\n\t        }\n\t\n\t        // Generate file extension based on specific file type\n\t        if(fileOptions.fileType) {\n\t\n\t            var fileType = fileOptions.fileType;\n\t            if(typeRange.indexOf(fileType) !== -1) {\n\t\n\t                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\n\t                return (fileName + '.' + fileExtension);\n\t            }\n\t\n\t            throw new Error(\"Expect file type value to be 'raster', 'vector', '3d' or 'document' \");\n\t        }\n\t\n\t        // Generate random file name if no extension options are passed\n\t        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\n\t        return (fileName + '.' + fileExtension);\n\t    };\n\t\n\t    var data = {\n\t\n\t        firstNames: {\n\t            \"male\": {\n\t                \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n\t                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\n\t                \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"]\n\t            },\n\t            \"female\": {\n\t                \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\n\t                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\n\t                \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Leda\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"]\n\t            }\n\t        },\n\t\n\t        lastNames: {\n\t            \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n\t                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\n\t            \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"]\n\t        },\n\t\n\t        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json\n\t        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua & Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Ascension Island\",\"abbreviation\":\"AC\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia & Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canary Islands\",\"abbreviation\":\"IC\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Caribbean Netherlands\",\"abbreviation\":\"BQ\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Ceuta & Melilla\",\"abbreviation\":\"EA\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos (Keeling) Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Côte d'Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Curaçao\",\"abbreviation\":\"CW\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Diego Garcia\",\"abbreviation\":\"DG\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kosovo\",\"abbreviation\":\"XK\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar (Burma)\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Sint Maarten\",\"abbreviation\":\"SX\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia & South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"South Sudan\",\"abbreviation\":\"SS\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"St. Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"St. Helena\",\"abbreviation\":\"SH\"},{\"name\":\"St. Kitts & Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"St. Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"St. Martin\",\"abbreviation\":\"MF\"},{\"name\":\"St. Pierre & Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"St. Vincent & Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard & Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad & Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tristan da Cunha\",\"abbreviation\":\"TA\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks & Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wallis & Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"}],\n\t\n\t\t\tcounties: {\n\t            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\n\t            \"uk\": [\n\t                {name: 'Bath and North East Somerset'},\n\t                {name: 'Aberdeenshire'},\n\t                {name: 'Anglesey'},\n\t                {name: 'Angus'},\n\t                {name: 'Bedford'},\n\t                {name: 'Blackburn with Darwen'},\n\t                {name: 'Blackpool'},\n\t                {name: 'Bournemouth'},\n\t                {name: 'Bracknell Forest'},\n\t                {name: 'Brighton & Hove'},\n\t                {name: 'Bristol'},\n\t                {name: 'Buckinghamshire'},\n\t                {name: 'Cambridgeshire'},\n\t                {name: 'Carmarthenshire'},\n\t                {name: 'Central Bedfordshire'},\n\t                {name: 'Ceredigion'},\n\t                {name: 'Cheshire East'},\n\t                {name: 'Cheshire West and Chester'},\n\t                {name: 'Clackmannanshire'},\n\t                {name: 'Conwy'},\n\t                {name: 'Cornwall'},\n\t                {name: 'County Antrim'},\n\t                {name: 'County Armagh'},\n\t                {name: 'County Down'},\n\t                {name: 'County Durham'},\n\t                {name: 'County Fermanagh'},\n\t                {name: 'County Londonderry'},\n\t                {name: 'County Tyrone'},\n\t                {name: 'Cumbria'},\n\t                {name: 'Darlington'},\n\t                {name: 'Denbighshire'},\n\t                {name: 'Derby'},\n\t                {name: 'Derbyshire'},\n\t                {name: 'Devon'},\n\t                {name: 'Dorset'},\n\t                {name: 'Dumfries and Galloway'},\n\t                {name: 'Dundee'},\n\t                {name: 'East Lothian'},\n\t                {name: 'East Riding of Yorkshire'},\n\t                {name: 'East Sussex'},\n\t                {name: 'Edinburgh?'},\n\t                {name: 'Essex'},\n\t                {name: 'Falkirk'},\n\t                {name: 'Fife'},\n\t                {name: 'Flintshire'},\n\t                {name: 'Gloucestershire'},\n\t                {name: 'Greater London'},\n\t                {name: 'Greater Manchester'},\n\t                {name: 'Gwent'},\n\t                {name: 'Gwynedd'},\n\t                {name: 'Halton'},\n\t                {name: 'Hampshire'},\n\t                {name: 'Hartlepool'},\n\t                {name: 'Herefordshire'},\n\t                {name: 'Hertfordshire'},\n\t                {name: 'Highlands'},\n\t                {name: 'Hull'},\n\t                {name: 'Isle of Wight'},\n\t                {name: 'Isles of Scilly'},\n\t                {name: 'Kent'},\n\t                {name: 'Lancashire'},\n\t                {name: 'Leicester'},\n\t                {name: 'Leicestershire'},\n\t                {name: 'Lincolnshire'},\n\t                {name: 'Lothian'},\n\t                {name: 'Luton'},\n\t                {name: 'Medway'},\n\t                {name: 'Merseyside'},\n\t                {name: 'Mid Glamorgan'},\n\t                {name: 'Middlesbrough'},\n\t                {name: 'Milton Keynes'},\n\t                {name: 'Monmouthshire'},\n\t                {name: 'Moray'},\n\t                {name: 'Norfolk'},\n\t                {name: 'North East Lincolnshire'},\n\t                {name: 'North Lincolnshire'},\n\t                {name: 'North Somerset'},\n\t                {name: 'North Yorkshire'},\n\t                {name: 'Northamptonshire'},\n\t                {name: 'Northumberland'},\n\t                {name: 'Nottingham'},\n\t                {name: 'Nottinghamshire'},\n\t                {name: 'Oxfordshire'},\n\t                {name: 'Pembrokeshire'},\n\t                {name: 'Perth and Kinross'},\n\t                {name: 'Peterborough'},\n\t                {name: 'Plymouth'},\n\t                {name: 'Poole'},\n\t                {name: 'Portsmouth'},\n\t                {name: 'Powys'},\n\t                {name: 'Reading'},\n\t                {name: 'Redcar and Cleveland'},\n\t                {name: 'Rutland'},\n\t                {name: 'Scottish Borders'},\n\t                {name: 'Shropshire'},\n\t                {name: 'Slough'},\n\t                {name: 'Somerset'},\n\t                {name: 'South Glamorgan'},\n\t                {name: 'South Gloucestershire'},\n\t                {name: 'South Yorkshire'},\n\t                {name: 'Southampton'},\n\t                {name: 'Southend-on-Sea'},\n\t                {name: 'Staffordshire'},\n\t                {name: 'Stirlingshire'},\n\t                {name: 'Stockton-on-Tees'},\n\t                {name: 'Stoke-on-Trent'},\n\t                {name: 'Strathclyde'},\n\t                {name: 'Suffolk'},\n\t                {name: 'Surrey'},\n\t                {name: 'Swindon'},\n\t                {name: 'Telford and Wrekin'},\n\t                {name: 'Thurrock'},\n\t                {name: 'Torbay'},\n\t                {name: 'Tyne and Wear'},\n\t                {name: 'Warrington'},\n\t                {name: 'Warwickshire'},\n\t                {name: 'West Berkshire'},\n\t                {name: 'West Glamorgan'},\n\t                {name: 'West Lothian'},\n\t                {name: 'West Midlands'},\n\t                {name: 'West Sussex'},\n\t                {name: 'West Yorkshire'},\n\t                {name: 'Western Isles'},\n\t                {name: 'Wiltshire'},\n\t                {name: 'Windsor and Maidenhead'},\n\t                {name: 'Wokingham'},\n\t                {name: 'Worcestershire'},\n\t                {name: 'Wrexham'},\n\t                {name: 'York'}]\n\t\t\t\t\t},\n\t        provinces: {\n\t            \"ca\": [\n\t                {name: 'Alberta', abbreviation: 'AB'},\n\t                {name: 'British Columbia', abbreviation: 'BC'},\n\t                {name: 'Manitoba', abbreviation: 'MB'},\n\t                {name: 'New Brunswick', abbreviation: 'NB'},\n\t                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n\t                {name: 'Nova Scotia', abbreviation: 'NS'},\n\t                {name: 'Ontario', abbreviation: 'ON'},\n\t                {name: 'Prince Edward Island', abbreviation: 'PE'},\n\t                {name: 'Quebec', abbreviation: 'QC'},\n\t                {name: 'Saskatchewan', abbreviation: 'SK'},\n\t\n\t                // The case could be made that the following are not actually provinces\n\t                // since they are technically considered \"territories\" however they all\n\t                // look the same on an envelope!\n\t                {name: 'Northwest Territories', abbreviation: 'NT'},\n\t                {name: 'Nunavut', abbreviation: 'NU'},\n\t                {name: 'Yukon', abbreviation: 'YT'}\n\t            ],\n\t            \"it\": [\n\t                { name: \"Agrigento\", abbreviation: \"AG\", code: 84 },\n\t                { name: \"Alessandria\", abbreviation: \"AL\", code: 6 },\n\t                { name: \"Ancona\", abbreviation: \"AN\", code: 42 },\n\t                { name: \"Aosta\", abbreviation: \"AO\", code: 7 },\n\t                { name: \"L'Aquila\", abbreviation: \"AQ\", code: 66 },\n\t                { name: \"Arezzo\", abbreviation: \"AR\", code: 51 },\n\t                { name: \"Ascoli-Piceno\", abbreviation: \"AP\", code: 44 },\n\t                { name: \"Asti\", abbreviation: \"AT\", code: 5 },\n\t                { name: \"Avellino\", abbreviation: \"AV\", code: 64 },\n\t                { name: \"Bari\", abbreviation: \"BA\", code: 72 },\n\t                { name: \"Barletta-Andria-Trani\", abbreviation: \"BT\", code: 72 },\n\t                { name: \"Belluno\", abbreviation: \"BL\", code: 25 },\n\t                { name: \"Benevento\", abbreviation: \"BN\", code: 62 },\n\t                { name: \"Bergamo\", abbreviation: \"BG\", code: 16 },\n\t                { name: \"Biella\", abbreviation: \"BI\", code: 96 },\n\t                { name: \"Bologna\", abbreviation: \"BO\", code: 37 },\n\t                { name: \"Bolzano\", abbreviation: \"BZ\", code: 21 },\n\t                { name: \"Brescia\", abbreviation: \"BS\", code: 17 },\n\t                { name: \"Brindisi\", abbreviation: \"BR\", code: 74 },\n\t                { name: \"Cagliari\", abbreviation: \"CA\", code: 92 },\n\t                { name: \"Caltanissetta\", abbreviation: \"CL\", code: 85 },\n\t                { name: \"Campobasso\", abbreviation: \"CB\", code: 70 },\n\t                { name: \"Carbonia Iglesias\", abbreviation: \"CI\", code: 70 },\n\t                { name: \"Caserta\", abbreviation: \"CE\", code: 61 },\n\t                { name: \"Catania\", abbreviation: \"CT\", code: 87 },\n\t                { name: \"Catanzaro\", abbreviation: \"CZ\", code: 79 },\n\t                { name: \"Chieti\", abbreviation: \"CH\", code: 69 },\n\t                { name: \"Como\", abbreviation: \"CO\", code: 13 },\n\t                { name: \"Cosenza\", abbreviation: \"CS\", code: 78 },\n\t                { name: \"Cremona\", abbreviation: \"CR\", code: 19 },\n\t                { name: \"Crotone\", abbreviation: \"KR\", code: 101 },\n\t                { name: \"Cuneo\", abbreviation: \"CN\", code: 4 },\n\t                { name: \"Enna\", abbreviation: \"EN\", code: 86 },\n\t                { name: \"Fermo\", abbreviation: \"FM\", code: 86 },\n\t                { name: \"Ferrara\", abbreviation: \"FE\", code: 38 },\n\t                { name: \"Firenze\", abbreviation: \"FI\", code: 48 },\n\t                { name: \"Foggia\", abbreviation: \"FG\", code: 71 },\n\t                { name: \"Forli-Cesena\", abbreviation: \"FC\", code: 71 },\n\t                { name: \"Frosinone\", abbreviation: \"FR\", code: 60 },\n\t                { name: \"Genova\", abbreviation: \"GE\", code: 10 },\n\t                { name: \"Gorizia\", abbreviation: \"GO\", code: 31 },\n\t                { name: \"Grosseto\", abbreviation: \"GR\", code: 53 },\n\t                { name: \"Imperia\", abbreviation: \"IM\", code: 8 },\n\t                { name: \"Isernia\", abbreviation: \"IS\", code: 94 },\n\t                { name: \"La-Spezia\", abbreviation: \"SP\", code: 66 },\n\t                { name: \"Latina\", abbreviation: \"LT\", code: 59 },\n\t                { name: \"Lecce\", abbreviation: \"LE\", code: 75 },\n\t                { name: \"Lecco\", abbreviation: \"LC\", code: 97 },\n\t                { name: \"Livorno\", abbreviation: \"LI\", code: 49 },\n\t                { name: \"Lodi\", abbreviation: \"LO\", code: 98 },\n\t                { name: \"Lucca\", abbreviation: \"LU\", code: 46 },\n\t                { name: \"Macerata\", abbreviation: \"MC\", code: 43 },\n\t                { name: \"Mantova\", abbreviation: \"MN\", code: 20 },\n\t                { name: \"Massa-Carrara\", abbreviation: \"MS\", code: 45 },\n\t                { name: \"Matera\", abbreviation: \"MT\", code: 77 },\n\t                { name: \"Medio Campidano\", abbreviation: \"VS\", code: 77 },\n\t                { name: \"Messina\", abbreviation: \"ME\", code: 83 },\n\t                { name: \"Milano\", abbreviation: \"MI\", code: 15 },\n\t                { name: \"Modena\", abbreviation: \"MO\", code: 36 },\n\t                { name: \"Monza-Brianza\", abbreviation: \"MB\", code: 36 },\n\t                { name: \"Napoli\", abbreviation: \"NA\", code: 63 },\n\t                { name: \"Novara\", abbreviation: \"NO\", code: 3 },\n\t                { name: \"Nuoro\", abbreviation: \"NU\", code: 91 },\n\t                { name: \"Ogliastra\", abbreviation: \"OG\", code: 91 },\n\t                { name: \"Olbia Tempio\", abbreviation: \"OT\", code: 91 },\n\t                { name: \"Oristano\", abbreviation: \"OR\", code: 95 },\n\t                { name: \"Padova\", abbreviation: \"PD\", code: 28 },\n\t                { name: \"Palermo\", abbreviation: \"PA\", code: 82 },\n\t                { name: \"Parma\", abbreviation: \"PR\", code: 34 },\n\t                { name: \"Pavia\", abbreviation: \"PV\", code: 18 },\n\t                { name: \"Perugia\", abbreviation: \"PG\", code: 54 },\n\t                { name: \"Pesaro-Urbino\", abbreviation: \"PU\", code: 41 },\n\t                { name: \"Pescara\", abbreviation: \"PE\", code: 68 },\n\t                { name: \"Piacenza\", abbreviation: \"PC\", code: 33 },\n\t                { name: \"Pisa\", abbreviation: \"PI\", code: 50 },\n\t                { name: \"Pistoia\", abbreviation: \"PT\", code: 47 },\n\t                { name: \"Pordenone\", abbreviation: \"PN\", code: 93 },\n\t                { name: \"Potenza\", abbreviation: \"PZ\", code: 76 },\n\t                { name: \"Prato\", abbreviation: \"PO\", code: 100 },\n\t                { name: \"Ragusa\", abbreviation: \"RG\", code: 88 },\n\t                { name: \"Ravenna\", abbreviation: \"RA\", code: 39 },\n\t                { name: \"Reggio-Calabria\", abbreviation: \"RC\", code: 35 },\n\t                { name: \"Reggio-Emilia\", abbreviation: \"RE\", code: 35 },\n\t                { name: \"Rieti\", abbreviation: \"RI\", code: 57 },\n\t                { name: \"Rimini\", abbreviation: \"RN\", code: 99 },\n\t                { name: \"Roma\", abbreviation: \"Roma\", code: 58 },\n\t                { name: \"Rovigo\", abbreviation: \"RO\", code: 29 },\n\t                { name: \"Salerno\", abbreviation: \"SA\", code: 65 },\n\t                { name: \"Sassari\", abbreviation: \"SS\", code: 90 },\n\t                { name: \"Savona\", abbreviation: \"SV\", code: 9 },\n\t                { name: \"Siena\", abbreviation: \"SI\", code: 52 },\n\t                { name: \"Siracusa\", abbreviation: \"SR\", code: 89 },\n\t                { name: \"Sondrio\", abbreviation: \"SO\", code: 14 },\n\t                { name: \"Taranto\", abbreviation: \"TA\", code: 73 },\n\t                { name: \"Teramo\", abbreviation: \"TE\", code: 67 },\n\t                { name: \"Terni\", abbreviation: \"TR\", code: 55 },\n\t                { name: \"Torino\", abbreviation: \"TO\", code: 1 },\n\t                { name: \"Trapani\", abbreviation: \"TP\", code: 81 },\n\t                { name: \"Trento\", abbreviation: \"TN\", code: 22 },\n\t                { name: \"Treviso\", abbreviation: \"TV\", code: 26 },\n\t                { name: \"Trieste\", abbreviation: \"TS\", code: 32 },\n\t                { name: \"Udine\", abbreviation: \"UD\", code: 30 },\n\t                { name: \"Varese\", abbreviation: \"VA\", code: 12 },\n\t                { name: \"Venezia\", abbreviation: \"VE\", code: 27 },\n\t                { name: \"Verbania\", abbreviation: \"VB\", code: 27 },\n\t                { name: \"Vercelli\", abbreviation: \"VC\", code: 2 },\n\t                { name: \"Verona\", abbreviation: \"VR\", code: 23 },\n\t                { name: \"Vibo-Valentia\", abbreviation: \"VV\", code: 102 },\n\t                { name: \"Vicenza\", abbreviation: \"VI\", code: 24 },\n\t                { name: \"Viterbo\", abbreviation: \"VT\", code: 56 }\n\t            ]\n\t        },\n\t\n\t            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\n\t        nationalities: [\n\t           {name: 'Afghan'},\n\t           {name: 'Albanian'},\n\t           {name: 'Algerian'},\n\t           {name: 'American'},\n\t           {name: 'Andorran'},\n\t           {name: 'Angolan'},\n\t           {name: 'Antiguans'},\n\t           {name: 'Argentinean'},\n\t           {name: 'Armenian'},\n\t           {name: 'Australian'},\n\t           {name: 'Austrian'},\n\t           {name: 'Azerbaijani'},\n\t           {name: 'Bahami'},\n\t           {name: 'Bahraini'},\n\t           {name: 'Bangladeshi'},\n\t           {name: 'Barbadian'},\n\t           {name: 'Barbudans'},\n\t           {name: 'Batswana'},\n\t           {name: 'Belarusian'},\n\t           {name: 'Belgian'},\n\t           {name: 'Belizean'},\n\t           {name: 'Beninese'},\n\t           {name: 'Bhutanese'},\n\t           {name: 'Bolivian'},\n\t           {name: 'Bosnian'},\n\t           {name: 'Brazilian'},\n\t           {name: 'British'},\n\t           {name: 'Bruneian'},\n\t           {name: 'Bulgarian'},\n\t           {name: 'Burkinabe'},\n\t           {name: 'Burmese'},\n\t           {name: 'Burundian'},\n\t           {name: 'Cambodian'},\n\t           {name: 'Cameroonian'},\n\t           {name: 'Canadian'},\n\t           {name: 'Cape Verdean'},\n\t           {name: 'Central African'},\n\t           {name: 'Chadian'},\n\t           {name: 'Chilean'},\n\t           {name: 'Chinese'},\n\t           {name: 'Colombian'},\n\t           {name: 'Comoran'},\n\t           {name: 'Congolese'},\n\t           {name: 'Costa Rican'},\n\t           {name: 'Croatian'},\n\t           {name: 'Cuban'},\n\t           {name: 'Cypriot'},\n\t           {name: 'Czech'},\n\t           {name: 'Danish'},\n\t           {name: 'Djibouti'},\n\t           {name: 'Dominican'},\n\t           {name: 'Dutch'},\n\t           {name: 'East Timorese'},\n\t           {name: 'Ecuadorean'},\n\t           {name: 'Egyptian'},\n\t           {name: 'Emirian'},\n\t           {name: 'Equatorial Guinean'},\n\t           {name: 'Eritrean'},\n\t           {name: 'Estonian'},\n\t           {name: 'Ethiopian'},\n\t           {name: 'Fijian'},\n\t           {name: 'Filipino'},\n\t           {name: 'Finnish'},\n\t           {name: 'French'},\n\t           {name: 'Gabonese'},\n\t           {name: 'Gambian'},\n\t           {name: 'Georgian'},\n\t           {name: 'German'},\n\t           {name: 'Ghanaian'},\n\t           {name: 'Greek'},\n\t           {name: 'Grenadian'},\n\t           {name: 'Guatemalan'},\n\t           {name: 'Guinea-Bissauan'},\n\t           {name: 'Guinean'},\n\t           {name: 'Guyanese'},\n\t           {name: 'Haitian'},\n\t           {name: 'Herzegovinian'},\n\t           {name: 'Honduran'},\n\t           {name: 'Hungarian'},\n\t           {name: 'I-Kiribati'},\n\t           {name: 'Icelander'},\n\t           {name: 'Indian'},\n\t           {name: 'Indonesian'},\n\t           {name: 'Iranian'},\n\t           {name: 'Iraqi'},\n\t           {name: 'Irish'},\n\t           {name: 'Israeli'},\n\t           {name: 'Italian'},\n\t           {name: 'Ivorian'},\n\t           {name: 'Jamaican'},\n\t           {name: 'Japanese'},\n\t           {name: 'Jordanian'},\n\t           {name: 'Kazakhstani'},\n\t           {name: 'Kenyan'},\n\t           {name: 'Kittian and Nevisian'},\n\t           {name: 'Kuwaiti'},\n\t           {name: 'Kyrgyz'},\n\t           {name: 'Laotian'},\n\t           {name: 'Latvian'},\n\t           {name: 'Lebanese'},\n\t           {name: 'Liberian'},\n\t           {name: 'Libyan'},\n\t           {name: 'Liechtensteiner'},\n\t           {name: 'Lithuanian'},\n\t           {name: 'Luxembourger'},\n\t           {name: 'Macedonian'},\n\t           {name: 'Malagasy'},\n\t           {name: 'Malawian'},\n\t           {name: 'Malaysian'},\n\t           {name: 'Maldivan'},\n\t           {name: 'Malian'},\n\t           {name: 'Maltese'},\n\t           {name: 'Marshallese'},\n\t           {name: 'Mauritanian'},\n\t           {name: 'Mauritian'},\n\t           {name: 'Mexican'},\n\t           {name: 'Micronesian'},\n\t           {name: 'Moldovan'},\n\t           {name: 'Monacan'},\n\t           {name: 'Mongolian'},\n\t           {name: 'Moroccan'},\n\t           {name: 'Mosotho'},\n\t           {name: 'Motswana'},\n\t           {name: 'Mozambican'},\n\t           {name: 'Namibian'},\n\t           {name: 'Nauruan'},\n\t           {name: 'Nepalese'},\n\t           {name: 'New Zealander'},\n\t           {name: 'Nicaraguan'},\n\t           {name: 'Nigerian'},\n\t           {name: 'Nigerien'},\n\t           {name: 'North Korean'},\n\t           {name: 'Northern Irish'},\n\t           {name: 'Norwegian'},\n\t           {name: 'Omani'},\n\t           {name: 'Pakistani'},\n\t           {name: 'Palauan'},\n\t           {name: 'Panamanian'},\n\t           {name: 'Papua New Guinean'},\n\t           {name: 'Paraguayan'},\n\t           {name: 'Peruvian'},\n\t           {name: 'Polish'},\n\t           {name: 'Portuguese'},\n\t           {name: 'Qatari'},\n\t           {name: 'Romani'},\n\t           {name: 'Russian'},\n\t           {name: 'Rwandan'},\n\t           {name: 'Saint Lucian'},\n\t           {name: 'Salvadoran'},\n\t           {name: 'Samoan'},\n\t           {name: 'San Marinese'},\n\t           {name: 'Sao Tomean'},\n\t           {name: 'Saudi'},\n\t           {name: 'Scottish'},\n\t           {name: 'Senegalese'},\n\t           {name: 'Serbian'},\n\t           {name: 'Seychellois'},\n\t           {name: 'Sierra Leonean'},\n\t           {name: 'Singaporean'},\n\t           {name: 'Slovakian'},\n\t           {name: 'Slovenian'},\n\t           {name: 'Solomon Islander'},\n\t           {name: 'Somali'},\n\t           {name: 'South African'},\n\t           {name: 'South Korean'},\n\t           {name: 'Spanish'},\n\t           {name: 'Sri Lankan'},\n\t           {name: 'Sudanese'},\n\t           {name: 'Surinamer'},\n\t           {name: 'Swazi'},\n\t           {name: 'Swedish'},\n\t           {name: 'Swiss'},\n\t           {name: 'Syrian'},\n\t           {name: 'Taiwanese'},\n\t           {name: 'Tajik'},\n\t           {name: 'Tanzanian'},\n\t           {name: 'Thai'},\n\t           {name: 'Togolese'},\n\t           {name: 'Tongan'},\n\t           {name: 'Trinidadian or Tobagonian'},\n\t           {name: 'Tunisian'},\n\t           {name: 'Turkish'},\n\t           {name: 'Tuvaluan'},\n\t           {name: 'Ugandan'},\n\t           {name: 'Ukrainian'},\n\t           {name: 'Uruguaya'},\n\t           {name: 'Uzbekistani'},\n\t           {name: 'Venezuela'},\n\t           {name: 'Vietnamese'},\n\t           {name: 'Wels'},\n\t           {name: 'Yemenit'},\n\t           {name: 'Zambia'},\n\t           {name: 'Zimbabwe'},\n\t        ],\n\t\n\t        us_states_and_dc: [\n\t            {name: 'Alabama', abbreviation: 'AL'},\n\t            {name: 'Alaska', abbreviation: 'AK'},\n\t            {name: 'Arizona', abbreviation: 'AZ'},\n\t            {name: 'Arkansas', abbreviation: 'AR'},\n\t            {name: 'California', abbreviation: 'CA'},\n\t            {name: 'Colorado', abbreviation: 'CO'},\n\t            {name: 'Connecticut', abbreviation: 'CT'},\n\t            {name: 'Delaware', abbreviation: 'DE'},\n\t            {name: 'District of Columbia', abbreviation: 'DC'},\n\t            {name: 'Florida', abbreviation: 'FL'},\n\t            {name: 'Georgia', abbreviation: 'GA'},\n\t            {name: 'Hawaii', abbreviation: 'HI'},\n\t            {name: 'Idaho', abbreviation: 'ID'},\n\t            {name: 'Illinois', abbreviation: 'IL'},\n\t            {name: 'Indiana', abbreviation: 'IN'},\n\t            {name: 'Iowa', abbreviation: 'IA'},\n\t            {name: 'Kansas', abbreviation: 'KS'},\n\t            {name: 'Kentucky', abbreviation: 'KY'},\n\t            {name: 'Louisiana', abbreviation: 'LA'},\n\t            {name: 'Maine', abbreviation: 'ME'},\n\t            {name: 'Maryland', abbreviation: 'MD'},\n\t            {name: 'Massachusetts', abbreviation: 'MA'},\n\t            {name: 'Michigan', abbreviation: 'MI'},\n\t            {name: 'Minnesota', abbreviation: 'MN'},\n\t            {name: 'Mississippi', abbreviation: 'MS'},\n\t            {name: 'Missouri', abbreviation: 'MO'},\n\t            {name: 'Montana', abbreviation: 'MT'},\n\t            {name: 'Nebraska', abbreviation: 'NE'},\n\t            {name: 'Nevada', abbreviation: 'NV'},\n\t            {name: 'New Hampshire', abbreviation: 'NH'},\n\t            {name: 'New Jersey', abbreviation: 'NJ'},\n\t            {name: 'New Mexico', abbreviation: 'NM'},\n\t            {name: 'New York', abbreviation: 'NY'},\n\t            {name: 'North Carolina', abbreviation: 'NC'},\n\t            {name: 'North Dakota', abbreviation: 'ND'},\n\t            {name: 'Ohio', abbreviation: 'OH'},\n\t            {name: 'Oklahoma', abbreviation: 'OK'},\n\t            {name: 'Oregon', abbreviation: 'OR'},\n\t            {name: 'Pennsylvania', abbreviation: 'PA'},\n\t            {name: 'Rhode Island', abbreviation: 'RI'},\n\t            {name: 'South Carolina', abbreviation: 'SC'},\n\t            {name: 'South Dakota', abbreviation: 'SD'},\n\t            {name: 'Tennessee', abbreviation: 'TN'},\n\t            {name: 'Texas', abbreviation: 'TX'},\n\t            {name: 'Utah', abbreviation: 'UT'},\n\t            {name: 'Vermont', abbreviation: 'VT'},\n\t            {name: 'Virginia', abbreviation: 'VA'},\n\t            {name: 'Washington', abbreviation: 'WA'},\n\t            {name: 'West Virginia', abbreviation: 'WV'},\n\t            {name: 'Wisconsin', abbreviation: 'WI'},\n\t            {name: 'Wyoming', abbreviation: 'WY'}\n\t        ],\n\t\n\t        territories: [\n\t            {name: 'American Samoa', abbreviation: 'AS'},\n\t            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n\t            {name: 'Guam', abbreviation: 'GU'},\n\t            {name: 'Marshall Islands', abbreviation: 'MH'},\n\t            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n\t            {name: 'Puerto Rico', abbreviation: 'PR'},\n\t            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n\t        ],\n\t\n\t        armed_forces: [\n\t            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n\t            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n\t            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n\t        ],\n\t\n\t        country_regions: {\n\t            it: [\n\t                { name: \"Valle d'Aosta\", abbreviation: \"VDA\" },\n\t                { name: \"Piemonte\", abbreviation: \"PIE\" },\n\t                { name: \"Lombardia\", abbreviation: \"LOM\" },\n\t                { name: \"Veneto\", abbreviation: \"VEN\" },\n\t                { name: \"Trentino Alto Adige\", abbreviation: \"TAA\" },\n\t                { name: \"Friuli Venezia Giulia\", abbreviation: \"FVG\" },\n\t                { name: \"Liguria\", abbreviation: \"LIG\" },\n\t                { name: \"Emilia Romagna\", abbreviation: \"EMR\" },\n\t                { name: \"Toscana\", abbreviation: \"TOS\" },\n\t                { name: \"Umbria\", abbreviation: \"UMB\" },\n\t                { name: \"Marche\", abbreviation: \"MAR\" },\n\t                { name: \"Abruzzo\", abbreviation: \"ABR\" },\n\t                { name: \"Lazio\", abbreviation: \"LAZ\" },\n\t                { name: \"Campania\", abbreviation: \"CAM\" },\n\t                { name: \"Puglia\", abbreviation: \"PUG\" },\n\t                { name: \"Basilicata\", abbreviation: \"BAS\" },\n\t                { name: \"Molise\", abbreviation: \"MOL\" },\n\t                { name: \"Calabria\", abbreviation: \"CAL\" },\n\t                { name: \"Sicilia\", abbreviation: \"SIC\" },\n\t                { name: \"Sardegna\", abbreviation: \"SAR\" }\n\t            ]\n\t        },\n\t\n\t        street_suffixes: {\n\t            'us': [\n\t                {name: 'Avenue', abbreviation: 'Ave'},\n\t                {name: 'Boulevard', abbreviation: 'Blvd'},\n\t                {name: 'Center', abbreviation: 'Ctr'},\n\t                {name: 'Circle', abbreviation: 'Cir'},\n\t                {name: 'Court', abbreviation: 'Ct'},\n\t                {name: 'Drive', abbreviation: 'Dr'},\n\t                {name: 'Extension', abbreviation: 'Ext'},\n\t                {name: 'Glen', abbreviation: 'Gln'},\n\t                {name: 'Grove', abbreviation: 'Grv'},\n\t                {name: 'Heights', abbreviation: 'Hts'},\n\t                {name: 'Highway', abbreviation: 'Hwy'},\n\t                {name: 'Junction', abbreviation: 'Jct'},\n\t                {name: 'Key', abbreviation: 'Key'},\n\t                {name: 'Lane', abbreviation: 'Ln'},\n\t                {name: 'Loop', abbreviation: 'Loop'},\n\t                {name: 'Manor', abbreviation: 'Mnr'},\n\t                {name: 'Mill', abbreviation: 'Mill'},\n\t                {name: 'Park', abbreviation: 'Park'},\n\t                {name: 'Parkway', abbreviation: 'Pkwy'},\n\t                {name: 'Pass', abbreviation: 'Pass'},\n\t                {name: 'Path', abbreviation: 'Path'},\n\t                {name: 'Pike', abbreviation: 'Pike'},\n\t                {name: 'Place', abbreviation: 'Pl'},\n\t                {name: 'Plaza', abbreviation: 'Plz'},\n\t                {name: 'Point', abbreviation: 'Pt'},\n\t                {name: 'Ridge', abbreviation: 'Rdg'},\n\t                {name: 'River', abbreviation: 'Riv'},\n\t                {name: 'Road', abbreviation: 'Rd'},\n\t                {name: 'Square', abbreviation: 'Sq'},\n\t                {name: 'Street', abbreviation: 'St'},\n\t                {name: 'Terrace', abbreviation: 'Ter'},\n\t                {name: 'Trail', abbreviation: 'Trl'},\n\t                {name: 'Turnpike', abbreviation: 'Tpke'},\n\t                {name: 'View', abbreviation: 'Vw'},\n\t                {name: 'Way', abbreviation: 'Way'}\n\t            ],\n\t            'it': [\n\t                { name: 'Accesso', abbreviation: 'Acc.' },\n\t                { name: 'Alzaia', abbreviation: 'Alz.' },\n\t                { name: 'Arco', abbreviation: 'Arco' },\n\t                { name: 'Archivolto', abbreviation: 'Acv.' },\n\t                { name: 'Arena', abbreviation: 'Arena' },\n\t                { name: 'Argine', abbreviation: 'Argine' },\n\t                { name: 'Bacino', abbreviation: 'Bacino' },\n\t                { name: 'Banchi', abbreviation: 'Banchi' },\n\t                { name: 'Banchina', abbreviation: 'Ban.' },\n\t                { name: 'Bastioni', abbreviation: 'Bas.' },\n\t                { name: 'Belvedere', abbreviation: 'Belv.' },\n\t                { name: 'Borgata', abbreviation: 'B.ta' },\n\t                { name: 'Borgo', abbreviation: 'B.go' },\n\t                { name: 'Calata', abbreviation: 'Cal.' },\n\t                { name: 'Calle', abbreviation: 'Calle' },\n\t                { name: 'Campiello', abbreviation: 'Cam.' },\n\t                { name: 'Campo', abbreviation: 'Cam.' },\n\t                { name: 'Canale', abbreviation: 'Can.' },\n\t                { name: 'Carraia', abbreviation: 'Carr.' },\n\t                { name: 'Cascina', abbreviation: 'Cascina' },\n\t                { name: 'Case sparse', abbreviation: 'c.s.' },\n\t                { name: 'Cavalcavia', abbreviation: 'Cv.' },\n\t                { name: 'Circonvallazione', abbreviation: 'Cv.' },\n\t                { name: 'Complanare', abbreviation: 'C.re' },\n\t                { name: 'Contrada', abbreviation: 'C.da' },\n\t                { name: 'Corso', abbreviation: 'C.so' },\n\t                { name: 'Corte', abbreviation: 'C.te' },\n\t                { name: 'Cortile', abbreviation: 'C.le' },\n\t                { name: 'Diramazione', abbreviation: 'Dir.' },\n\t                { name: 'Fondaco', abbreviation: 'F.co' },\n\t                { name: 'Fondamenta', abbreviation: 'F.ta' },\n\t                { name: 'Fondo', abbreviation: 'F.do' },\n\t                { name: 'Frazione', abbreviation: 'Fr.' },\n\t                { name: 'Isola', abbreviation: 'Is.' },\n\t                { name: 'Largo', abbreviation: 'L.go' },\n\t                { name: 'Litoranea', abbreviation: 'Lit.' },\n\t                { name: 'Lungolago', abbreviation: 'L.go lago' },\n\t                { name: 'Lungo Po', abbreviation: 'l.go Po' },\n\t                { name: 'Molo', abbreviation: 'Molo' },\n\t                { name: 'Mura', abbreviation: 'Mura' },\n\t                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },\n\t                { name: 'Passeggiata', abbreviation: 'Pass.' },\n\t                { name: 'Piazza', abbreviation: 'P.zza' },\n\t                { name: 'Piazzale', abbreviation: 'P.le' },\n\t                { name: 'Ponte', abbreviation: 'P.te' },\n\t                { name: 'Portico', abbreviation: 'P.co' },\n\t                { name: 'Rampa', abbreviation: 'Rampa' },\n\t                { name: 'Regione', abbreviation: 'Reg.' },\n\t                { name: 'Rione', abbreviation: 'R.ne' },\n\t                { name: 'Rio', abbreviation: 'Rio' },\n\t                { name: 'Ripa', abbreviation: 'Ripa' },\n\t                { name: 'Riva', abbreviation: 'Riva' },\n\t                { name: 'Rondò', abbreviation: 'Rondò' },\n\t                { name: 'Rotonda', abbreviation: 'Rot.' },\n\t                { name: 'Sagrato', abbreviation: 'Sagr.' },\n\t                { name: 'Salita', abbreviation: 'Sal.' },\n\t                { name: 'Scalinata', abbreviation: 'Scal.' },\n\t                { name: 'Scalone', abbreviation: 'Scal.' },\n\t                { name: 'Slargo', abbreviation: 'Sl.' },\n\t                { name: 'Sottoportico', abbreviation: 'Sott.' },\n\t                { name: 'Strada', abbreviation: 'Str.' },\n\t                { name: 'Stradale', abbreviation: 'Str.le' },\n\t                { name: 'Strettoia', abbreviation: 'Strett.' },\n\t                { name: 'Traversa', abbreviation: 'Trav.' },\n\t                { name: 'Via', abbreviation: 'V.' },\n\t                { name: 'Viale', abbreviation: 'V.le' },\n\t                { name: 'Vicinale', abbreviation: 'Vic.le' },\n\t                { name: 'Vicolo', abbreviation: 'Vic.' }\n\t            ],\n\t            'uk' : [\n\t                {name: 'Avenue', abbreviation: 'Ave'},\n\t                {name: 'Close', abbreviation: 'Cl'},\n\t                {name: 'Court', abbreviation: 'Ct'},\n\t                {name: 'Crescent', abbreviation: 'Cr'},\n\t                {name: 'Drive', abbreviation: 'Dr'},\n\t                {name: 'Garden', abbreviation: 'Gdn'},\n\t                {name: 'Gardens', abbreviation: 'Gdns'},\n\t                {name: 'Green', abbreviation: 'Gn'},\n\t                {name: 'Grove', abbreviation: 'Gr'},\n\t                {name: 'Lane', abbreviation: 'Ln'},\n\t                {name: 'Mount', abbreviation: 'Mt'},\n\t                {name: 'Place', abbreviation: 'Pl'},\n\t                {name: 'Park', abbreviation: 'Pk'},\n\t                {name: 'Ridge', abbreviation: 'Rdg'},\n\t                {name: 'Road', abbreviation: 'Rd'},\n\t                {name: 'Square', abbreviation: 'Sq'},\n\t                {name: 'Street', abbreviation: 'St'},\n\t                {name: 'Terrace', abbreviation: 'Ter'},\n\t                {name: 'Valley', abbreviation: 'Val'}\n\t            ]\n\t        },\n\t\n\t        months: [\n\t            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n\t            // Not messing with leap years...\n\t            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n\t            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n\t            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n\t            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n\t            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n\t            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n\t            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n\t            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n\t            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n\t            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n\t            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n\t        ],\n\t\n\t        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n\t        cc_types: [\n\t            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n\t            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n\t            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n\t            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n\t            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n\t            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n\t            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n\t            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n\t            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n\t            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n\t            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n\t            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n\t            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n\t            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n\t            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n\t            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n\t            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n\t        ],\n\t\n\t        //return all world currency by ISO 4217\n\t        currency_types: [\n\t            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n\t            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n\t            {'code' : 'ALL', 'name' : 'Albania Lek'},\n\t            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n\t            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n\t            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n\t            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n\t            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n\t            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n\t            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n\t            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n\t            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n\t            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n\t            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n\t            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n\t            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n\t            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n\t            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n\t            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n\t            {'code' : 'BRL', 'name' : 'Brazil Real'},\n\t            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n\t            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n\t            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n\t            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n\t            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n\t            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n\t            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n\t            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n\t            {'code' : 'CLP', 'name' : 'Chile Peso'},\n\t            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n\t            {'code' : 'COP', 'name' : 'Colombia Peso'},\n\t            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n\t            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n\t            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n\t            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n\t            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n\t            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n\t            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n\t            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n\t            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n\t            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n\t            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n\t            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n\t            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n\t            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n\t            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n\t            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n\t            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n\t            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n\t            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n\t            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n\t            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n\t            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n\t            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n\t            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n\t            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n\t            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n\t            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n\t            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n\t            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n\t            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n\t            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n\t            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n\t            {'code' : 'INR', 'name' : 'India Rupee'},\n\t            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n\t            {'code' : 'IRR', 'name' : 'Iran Rial'},\n\t            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n\t            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n\t            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n\t            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n\t            {'code' : 'JPY', 'name' : 'Japan Yen'},\n\t            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n\t            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n\t            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n\t            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n\t            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n\t            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n\t            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n\t            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n\t            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n\t            {'code' : 'LAK', 'name' : 'Laos Kip'},\n\t            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n\t            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n\t            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n\t            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n\t            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n\t            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n\t            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n\t            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n\t            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n\t            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n\t            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n\t            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n\t            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n\t            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n\t            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n\t            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n\t            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n\t            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n\t            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n\t            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n\t            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n\t            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n\t            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n\t            {'code' : 'NOK', 'name' : 'Norway Krone'},\n\t            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n\t            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n\t            {'code' : 'OMR', 'name' : 'Oman Rial'},\n\t            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n\t            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n\t            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n\t            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n\t            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n\t            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n\t            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n\t            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n\t            {'code' : 'RON', 'name' : 'Romania New Leu'},\n\t            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n\t            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n\t            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n\t            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n\t            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n\t            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n\t            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n\t            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n\t            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n\t            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n\t            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n\t            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n\t            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n\t            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n\t            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n\t            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n\t            {'code' : 'SYP', 'name' : 'Syria Pound'},\n\t            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n\t            {'code' : 'THB', 'name' : 'Thailand Baht'},\n\t            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n\t            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n\t            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n\t            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n\t            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n\t            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n\t            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n\t            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n\t            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n\t            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n\t            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n\t            {'code' : 'USD', 'name' : 'United States Dollar'},\n\t            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n\t            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n\t            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n\t            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n\t            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n\t            {'code' : 'WST', 'name' : 'Samoa Tala'},\n\t            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n\t            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n\t            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n\t            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n\t            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n\t            {'code' : 'YER', 'name' : 'Yemen Rial'},\n\t            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n\t            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n\t            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n\t        ],\n\t\n\t        // return the names of all valide colors\n\t        colorNames : [  \"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\",\n\t            \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\",\n\t            \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\",\n\t            \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\",\n\t            \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\",\n\t            \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\",\n\t            \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\",\n\t            \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\",\n\t            \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"\n\t        ],\n\t\n\t        fileExtension : {\n\t            \"raster\"    : [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\n\t            \"vector\"    : [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\n\t            \"3d\"        : [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\n\t            \"document\"  : [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\n\t        },\n\t\n\t        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\n\t        timezones: [\n\t                  {\n\t                    \"name\": \"Dateline Standard Time\",\n\t                    \"abbr\": \"DST\",\n\t                    \"offset\": -12,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-12:00) International Date Line West\",\n\t                    \"utc\": [\n\t                      \"Etc/GMT+12\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"UTC-11\",\n\t                    \"abbr\": \"U\",\n\t                    \"offset\": -11,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n\t                    \"utc\": [\n\t                      \"Etc/GMT+11\",\n\t                      \"Pacific/Midway\",\n\t                      \"Pacific/Niue\",\n\t                      \"Pacific/Pago_Pago\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Hawaiian Standard Time\",\n\t                    \"abbr\": \"HST\",\n\t                    \"offset\": -10,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-10:00) Hawaii\",\n\t                    \"utc\": [\n\t                      \"Etc/GMT+10\",\n\t                      \"Pacific/Honolulu\",\n\t                      \"Pacific/Johnston\",\n\t                      \"Pacific/Rarotonga\",\n\t                      \"Pacific/Tahiti\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Alaskan Standard Time\",\n\t                    \"abbr\": \"AKDT\",\n\t                    \"offset\": -8,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-09:00) Alaska\",\n\t                    \"utc\": [\n\t                      \"America/Anchorage\",\n\t                      \"America/Juneau\",\n\t                      \"America/Nome\",\n\t                      \"America/Sitka\",\n\t                      \"America/Yakutat\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Pacific Standard Time (Mexico)\",\n\t                    \"abbr\": \"PDT\",\n\t                    \"offset\": -7,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-08:00) Baja California\",\n\t                    \"utc\": [\n\t                      \"America/Santa_Isabel\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Pacific Standard Time\",\n\t                    \"abbr\": \"PDT\",\n\t                    \"offset\": -7,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n\t                    \"utc\": [\n\t                      \"America/Dawson\",\n\t                      \"America/Los_Angeles\",\n\t                      \"America/Tijuana\",\n\t                      \"America/Vancouver\",\n\t                      \"America/Whitehorse\",\n\t                      \"PST8PDT\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"US Mountain Standard Time\",\n\t                    \"abbr\": \"UMST\",\n\t                    \"offset\": -7,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-07:00) Arizona\",\n\t                    \"utc\": [\n\t                      \"America/Creston\",\n\t                      \"America/Dawson_Creek\",\n\t                      \"America/Hermosillo\",\n\t                      \"America/Phoenix\",\n\t                      \"Etc/GMT+7\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Mountain Standard Time (Mexico)\",\n\t                    \"abbr\": \"MDT\",\n\t                    \"offset\": -6,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n\t                    \"utc\": [\n\t                      \"America/Chihuahua\",\n\t                      \"America/Mazatlan\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Mountain Standard Time\",\n\t                    \"abbr\": \"MDT\",\n\t                    \"offset\": -6,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n\t                    \"utc\": [\n\t                      \"America/Boise\",\n\t                      \"America/Cambridge_Bay\",\n\t                      \"America/Denver\",\n\t                      \"America/Edmonton\",\n\t                      \"America/Inuvik\",\n\t                      \"America/Ojinaga\",\n\t                      \"America/Yellowknife\",\n\t                      \"MST7MDT\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central America Standard Time\",\n\t                    \"abbr\": \"CAST\",\n\t                    \"offset\": -6,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-06:00) Central America\",\n\t                    \"utc\": [\n\t                      \"America/Belize\",\n\t                      \"America/Costa_Rica\",\n\t                      \"America/El_Salvador\",\n\t                      \"America/Guatemala\",\n\t                      \"America/Managua\",\n\t                      \"America/Tegucigalpa\",\n\t                      \"Etc/GMT+6\",\n\t                      \"Pacific/Galapagos\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central Standard Time\",\n\t                    \"abbr\": \"CDT\",\n\t                    \"offset\": -5,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n\t                    \"utc\": [\n\t                      \"America/Chicago\",\n\t                      \"America/Indiana/Knox\",\n\t                      \"America/Indiana/Tell_City\",\n\t                      \"America/Matamoros\",\n\t                      \"America/Menominee\",\n\t                      \"America/North_Dakota/Beulah\",\n\t                      \"America/North_Dakota/Center\",\n\t                      \"America/North_Dakota/New_Salem\",\n\t                      \"America/Rainy_River\",\n\t                      \"America/Rankin_Inlet\",\n\t                      \"America/Resolute\",\n\t                      \"America/Winnipeg\",\n\t                      \"CST6CDT\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central Standard Time (Mexico)\",\n\t                    \"abbr\": \"CDT\",\n\t                    \"offset\": -5,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n\t                    \"utc\": [\n\t                      \"America/Bahia_Banderas\",\n\t                      \"America/Cancun\",\n\t                      \"America/Merida\",\n\t                      \"America/Mexico_City\",\n\t                      \"America/Monterrey\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Canada Central Standard Time\",\n\t                    \"abbr\": \"CCST\",\n\t                    \"offset\": -6,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-06:00) Saskatchewan\",\n\t                    \"utc\": [\n\t                      \"America/Regina\",\n\t                      \"America/Swift_Current\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"SA Pacific Standard Time\",\n\t                    \"abbr\": \"SPST\",\n\t                    \"offset\": -5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n\t                    \"utc\": [\n\t                      \"America/Bogota\",\n\t                      \"America/Cayman\",\n\t                      \"America/Coral_Harbour\",\n\t                      \"America/Eirunepe\",\n\t                      \"America/Guayaquil\",\n\t                      \"America/Jamaica\",\n\t                      \"America/Lima\",\n\t                      \"America/Panama\",\n\t                      \"America/Rio_Branco\",\n\t                      \"Etc/GMT+5\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Eastern Standard Time\",\n\t                    \"abbr\": \"EDT\",\n\t                    \"offset\": -4,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n\t                    \"utc\": [\n\t                      \"America/Detroit\",\n\t                      \"America/Havana\",\n\t                      \"America/Indiana/Petersburg\",\n\t                      \"America/Indiana/Vincennes\",\n\t                      \"America/Indiana/Winamac\",\n\t                      \"America/Iqaluit\",\n\t                      \"America/Kentucky/Monticello\",\n\t                      \"America/Louisville\",\n\t                      \"America/Montreal\",\n\t                      \"America/Nassau\",\n\t                      \"America/New_York\",\n\t                      \"America/Nipigon\",\n\t                      \"America/Pangnirtung\",\n\t                      \"America/Port-au-Prince\",\n\t                      \"America/Thunder_Bay\",\n\t                      \"America/Toronto\",\n\t                      \"EST5EDT\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"US Eastern Standard Time\",\n\t                    \"abbr\": \"UEDT\",\n\t                    \"offset\": -4,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-05:00) Indiana (East)\",\n\t                    \"utc\": [\n\t                      \"America/Indiana/Marengo\",\n\t                      \"America/Indiana/Vevay\",\n\t                      \"America/Indianapolis\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Venezuela Standard Time\",\n\t                    \"abbr\": \"VST\",\n\t                    \"offset\": -4.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-04:30) Caracas\",\n\t                    \"utc\": [\n\t                      \"America/Caracas\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Paraguay Standard Time\",\n\t                    \"abbr\": \"PST\",\n\t                    \"offset\": -4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-04:00) Asuncion\",\n\t                    \"utc\": [\n\t                      \"America/Asuncion\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Atlantic Standard Time\",\n\t                    \"abbr\": \"ADT\",\n\t                    \"offset\": -3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n\t                    \"utc\": [\n\t                      \"America/Glace_Bay\",\n\t                      \"America/Goose_Bay\",\n\t                      \"America/Halifax\",\n\t                      \"America/Moncton\",\n\t                      \"America/Thule\",\n\t                      \"Atlantic/Bermuda\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central Brazilian Standard Time\",\n\t                    \"abbr\": \"CBST\",\n\t                    \"offset\": -4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-04:00) Cuiaba\",\n\t                    \"utc\": [\n\t                      \"America/Campo_Grande\",\n\t                      \"America/Cuiaba\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"SA Western Standard Time\",\n\t                    \"abbr\": \"SWST\",\n\t                    \"offset\": -4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n\t                    \"utc\": [\n\t                      \"America/Anguilla\",\n\t                      \"America/Antigua\",\n\t                      \"America/Aruba\",\n\t                      \"America/Barbados\",\n\t                      \"America/Blanc-Sablon\",\n\t                      \"America/Boa_Vista\",\n\t                      \"America/Curacao\",\n\t                      \"America/Dominica\",\n\t                      \"America/Grand_Turk\",\n\t                      \"America/Grenada\",\n\t                      \"America/Guadeloupe\",\n\t                      \"America/Guyana\",\n\t                      \"America/Kralendijk\",\n\t                      \"America/La_Paz\",\n\t                      \"America/Lower_Princes\",\n\t                      \"America/Manaus\",\n\t                      \"America/Marigot\",\n\t                      \"America/Martinique\",\n\t                      \"America/Montserrat\",\n\t                      \"America/Port_of_Spain\",\n\t                      \"America/Porto_Velho\",\n\t                      \"America/Puerto_Rico\",\n\t                      \"America/Santo_Domingo\",\n\t                      \"America/St_Barthelemy\",\n\t                      \"America/St_Kitts\",\n\t                      \"America/St_Lucia\",\n\t                      \"America/St_Thomas\",\n\t                      \"America/St_Vincent\",\n\t                      \"America/Tortola\",\n\t                      \"Etc/GMT+4\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Pacific SA Standard Time\",\n\t                    \"abbr\": \"PSST\",\n\t                    \"offset\": -4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-04:00) Santiago\",\n\t                    \"utc\": [\n\t                      \"America/Santiago\",\n\t                      \"Antarctica/Palmer\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Newfoundland Standard Time\",\n\t                    \"abbr\": \"NDT\",\n\t                    \"offset\": -2.5,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-03:30) Newfoundland\",\n\t                    \"utc\": [\n\t                      \"America/St_Johns\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"E. South America Standard Time\",\n\t                    \"abbr\": \"ESAST\",\n\t                    \"offset\": -3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-03:00) Brasilia\",\n\t                    \"utc\": [\n\t                      \"America/Sao_Paulo\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Argentina Standard Time\",\n\t                    \"abbr\": \"AST\",\n\t                    \"offset\": -3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-03:00) Buenos Aires\",\n\t                    \"utc\": [\n\t                      \"America/Argentina/La_Rioja\",\n\t                      \"America/Argentina/Rio_Gallegos\",\n\t                      \"America/Argentina/Salta\",\n\t                      \"America/Argentina/San_Juan\",\n\t                      \"America/Argentina/San_Luis\",\n\t                      \"America/Argentina/Tucuman\",\n\t                      \"America/Argentina/Ushuaia\",\n\t                      \"America/Buenos_Aires\",\n\t                      \"America/Catamarca\",\n\t                      \"America/Cordoba\",\n\t                      \"America/Jujuy\",\n\t                      \"America/Mendoza\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"SA Eastern Standard Time\",\n\t                    \"abbr\": \"SEST\",\n\t                    \"offset\": -3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n\t                    \"utc\": [\n\t                      \"America/Araguaina\",\n\t                      \"America/Belem\",\n\t                      \"America/Cayenne\",\n\t                      \"America/Fortaleza\",\n\t                      \"America/Maceio\",\n\t                      \"America/Paramaribo\",\n\t                      \"America/Recife\",\n\t                      \"America/Santarem\",\n\t                      \"Antarctica/Rothera\",\n\t                      \"Atlantic/Stanley\",\n\t                      \"Etc/GMT+3\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Greenland Standard Time\",\n\t                    \"abbr\": \"GDT\",\n\t                    \"offset\": -2,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-03:00) Greenland\",\n\t                    \"utc\": [\n\t                      \"America/Godthab\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Montevideo Standard Time\",\n\t                    \"abbr\": \"MST\",\n\t                    \"offset\": -3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-03:00) Montevideo\",\n\t                    \"utc\": [\n\t                      \"America/Montevideo\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Bahia Standard Time\",\n\t                    \"abbr\": \"BST\",\n\t                    \"offset\": -3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-03:00) Salvador\",\n\t                    \"utc\": [\n\t                      \"America/Bahia\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"UTC-02\",\n\t                    \"abbr\": \"U\",\n\t                    \"offset\": -2,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n\t                    \"utc\": [\n\t                      \"America/Noronha\",\n\t                      \"Atlantic/South_Georgia\",\n\t                      \"Etc/GMT+2\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Mid-Atlantic Standard Time\",\n\t                    \"abbr\": \"MDT\",\n\t                    \"offset\": -1,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-02:00) Mid-Atlantic - Old\"\n\t                  },\n\t                  {\n\t                    \"name\": \"Azores Standard Time\",\n\t                    \"abbr\": \"ADT\",\n\t                    \"offset\": 0,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC-01:00) Azores\",\n\t                    \"utc\": [\n\t                      \"America/Scoresbysund\",\n\t                      \"Atlantic/Azores\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Cape Verde Standard Time\",\n\t                    \"abbr\": \"CVST\",\n\t                    \"offset\": -1,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC-01:00) Cape Verde Is.\",\n\t                    \"utc\": [\n\t                      \"Atlantic/Cape_Verde\",\n\t                      \"Etc/GMT+1\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Morocco Standard Time\",\n\t                    \"abbr\": \"MDT\",\n\t                    \"offset\": 1,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC) Casablanca\",\n\t                    \"utc\": [\n\t                      \"Africa/Casablanca\",\n\t                      \"Africa/El_Aaiun\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"UTC\",\n\t                    \"abbr\": \"CUT\",\n\t                    \"offset\": 0,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC) Coordinated Universal Time\",\n\t                    \"utc\": [\n\t                      \"America/Danmarkshavn\",\n\t                      \"Etc/GMT\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"GMT Standard Time\",\n\t                    \"abbr\": \"GDT\",\n\t                    \"offset\": 1,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC) Dublin, Edinburgh, Lisbon, London\",\n\t                    \"utc\": [\n\t                      \"Atlantic/Canary\",\n\t                      \"Atlantic/Faeroe\",\n\t                      \"Atlantic/Madeira\",\n\t                      \"Europe/Dublin\",\n\t                      \"Europe/Guernsey\",\n\t                      \"Europe/Isle_of_Man\",\n\t                      \"Europe/Jersey\",\n\t                      \"Europe/Lisbon\",\n\t                      \"Europe/London\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Greenwich Standard Time\",\n\t                    \"abbr\": \"GST\",\n\t                    \"offset\": 0,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC) Monrovia, Reykjavik\",\n\t                    \"utc\": [\n\t                      \"Africa/Abidjan\",\n\t                      \"Africa/Accra\",\n\t                      \"Africa/Bamako\",\n\t                      \"Africa/Banjul\",\n\t                      \"Africa/Bissau\",\n\t                      \"Africa/Conakry\",\n\t                      \"Africa/Dakar\",\n\t                      \"Africa/Freetown\",\n\t                      \"Africa/Lome\",\n\t                      \"Africa/Monrovia\",\n\t                      \"Africa/Nouakchott\",\n\t                      \"Africa/Ouagadougou\",\n\t                      \"Africa/Sao_Tome\",\n\t                      \"Atlantic/Reykjavik\",\n\t                      \"Atlantic/St_Helena\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"W. Europe Standard Time\",\n\t                    \"abbr\": \"WEDT\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n\t                    \"utc\": [\n\t                      \"Arctic/Longyearbyen\",\n\t                      \"Europe/Amsterdam\",\n\t                      \"Europe/Andorra\",\n\t                      \"Europe/Berlin\",\n\t                      \"Europe/Busingen\",\n\t                      \"Europe/Gibraltar\",\n\t                      \"Europe/Luxembourg\",\n\t                      \"Europe/Malta\",\n\t                      \"Europe/Monaco\",\n\t                      \"Europe/Oslo\",\n\t                      \"Europe/Rome\",\n\t                      \"Europe/San_Marino\",\n\t                      \"Europe/Stockholm\",\n\t                      \"Europe/Vaduz\",\n\t                      \"Europe/Vatican\",\n\t                      \"Europe/Vienna\",\n\t                      \"Europe/Zurich\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central Europe Standard Time\",\n\t                    \"abbr\": \"CEDT\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n\t                    \"utc\": [\n\t                      \"Europe/Belgrade\",\n\t                      \"Europe/Bratislava\",\n\t                      \"Europe/Budapest\",\n\t                      \"Europe/Ljubljana\",\n\t                      \"Europe/Podgorica\",\n\t                      \"Europe/Prague\",\n\t                      \"Europe/Tirane\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Romance Standard Time\",\n\t                    \"abbr\": \"RDT\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n\t                    \"utc\": [\n\t                      \"Africa/Ceuta\",\n\t                      \"Europe/Brussels\",\n\t                      \"Europe/Copenhagen\",\n\t                      \"Europe/Madrid\",\n\t                      \"Europe/Paris\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central European Standard Time\",\n\t                    \"abbr\": \"CEDT\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n\t                    \"utc\": [\n\t                      \"Europe/Sarajevo\",\n\t                      \"Europe/Skopje\",\n\t                      \"Europe/Warsaw\",\n\t                      \"Europe/Zagreb\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"W. Central Africa Standard Time\",\n\t                    \"abbr\": \"WCAST\",\n\t                    \"offset\": 1,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+01:00) West Central Africa\",\n\t                    \"utc\": [\n\t                      \"Africa/Algiers\",\n\t                      \"Africa/Bangui\",\n\t                      \"Africa/Brazzaville\",\n\t                      \"Africa/Douala\",\n\t                      \"Africa/Kinshasa\",\n\t                      \"Africa/Lagos\",\n\t                      \"Africa/Libreville\",\n\t                      \"Africa/Luanda\",\n\t                      \"Africa/Malabo\",\n\t                      \"Africa/Ndjamena\",\n\t                      \"Africa/Niamey\",\n\t                      \"Africa/Porto-Novo\",\n\t                      \"Africa/Tunis\",\n\t                      \"Etc/GMT-1\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Namibia Standard Time\",\n\t                    \"abbr\": \"NST\",\n\t                    \"offset\": 1,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+01:00) Windhoek\",\n\t                    \"utc\": [\n\t                      \"Africa/Windhoek\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"GTB Standard Time\",\n\t                    \"abbr\": \"GDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) Athens, Bucharest\",\n\t                    \"utc\": [\n\t                      \"Asia/Nicosia\",\n\t                      \"Europe/Athens\",\n\t                      \"Europe/Bucharest\",\n\t                      \"Europe/Chisinau\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Middle East Standard Time\",\n\t                    \"abbr\": \"MEDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) Beirut\",\n\t                    \"utc\": [\n\t                      \"Asia/Beirut\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Egypt Standard Time\",\n\t                    \"abbr\": \"EST\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+02:00) Cairo\",\n\t                    \"utc\": [\n\t                      \"Africa/Cairo\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Syria Standard Time\",\n\t                    \"abbr\": \"SDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) Damascus\",\n\t                    \"utc\": [\n\t                      \"Asia/Damascus\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"E. Europe Standard Time\",\n\t                    \"abbr\": \"EEDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) E. Europe\"\n\t                  },\n\t                  {\n\t                    \"name\": \"South Africa Standard Time\",\n\t                    \"abbr\": \"SAST\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+02:00) Harare, Pretoria\",\n\t                    \"utc\": [\n\t                      \"Africa/Blantyre\",\n\t                      \"Africa/Bujumbura\",\n\t                      \"Africa/Gaborone\",\n\t                      \"Africa/Harare\",\n\t                      \"Africa/Johannesburg\",\n\t                      \"Africa/Kigali\",\n\t                      \"Africa/Lubumbashi\",\n\t                      \"Africa/Lusaka\",\n\t                      \"Africa/Maputo\",\n\t                      \"Africa/Maseru\",\n\t                      \"Africa/Mbabane\",\n\t                      \"Etc/GMT-2\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"FLE Standard Time\",\n\t                    \"abbr\": \"FDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n\t                    \"utc\": [\n\t                      \"Europe/Helsinki\",\n\t                      \"Europe/Kiev\",\n\t                      \"Europe/Mariehamn\",\n\t                      \"Europe/Riga\",\n\t                      \"Europe/Sofia\",\n\t                      \"Europe/Tallinn\",\n\t                      \"Europe/Uzhgorod\",\n\t                      \"Europe/Vilnius\",\n\t                      \"Europe/Zaporozhye\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Turkey Standard Time\",\n\t                    \"abbr\": \"TDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) Istanbul\",\n\t                    \"utc\": [\n\t                      \"Europe/Istanbul\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Israel Standard Time\",\n\t                    \"abbr\": \"JDT\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+02:00) Jerusalem\",\n\t                    \"utc\": [\n\t                      \"Asia/Jerusalem\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Libya Standard Time\",\n\t                    \"abbr\": \"LST\",\n\t                    \"offset\": 2,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+02:00) Tripoli\",\n\t                    \"utc\": [\n\t                      \"Africa/Tripoli\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Jordan Standard Time\",\n\t                    \"abbr\": \"JST\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+03:00) Amman\",\n\t                    \"utc\": [\n\t                      \"Asia/Amman\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Arabic Standard Time\",\n\t                    \"abbr\": \"AST\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+03:00) Baghdad\",\n\t                    \"utc\": [\n\t                      \"Asia/Baghdad\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Kaliningrad Standard Time\",\n\t                    \"abbr\": \"KST\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+03:00) Kaliningrad, Minsk\",\n\t                    \"utc\": [\n\t                      \"Europe/Kaliningrad\",\n\t                      \"Europe/Minsk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Arab Standard Time\",\n\t                    \"abbr\": \"AST\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n\t                    \"utc\": [\n\t                      \"Asia/Aden\",\n\t                      \"Asia/Bahrain\",\n\t                      \"Asia/Kuwait\",\n\t                      \"Asia/Qatar\",\n\t                      \"Asia/Riyadh\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"E. Africa Standard Time\",\n\t                    \"abbr\": \"EAST\",\n\t                    \"offset\": 3,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+03:00) Nairobi\",\n\t                    \"utc\": [\n\t                      \"Africa/Addis_Ababa\",\n\t                      \"Africa/Asmera\",\n\t                      \"Africa/Dar_es_Salaam\",\n\t                      \"Africa/Djibouti\",\n\t                      \"Africa/Juba\",\n\t                      \"Africa/Kampala\",\n\t                      \"Africa/Khartoum\",\n\t                      \"Africa/Mogadishu\",\n\t                      \"Africa/Nairobi\",\n\t                      \"Antarctica/Syowa\",\n\t                      \"Etc/GMT-3\",\n\t                      \"Indian/Antananarivo\",\n\t                      \"Indian/Comoro\",\n\t                      \"Indian/Mayotte\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Iran Standard Time\",\n\t                    \"abbr\": \"IDT\",\n\t                    \"offset\": 4.5,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+03:30) Tehran\",\n\t                    \"utc\": [\n\t                      \"Asia/Tehran\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Arabian Standard Time\",\n\t                    \"abbr\": \"AST\",\n\t                    \"offset\": 4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n\t                    \"utc\": [\n\t                      \"Asia/Dubai\",\n\t                      \"Asia/Muscat\",\n\t                      \"Etc/GMT-4\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Azerbaijan Standard Time\",\n\t                    \"abbr\": \"ADT\",\n\t                    \"offset\": 5,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+04:00) Baku\",\n\t                    \"utc\": [\n\t                      \"Asia/Baku\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Russian Standard Time\",\n\t                    \"abbr\": \"RST\",\n\t                    \"offset\": 4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\n\t                    \"utc\": [\n\t                      \"Europe/Moscow\",\n\t                      \"Europe/Samara\",\n\t                      \"Europe/Simferopol\",\n\t                      \"Europe/Volgograd\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Mauritius Standard Time\",\n\t                    \"abbr\": \"MST\",\n\t                    \"offset\": 4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+04:00) Port Louis\",\n\t                    \"utc\": [\n\t                      \"Indian/Mahe\",\n\t                      \"Indian/Mauritius\",\n\t                      \"Indian/Reunion\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Georgian Standard Time\",\n\t                    \"abbr\": \"GST\",\n\t                    \"offset\": 4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+04:00) Tbilisi\",\n\t                    \"utc\": [\n\t                      \"Asia/Tbilisi\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Caucasus Standard Time\",\n\t                    \"abbr\": \"CST\",\n\t                    \"offset\": 4,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+04:00) Yerevan\",\n\t                    \"utc\": [\n\t                      \"Asia/Yerevan\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Afghanistan Standard Time\",\n\t                    \"abbr\": \"AST\",\n\t                    \"offset\": 4.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+04:30) Kabul\",\n\t                    \"utc\": [\n\t                      \"Asia/Kabul\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"West Asia Standard Time\",\n\t                    \"abbr\": \"WAST\",\n\t                    \"offset\": 5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n\t                    \"utc\": [\n\t                      \"Antarctica/Mawson\",\n\t                      \"Asia/Aqtau\",\n\t                      \"Asia/Aqtobe\",\n\t                      \"Asia/Ashgabat\",\n\t                      \"Asia/Dushanbe\",\n\t                      \"Asia/Oral\",\n\t                      \"Asia/Samarkand\",\n\t                      \"Asia/Tashkent\",\n\t                      \"Etc/GMT-5\",\n\t                      \"Indian/Kerguelen\",\n\t                      \"Indian/Maldives\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Pakistan Standard Time\",\n\t                    \"abbr\": \"PST\",\n\t                    \"offset\": 5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n\t                    \"utc\": [\n\t                      \"Asia/Karachi\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"India Standard Time\",\n\t                    \"abbr\": \"IST\",\n\t                    \"offset\": 5.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n\t                    \"utc\": [\n\t                      \"Asia/Calcutta\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Sri Lanka Standard Time\",\n\t                    \"abbr\": \"SLST\",\n\t                    \"offset\": 5.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n\t                    \"utc\": [\n\t                      \"Asia/Colombo\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Nepal Standard Time\",\n\t                    \"abbr\": \"NST\",\n\t                    \"offset\": 5.75,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+05:45) Kathmandu\",\n\t                    \"utc\": [\n\t                      \"Asia/Katmandu\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central Asia Standard Time\",\n\t                    \"abbr\": \"CAST\",\n\t                    \"offset\": 6,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+06:00) Astana\",\n\t                    \"utc\": [\n\t                      \"Antarctica/Vostok\",\n\t                      \"Asia/Almaty\",\n\t                      \"Asia/Bishkek\",\n\t                      \"Asia/Qyzylorda\",\n\t                      \"Asia/Urumqi\",\n\t                      \"Etc/GMT-6\",\n\t                      \"Indian/Chagos\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Bangladesh Standard Time\",\n\t                    \"abbr\": \"BST\",\n\t                    \"offset\": 6,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+06:00) Dhaka\",\n\t                    \"utc\": [\n\t                      \"Asia/Dhaka\",\n\t                      \"Asia/Thimphu\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Ekaterinburg Standard Time\",\n\t                    \"abbr\": \"EST\",\n\t                    \"offset\": 6,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+06:00) Ekaterinburg\",\n\t                    \"utc\": [\n\t                      \"Asia/Yekaterinburg\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Myanmar Standard Time\",\n\t                    \"abbr\": \"MST\",\n\t                    \"offset\": 6.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n\t                    \"utc\": [\n\t                      \"Asia/Rangoon\",\n\t                      \"Indian/Cocos\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"SE Asia Standard Time\",\n\t                    \"abbr\": \"SAST\",\n\t                    \"offset\": 7,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n\t                    \"utc\": [\n\t                      \"Antarctica/Davis\",\n\t                      \"Asia/Bangkok\",\n\t                      \"Asia/Hovd\",\n\t                      \"Asia/Jakarta\",\n\t                      \"Asia/Phnom_Penh\",\n\t                      \"Asia/Pontianak\",\n\t                      \"Asia/Saigon\",\n\t                      \"Asia/Vientiane\",\n\t                      \"Etc/GMT-7\",\n\t                      \"Indian/Christmas\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"N. Central Asia Standard Time\",\n\t                    \"abbr\": \"NCAST\",\n\t                    \"offset\": 7,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+07:00) Novosibirsk\",\n\t                    \"utc\": [\n\t                      \"Asia/Novokuznetsk\",\n\t                      \"Asia/Novosibirsk\",\n\t                      \"Asia/Omsk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"China Standard Time\",\n\t                    \"abbr\": \"CST\",\n\t                    \"offset\": 8,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n\t                    \"utc\": [\n\t                      \"Asia/Hong_Kong\",\n\t                      \"Asia/Macau\",\n\t                      \"Asia/Shanghai\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"North Asia Standard Time\",\n\t                    \"abbr\": \"NAST\",\n\t                    \"offset\": 8,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+08:00) Krasnoyarsk\",\n\t                    \"utc\": [\n\t                      \"Asia/Krasnoyarsk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Singapore Standard Time\",\n\t                    \"abbr\": \"MPST\",\n\t                    \"offset\": 8,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n\t                    \"utc\": [\n\t                      \"Asia/Brunei\",\n\t                      \"Asia/Kuala_Lumpur\",\n\t                      \"Asia/Kuching\",\n\t                      \"Asia/Makassar\",\n\t                      \"Asia/Manila\",\n\t                      \"Asia/Singapore\",\n\t                      \"Etc/GMT-8\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"W. Australia Standard Time\",\n\t                    \"abbr\": \"WAST\",\n\t                    \"offset\": 8,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+08:00) Perth\",\n\t                    \"utc\": [\n\t                      \"Antarctica/Casey\",\n\t                      \"Australia/Perth\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Taipei Standard Time\",\n\t                    \"abbr\": \"TST\",\n\t                    \"offset\": 8,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+08:00) Taipei\",\n\t                    \"utc\": [\n\t                      \"Asia/Taipei\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Ulaanbaatar Standard Time\",\n\t                    \"abbr\": \"UST\",\n\t                    \"offset\": 8,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+08:00) Ulaanbaatar\",\n\t                    \"utc\": [\n\t                      \"Asia/Choibalsan\",\n\t                      \"Asia/Ulaanbaatar\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"North Asia East Standard Time\",\n\t                    \"abbr\": \"NAEST\",\n\t                    \"offset\": 9,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+09:00) Irkutsk\",\n\t                    \"utc\": [\n\t                      \"Asia/Irkutsk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Tokyo Standard Time\",\n\t                    \"abbr\": \"TST\",\n\t                    \"offset\": 9,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n\t                    \"utc\": [\n\t                      \"Asia/Dili\",\n\t                      \"Asia/Jayapura\",\n\t                      \"Asia/Tokyo\",\n\t                      \"Etc/GMT-9\",\n\t                      \"Pacific/Palau\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Korea Standard Time\",\n\t                    \"abbr\": \"KST\",\n\t                    \"offset\": 9,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+09:00) Seoul\",\n\t                    \"utc\": [\n\t                      \"Asia/Pyongyang\",\n\t                      \"Asia/Seoul\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Cen. Australia Standard Time\",\n\t                    \"abbr\": \"CAST\",\n\t                    \"offset\": 9.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+09:30) Adelaide\",\n\t                    \"utc\": [\n\t                      \"Australia/Adelaide\",\n\t                      \"Australia/Broken_Hill\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"AUS Central Standard Time\",\n\t                    \"abbr\": \"ACST\",\n\t                    \"offset\": 9.5,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+09:30) Darwin\",\n\t                    \"utc\": [\n\t                      \"Australia/Darwin\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"E. Australia Standard Time\",\n\t                    \"abbr\": \"EAST\",\n\t                    \"offset\": 10,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+10:00) Brisbane\",\n\t                    \"utc\": [\n\t                      \"Australia/Brisbane\",\n\t                      \"Australia/Lindeman\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"AUS Eastern Standard Time\",\n\t                    \"abbr\": \"AEST\",\n\t                    \"offset\": 10,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n\t                    \"utc\": [\n\t                      \"Australia/Melbourne\",\n\t                      \"Australia/Sydney\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"West Pacific Standard Time\",\n\t                    \"abbr\": \"WPST\",\n\t                    \"offset\": 10,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n\t                    \"utc\": [\n\t                      \"Antarctica/DumontDUrville\",\n\t                      \"Etc/GMT-10\",\n\t                      \"Pacific/Guam\",\n\t                      \"Pacific/Port_Moresby\",\n\t                      \"Pacific/Saipan\",\n\t                      \"Pacific/Truk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Tasmania Standard Time\",\n\t                    \"abbr\": \"TST\",\n\t                    \"offset\": 10,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+10:00) Hobart\",\n\t                    \"utc\": [\n\t                      \"Australia/Currie\",\n\t                      \"Australia/Hobart\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Yakutsk Standard Time\",\n\t                    \"abbr\": \"YST\",\n\t                    \"offset\": 10,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+10:00) Yakutsk\",\n\t                    \"utc\": [\n\t                      \"Asia/Chita\",\n\t                      \"Asia/Khandyga\",\n\t                      \"Asia/Yakutsk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Central Pacific Standard Time\",\n\t                    \"abbr\": \"CPST\",\n\t                    \"offset\": 11,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n\t                    \"utc\": [\n\t                      \"Antarctica/Macquarie\",\n\t                      \"Etc/GMT-11\",\n\t                      \"Pacific/Efate\",\n\t                      \"Pacific/Guadalcanal\",\n\t                      \"Pacific/Kosrae\",\n\t                      \"Pacific/Noumea\",\n\t                      \"Pacific/Ponape\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Vladivostok Standard Time\",\n\t                    \"abbr\": \"VST\",\n\t                    \"offset\": 11,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+11:00) Vladivostok\",\n\t                    \"utc\": [\n\t                      \"Asia/Sakhalin\",\n\t                      \"Asia/Ust-Nera\",\n\t                      \"Asia/Vladivostok\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"New Zealand Standard Time\",\n\t                    \"abbr\": \"NZST\",\n\t                    \"offset\": 12,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+12:00) Auckland, Wellington\",\n\t                    \"utc\": [\n\t                      \"Antarctica/McMurdo\",\n\t                      \"Pacific/Auckland\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"UTC+12\",\n\t                    \"abbr\": \"U\",\n\t                    \"offset\": 12,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n\t                    \"utc\": [\n\t                      \"Etc/GMT-12\",\n\t                      \"Pacific/Funafuti\",\n\t                      \"Pacific/Kwajalein\",\n\t                      \"Pacific/Majuro\",\n\t                      \"Pacific/Nauru\",\n\t                      \"Pacific/Tarawa\",\n\t                      \"Pacific/Wake\",\n\t                      \"Pacific/Wallis\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Fiji Standard Time\",\n\t                    \"abbr\": \"FST\",\n\t                    \"offset\": 12,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+12:00) Fiji\",\n\t                    \"utc\": [\n\t                      \"Pacific/Fiji\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Magadan Standard Time\",\n\t                    \"abbr\": \"MST\",\n\t                    \"offset\": 12,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+12:00) Magadan\",\n\t                    \"utc\": [\n\t                      \"Asia/Anadyr\",\n\t                      \"Asia/Kamchatka\",\n\t                      \"Asia/Magadan\",\n\t                      \"Asia/Srednekolymsk\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Kamchatka Standard Time\",\n\t                    \"abbr\": \"KDT\",\n\t                    \"offset\": 13,\n\t                    \"isdst\": true,\n\t                    \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\"\n\t                  },\n\t                  {\n\t                    \"name\": \"Tonga Standard Time\",\n\t                    \"abbr\": \"TST\",\n\t                    \"offset\": 13,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+13:00) Nuku'alofa\",\n\t                    \"utc\": [\n\t                      \"Etc/GMT-13\",\n\t                      \"Pacific/Enderbury\",\n\t                      \"Pacific/Fakaofo\",\n\t                      \"Pacific/Tongatapu\"\n\t                    ]\n\t                  },\n\t                  {\n\t                    \"name\": \"Samoa Standard Time\",\n\t                    \"abbr\": \"SST\",\n\t                    \"offset\": 13,\n\t                    \"isdst\": false,\n\t                    \"text\": \"(UTC+13:00) Samoa\",\n\t                    \"utc\": [\n\t                      \"Pacific/Apia\"\n\t                    ]\n\t                  }\n\t                ],\n\t        //List source: http://answers.google.com/answers/threadview/id/589312.html\n\t        profession: [\n\t            \"Airline Pilot\",\n\t            \"Academic Team\",\n\t            \"Accountant\",\n\t            \"Account Executive\",\n\t            \"Actor\",\n\t            \"Actuary\",\n\t            \"Acquisition Analyst\",\n\t            \"Administrative Asst.\",\n\t            \"Administrative Analyst\",\n\t            \"Administrator\",\n\t            \"Advertising Director\",\n\t            \"Aerospace Engineer\",\n\t            \"Agent\",\n\t            \"Agricultural Inspector\",\n\t            \"Agricultural Scientist\",\n\t            \"Air Traffic Controller\",\n\t            \"Animal Trainer\",\n\t            \"Anthropologist\",\n\t            \"Appraiser\",\n\t            \"Architect\",\n\t            \"Art Director\",\n\t            \"Artist\",\n\t            \"Astronomer\",\n\t            \"Athletic Coach\",\n\t            \"Auditor\",\n\t            \"Author\",\n\t            \"Baker\",\n\t            \"Banker\",\n\t            \"Bankruptcy Attorney\",\n\t            \"Benefits Manager\",\n\t            \"Biologist\",\n\t            \"Bio-feedback Specialist\",\n\t            \"Biomedical Engineer\",\n\t            \"Biotechnical Researcher\",\n\t            \"Broadcaster\",\n\t            \"Broker\",\n\t            \"Building Manager\",\n\t            \"Building Contractor\",\n\t            \"Building Inspector\",\n\t            \"Business Analyst\",\n\t            \"Business Planner\",\n\t            \"Business Manager\",\n\t            \"Buyer\",\n\t            \"Call Center Manager\",\n\t            \"Career Counselor\",\n\t            \"Cash Manager\",\n\t            \"Ceramic Engineer\",\n\t            \"Chief Executive Officer\",\n\t            \"Chief Operation Officer\",\n\t            \"Chef\",\n\t            \"Chemical Engineer\",\n\t            \"Chemist\",\n\t            \"Child Care Manager\",\n\t            \"Chief Medical Officer\",\n\t            \"Chiropractor\",\n\t            \"Cinematographer\",\n\t            \"City Housing Manager\",\n\t            \"City Manager\",\n\t            \"Civil Engineer\",\n\t            \"Claims Manager\",\n\t            \"Clinical Research Assistant\",\n\t            \"Collections Manager.\",\n\t            \"Compliance Manager\",\n\t            \"Comptroller\",\n\t            \"Computer Manager\",\n\t            \"Commercial Artist\",\n\t            \"Communications Affairs Director\",\n\t            \"Communications Director\",\n\t            \"Communications Engineer\",\n\t            \"Compensation Analyst\",\n\t            \"Computer Programmer\",\n\t            \"Computer Ops. Manager\",\n\t            \"Computer Engineer\",\n\t            \"Computer Operator\",\n\t            \"Computer Graphics Specialist\",\n\t            \"Construction Engineer\",\n\t            \"Construction Manager\",\n\t            \"Consultant\",\n\t            \"Consumer Relations Manager\",\n\t            \"Contract Administrator\",\n\t            \"Copyright Attorney\",\n\t            \"Copywriter\",\n\t            \"Corporate Planner\",\n\t            \"Corrections Officer\",\n\t            \"Cosmetologist\",\n\t            \"Credit Analyst\",\n\t            \"Cruise Director\",\n\t            \"Chief Information Officer\",\n\t            \"Chief Technology Officer\",\n\t            \"Customer Service Manager\",\n\t            \"Cryptologist\",\n\t            \"Dancer\",\n\t            \"Data Security Manager\",\n\t            \"Database Manager\",\n\t            \"Day Care Instructor\",\n\t            \"Dentist\",\n\t            \"Designer\",\n\t            \"Design Engineer\",\n\t            \"Desktop Publisher\",\n\t            \"Developer\",\n\t            \"Development Officer\",\n\t            \"Diamond Merchant\",\n\t            \"Dietitian\",\n\t            \"Direct Marketer\",\n\t            \"Director\",\n\t            \"Distribution Manager\",\n\t            \"Diversity Manager\",\n\t            \"Economist\",\n\t            \"EEO Compliance Manager\",\n\t            \"Editor\",\n\t            \"Education Adminator\",\n\t            \"Electrical Engineer\",\n\t            \"Electro Optical Engineer\",\n\t            \"Electronics Engineer\",\n\t            \"Embassy Management\",\n\t            \"Employment Agent\",\n\t            \"Engineer Technician\",\n\t            \"Entrepreneur\",\n\t            \"Environmental Analyst\",\n\t            \"Environmental Attorney\",\n\t            \"Environmental Engineer\",\n\t            \"Environmental Specialist\",\n\t            \"Escrow Officer\",\n\t            \"Estimator\",\n\t            \"Executive Assistant\",\n\t            \"Executive Director\",\n\t            \"Executive Recruiter\",\n\t            \"Facilities Manager\",\n\t            \"Family Counselor\",\n\t            \"Fashion Events Manager\",\n\t            \"Fashion Merchandiser\",\n\t            \"Fast Food Manager\",\n\t            \"Film Producer\",\n\t            \"Film Production Assistant\",\n\t            \"Financial Analyst\",\n\t            \"Financial Planner\",\n\t            \"Financier\",\n\t            \"Fine Artist\",\n\t            \"Wildlife Specialist\",\n\t            \"Fitness Consultant\",\n\t            \"Flight Attendant\",\n\t            \"Flight Engineer\",\n\t            \"Floral Designer\",\n\t            \"Food & Beverage Director\",\n\t            \"Food Service Manager\",\n\t            \"Forestry Technician\",\n\t            \"Franchise Management\",\n\t            \"Franchise Sales\",\n\t            \"Fraud Investigator\",\n\t            \"Freelance Writer\",\n\t            \"Fund Raiser\",\n\t            \"General Manager\",\n\t            \"Geologist\",\n\t            \"General Counsel\",\n\t            \"Geriatric Specialist\",\n\t            \"Gerontologist\",\n\t            \"Glamour Photographer\",\n\t            \"Golf Club Manager\",\n\t            \"Gourmet Chef\",\n\t            \"Graphic Designer\",\n\t            \"Grounds Keeper\",\n\t            \"Hazardous Waste Manager\",\n\t            \"Health Care Manager\",\n\t            \"Health Therapist\",\n\t            \"Health Service Administrator\",\n\t            \"Hearing Officer\",\n\t            \"Home Economist\",\n\t            \"Horticulturist\",\n\t            \"Hospital Administrator\",\n\t            \"Hotel Manager\",\n\t            \"Human Resources Manager\",\n\t            \"Importer\",\n\t            \"Industrial Designer\",\n\t            \"Industrial Engineer\",\n\t            \"Information Director\",\n\t            \"Inside Sales\",\n\t            \"Insurance Adjuster\",\n\t            \"Interior Decorator\",\n\t            \"Internal Controls Director\",\n\t            \"International Acct.\",\n\t            \"International Courier\",\n\t            \"International Lawyer\",\n\t            \"Interpreter\",\n\t            \"Investigator\",\n\t            \"Investment Banker\",\n\t            \"Investment Manager\",\n\t            \"IT Architect\",\n\t            \"IT Project Manager\",\n\t            \"IT Systems Analyst\",\n\t            \"Jeweler\",\n\t            \"Joint Venture Manager\",\n\t            \"Journalist\",\n\t            \"Labor Negotiator\",\n\t            \"Labor Organizer\",\n\t            \"Labor Relations Manager\",\n\t            \"Lab Services Director\",\n\t            \"Lab Technician\",\n\t            \"Land Developer\",\n\t            \"Landscape Architect\",\n\t            \"Law Enforcement Officer\",\n\t            \"Lawyer\",\n\t            \"Lead Software Engineer\",\n\t            \"Lead Software Test Engineer\",\n\t            \"Leasing Manager\",\n\t            \"Legal Secretary\",\n\t            \"Library Manager\",\n\t            \"Litigation Attorney\",\n\t            \"Loan Officer\",\n\t            \"Lobbyist\",\n\t            \"Logistics Manager\",\n\t            \"Maintenance Manager\",\n\t            \"Management Consultant\",\n\t            \"Managed Care Director\",\n\t            \"Managing Partner\",\n\t            \"Manufacturing Director\",\n\t            \"Manpower Planner\",\n\t            \"Marine Biologist\",\n\t            \"Market Res. Analyst\",\n\t            \"Marketing Director\",\n\t            \"Materials Manager\",\n\t            \"Mathematician\",\n\t            \"Membership Chairman\",\n\t            \"Mechanic\",\n\t            \"Mechanical Engineer\",\n\t            \"Media Buyer\",\n\t            \"Medical Investor\",\n\t            \"Medical Secretary\",\n\t            \"Medical Technician\",\n\t            \"Mental Health Counselor\",\n\t            \"Merchandiser\",\n\t            \"Metallurgical Engineering\",\n\t            \"Meteorologist\",\n\t            \"Microbiologist\",\n\t            \"MIS Manager\",\n\t            \"Motion Picture Director\",\n\t            \"Multimedia Director\",\n\t            \"Musician\",\n\t            \"Network Administrator\",\n\t            \"Network Specialist\",\n\t            \"Network Operator\",\n\t            \"New Product Manager\",\n\t            \"Novelist\",\n\t            \"Nuclear Engineer\",\n\t            \"Nuclear Specialist\",\n\t            \"Nutritionist\",\n\t            \"Nursing Administrator\",\n\t            \"Occupational Therapist\",\n\t            \"Oceanographer\",\n\t            \"Office Manager\",\n\t            \"Operations Manager\",\n\t            \"Operations Research Director\",\n\t            \"Optical Technician\",\n\t            \"Optometrist\",\n\t            \"Organizational Development Manager\",\n\t            \"Outplacement Specialist\",\n\t            \"Paralegal\",\n\t            \"Park Ranger\",\n\t            \"Patent Attorney\",\n\t            \"Payroll Specialist\",\n\t            \"Personnel Specialist\",\n\t            \"Petroleum Engineer\",\n\t            \"Pharmacist\",\n\t            \"Photographer\",\n\t            \"Physical Therapist\",\n\t            \"Physician\",\n\t            \"Physician Assistant\",\n\t            \"Physicist\",\n\t            \"Planning Director\",\n\t            \"Podiatrist\",\n\t            \"Political Analyst\",\n\t            \"Political Scientist\",\n\t            \"Politician\",\n\t            \"Portfolio Manager\",\n\t            \"Preschool Management\",\n\t            \"Preschool Teacher\",\n\t            \"Principal\",\n\t            \"Private Banker\",\n\t            \"Private Investigator\",\n\t            \"Probation Officer\",\n\t            \"Process Engineer\",\n\t            \"Producer\",\n\t            \"Product Manager\",\n\t            \"Product Engineer\",\n\t            \"Production Engineer\",\n\t            \"Production Planner\",\n\t            \"Professional Athlete\",\n\t            \"Professional Coach\",\n\t            \"Professor\",\n\t            \"Project Engineer\",\n\t            \"Project Manager\",\n\t            \"Program Manager\",\n\t            \"Property Manager\",\n\t            \"Public Administrator\",\n\t            \"Public Safety Director\",\n\t            \"PR Specialist\",\n\t            \"Publisher\",\n\t            \"Purchasing Agent\",\n\t            \"Publishing Director\",\n\t            \"Quality Assurance Specialist\",\n\t            \"Quality Control Engineer\",\n\t            \"Quality Control Inspector\",\n\t            \"Radiology Manager\",\n\t            \"Railroad Engineer\",\n\t            \"Real Estate Broker\",\n\t            \"Recreational Director\",\n\t            \"Recruiter\",\n\t            \"Redevelopment Specialist\",\n\t            \"Regulatory Affairs Manager\",\n\t            \"Registered Nurse\",\n\t            \"Rehabilitation Counselor\",\n\t            \"Relocation Manager\",\n\t            \"Reporter\",\n\t            \"Research Specialist\",\n\t            \"Restaurant Manager\",\n\t            \"Retail Store Manager\",\n\t            \"Risk Analyst\",\n\t            \"Safety Engineer\",\n\t            \"Sales Engineer\",\n\t            \"Sales Trainer\",\n\t            \"Sales Promotion Manager\",\n\t            \"Sales Representative\",\n\t            \"Sales Manager\",\n\t            \"Service Manager\",\n\t            \"Sanitation Engineer\",\n\t            \"Scientific Programmer\",\n\t            \"Scientific Writer\",\n\t            \"Securities Analyst\",\n\t            \"Security Consultant\",\n\t            \"Security Director\",\n\t            \"Seminar Presenter\",\n\t            \"Ship's Officer\",\n\t            \"Singer\",\n\t            \"Social Director\",\n\t            \"Social Program Planner\",\n\t            \"Social Research\",\n\t            \"Social Scientist\",\n\t            \"Social Worker\",\n\t            \"Sociologist\",\n\t            \"Software Developer\",\n\t            \"Software Engineer\",\n\t            \"Software Test Engineer\",\n\t            \"Soil Scientist\",\n\t            \"Special Events Manager\",\n\t            \"Special Education Teacher\",\n\t            \"Special Projects Director\",\n\t            \"Speech Pathologist\",\n\t            \"Speech Writer\",\n\t            \"Sports Event Manager\",\n\t            \"Statistician\",\n\t            \"Store Manager\",\n\t            \"Strategic Alliance Director\",\n\t            \"Strategic Planning Director\",\n\t            \"Stress Reduction Specialist\",\n\t            \"Stockbroker\",\n\t            \"Surveyor\",\n\t            \"Structural Engineer\",\n\t            \"Superintendent\",\n\t            \"Supply Chain Director\",\n\t            \"System Engineer\",\n\t            \"Systems Analyst\",\n\t            \"Systems Programmer\",\n\t            \"System Administrator\",\n\t            \"Tax Specialist\",\n\t            \"Teacher\",\n\t            \"Technical Support Specialist\",\n\t            \"Technical Illustrator\",\n\t            \"Technical Writer\",\n\t            \"Technology Director\",\n\t            \"Telecom Analyst\",\n\t            \"Telemarketer\",\n\t            \"Theatrical Director\",\n\t            \"Title Examiner\",\n\t            \"Tour Escort\",\n\t            \"Tour Guide Director\",\n\t            \"Traffic Manager\",\n\t            \"Trainer Translator\",\n\t            \"Transportation Manager\",\n\t            \"Travel Agent\",\n\t            \"Treasurer\",\n\t            \"TV Programmer\",\n\t            \"Underwriter\",\n\t            \"Union Representative\",\n\t            \"University Administrator\",\n\t            \"University Dean\",\n\t            \"Urban Planner\",\n\t            \"Veterinarian\",\n\t            \"Vendor Relations Director\",\n\t            \"Viticulturist\",\n\t            \"Warehouse Manager\"\n\t        ]\n\t    };\n\t\n\t    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n\t    var o_keys = (Object.keys || function(obj) {\n\t      var result = [];\n\t      for (var key in obj) {\n\t        if (o_hasOwnProperty.call(obj, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    });\n\t\n\t    function _copyObject(source, target) {\n\t      var keys = o_keys(source);\n\t      var key;\n\t\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        key = keys[i];\n\t        target[key] = source[key] || target[key];\n\t      }\n\t    }\n\t\n\t    function _copyArray(source, target) {\n\t      for (var i = 0, l = source.length; i < l; i++) {\n\t        target[i] = source[i];\n\t      }\n\t    }\n\t\n\t    function copyObject(source, _target) {\n\t        var isArray = Array.isArray(source);\n\t        var target = _target || (isArray ? new Array(source.length) : {});\n\t\n\t        if (isArray) {\n\t          _copyArray(source, target);\n\t        } else {\n\t          _copyObject(source, target);\n\t        }\n\t\n\t        return target;\n\t    }\n\t\n\t    /** Get the data based on key**/\n\t    Chance.prototype.get = function (name) {\n\t        return copyObject(data[name]);\n\t    };\n\t\n\t    // Mac Address\n\t    Chance.prototype.mac_address = function(options){\n\t        // typically mac addresses are separated by \":\"\n\t        // however they can also be separated by \"-\"\n\t        // the network variant uses a dot every fourth byte\n\t\n\t        options = initOptions(options);\n\t        if(!options.separator) {\n\t            options.separator =  options.networkVersion ? \".\" : \":\";\n\t        }\n\t\n\t        var mac_pool=\"ABCDEF1234567890\",\n\t            mac = \"\";\n\t        if(!options.networkVersion) {\n\t            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n\t        } else {\n\t            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n\t        }\n\t\n\t        return mac;\n\t    };\n\t\n\t    Chance.prototype.normal = function (options) {\n\t        options = initOptions(options, {mean : 0, dev : 1, pool : []});\n\t\n\t        testRange(\n\t            options.pool.constructor !== Array,\n\t            \"Chance: The pool option must be a valid array.\"\n\t        );\n\t\n\t        // If a pool has been passed, then we are returning an item from that pool,\n\t        // using the normal distribution settings that were passed in\n\t        if (options.pool.length > 0) {\n\t            return this.normal_pool(options);\n\t        }\n\t\n\t        // The Marsaglia Polar method\n\t        var s, u, v, norm,\n\t            mean = options.mean,\n\t            dev = options.dev;\n\t\n\t        do {\n\t            // U and V are from the uniform distribution on (-1, 1)\n\t            u = this.random() * 2 - 1;\n\t            v = this.random() * 2 - 1;\n\t\n\t            s = u * u + v * v;\n\t        } while (s >= 1);\n\t\n\t        // Compute the standard normal variate\n\t        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\t\n\t        // Shape and scale\n\t        return dev * norm + mean;\n\t    };\n\t\n\t    Chance.prototype.normal_pool = function(options) {\n\t        var performanceCounter = 0;\n\t        do {\n\t            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));\n\t            if (idx < options.pool.length && idx >= 0) {\n\t                return options.pool[idx];\n\t            } else {\n\t                performanceCounter++;\n\t            }\n\t        } while(performanceCounter < 100);\n\t\n\t        throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\n\t    };\n\t\n\t    Chance.prototype.radio = function (options) {\n\t        // Initial Letter (Typically Designated by Side of Mississippi River)\n\t        options = initOptions(options, {side : \"?\"});\n\t        var fl = \"\";\n\t        switch (options.side.toLowerCase()) {\n\t        case \"east\":\n\t        case \"e\":\n\t            fl = \"W\";\n\t            break;\n\t        case \"west\":\n\t        case \"w\":\n\t            fl = \"K\";\n\t            break;\n\t        default:\n\t            fl = this.character({pool: \"KW\"});\n\t            break;\n\t        }\n\t\n\t        return fl + this.character({alpha: true, casing: \"upper\"}) +\n\t                this.character({alpha: true, casing: \"upper\"}) +\n\t                this.character({alpha: true, casing: \"upper\"});\n\t    };\n\t\n\t    // Set the data as key and data or the data map\n\t    Chance.prototype.set = function (name, values) {\n\t        if (typeof name === \"string\") {\n\t            data[name] = values;\n\t        } else {\n\t            data = copyObject(name, data);\n\t        }\n\t    };\n\t\n\t    Chance.prototype.tv = function (options) {\n\t        return this.radio(options);\n\t    };\n\t\n\t    // ID number for Brazil companies\n\t    Chance.prototype.cnpj = function () {\n\t        var n = this.n(this.natural, 8, { max: 9 });\n\t        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n\t        d1 = 11 - (d1 % 11);\n\t        if (d1>=10){\n\t            d1 = 0;\n\t        }\n\t        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n\t        d2 = 11 - (d2 % 11);\n\t        if (d2>=10){\n\t            d2 = 0;\n\t        }\n\t        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n\t    };\n\t\n\t    // -- End Miscellaneous --\n\t\n\t    Chance.prototype.mersenne_twister = function (seed) {\n\t        return new MersenneTwister(seed);\n\t    };\n\t\n\t    Chance.prototype.blueimp_md5 = function () {\n\t        return new BlueImpMD5();\n\t    };\n\t\n\t    // Mersenne Twister from https://gist.github.com/banksean/300494\n\t    var MersenneTwister = function (seed) {\n\t        if (seed === undefined) {\n\t            // kept random number same size as time used previously to ensure no unexpected results downstream\n\t            seed = Math.floor(Math.random()*Math.pow(10,13));\n\t        }\n\t        /* Period parameters */\n\t        this.N = 624;\n\t        this.M = 397;\n\t        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\t        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\t        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\t\n\t        this.mt = new Array(this.N); /* the array for the state vector */\n\t        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\t\n\t        this.init_genrand(seed);\n\t    };\n\t\n\t    /* initializes mt[N] with a seed */\n\t    MersenneTwister.prototype.init_genrand = function (s) {\n\t        this.mt[0] = s >>> 0;\n\t        for (this.mti = 1; this.mti < this.N; this.mti++) {\n\t            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n\t            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n\t            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t            /* In the previous versions, MSBs of the seed affect   */\n\t            /* only MSBs of the array mt[].                        */\n\t            /* 2002/01/09 modified by Makoto Matsumoto             */\n\t            this.mt[this.mti] >>>= 0;\n\t            /* for >32 bit machines */\n\t        }\n\t    };\n\t\n\t    /* initialize by an array with array-length */\n\t    /* init_key is the array for initializing keys */\n\t    /* key_length is its length */\n\t    /* slight change for C++, 2004/2/26 */\n\t    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n\t        var i = 1, j = 0, k, s;\n\t        this.init_genrand(19650218);\n\t        k = (this.N > key_length ? this.N : key_length);\n\t        for (; k; k--) {\n\t            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n\t            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n\t            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t            i++;\n\t            j++;\n\t            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n\t            if (j >= key_length) { j = 0; }\n\t        }\n\t        for (k = this.N - 1; k; k--) {\n\t            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n\t            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n\t            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t            i++;\n\t            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n\t        }\n\t\n\t        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n\t    };\n\t\n\t    /* generates a random number on [0,0xffffffff]-interval */\n\t    MersenneTwister.prototype.genrand_int32 = function () {\n\t        var y;\n\t        var mag01 = new Array(0x0, this.MATRIX_A);\n\t        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\t\n\t        if (this.mti >= this.N) { /* generate N words at one time */\n\t            var kk;\n\t\n\t            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n\t                this.init_genrand(5489); /* a default initial seed is used */\n\t            }\n\t            for (kk = 0; kk < this.N - this.M; kk++) {\n\t                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n\t                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t            }\n\t            for (;kk < this.N - 1; kk++) {\n\t                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n\t                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t            }\n\t            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\n\t            this.mti = 0;\n\t        }\n\t\n\t        y = this.mt[this.mti++];\n\t\n\t        /* Tempering */\n\t        y ^= (y >>> 11);\n\t        y ^= (y << 7) & 0x9d2c5680;\n\t        y ^= (y << 15) & 0xefc60000;\n\t        y ^= (y >>> 18);\n\t\n\t        return y >>> 0;\n\t    };\n\t\n\t    /* generates a random number on [0,0x7fffffff]-interval */\n\t    MersenneTwister.prototype.genrand_int31 = function () {\n\t        return (this.genrand_int32() >>> 1);\n\t    };\n\t\n\t    /* generates a random number on [0,1]-real-interval */\n\t    MersenneTwister.prototype.genrand_real1 = function () {\n\t        return this.genrand_int32() * (1.0 / 4294967295.0);\n\t        /* divided by 2^32-1 */\n\t    };\n\t\n\t    /* generates a random number on [0,1)-real-interval */\n\t    MersenneTwister.prototype.random = function () {\n\t        return this.genrand_int32() * (1.0 / 4294967296.0);\n\t        /* divided by 2^32 */\n\t    };\n\t\n\t    /* generates a random number on (0,1)-real-interval */\n\t    MersenneTwister.prototype.genrand_real3 = function () {\n\t        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n\t        /* divided by 2^32 */\n\t    };\n\t\n\t    /* generates a random number on [0,1) with 53-bit resolution*/\n\t    MersenneTwister.prototype.genrand_res53 = function () {\n\t        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n\t        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n\t    };\n\t\n\t    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\n\t    var BlueImpMD5 = function () {};\n\t\n\t    BlueImpMD5.prototype.VERSION = '1.0.1';\n\t\n\t    /*\n\t    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\t    * to work around bugs in some JS interpreters.\n\t    */\n\t    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\n\t        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t        return (msw << 16) | (lsw & 0xFFFF);\n\t    };\n\t\n\t    /*\n\t    * Bitwise rotate a 32-bit number to the left.\n\t    */\n\t    BlueImpMD5.prototype.bit_roll = function (num, cnt) {\n\t        return (num << cnt) | (num >>> (32 - cnt));\n\t    };\n\t\n\t    /*\n\t    * These functions implement the five basic operations the algorithm uses.\n\t    */\n\t    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\n\t        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\n\t    };\n\t    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\n\t        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\t    };\n\t    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\n\t        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\t    };\n\t    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\n\t        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n\t    };\n\t    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\n\t        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n\t    };\n\t\n\t    /*\n\t    * Calculate the MD5 of an array of little-endian words, and a bit length.\n\t    */\n\t    BlueImpMD5.prototype.binl_md5 = function (x, len) {\n\t        /* append padding */\n\t        x[len >> 5] |= 0x80 << (len % 32);\n\t        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\t\n\t        var i, olda, oldb, oldc, oldd,\n\t            a =  1732584193,\n\t            b = -271733879,\n\t            c = -1732584194,\n\t            d =  271733878;\n\t\n\t        for (i = 0; i < x.length; i += 16) {\n\t            olda = a;\n\t            oldb = b;\n\t            oldc = c;\n\t            oldd = d;\n\t\n\t            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);\n\t            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\n\t            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\n\t            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\n\t            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\n\t            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\n\t            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\n\t            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\n\t            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\n\t            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\n\t            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n\t            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\n\t            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\n\t\n\t            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\n\t            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\n\t            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\n\t            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);\n\t            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\n\t            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\n\t            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\n\t            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\n\t            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\n\t            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\n\t            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\n\t            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\n\t            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\n\t            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\n\t            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\t\n\t            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);\n\t            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\n\t            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\n\t            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\n\t            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\n\t            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\n\t            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\n\t            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);\n\t            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\n\t            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\n\t            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\n\t            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\n\t            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\n\t\n\t            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);\n\t            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\n\t            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\n\t            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\n\t            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\n\t            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\n\t            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\n\t            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\n\t            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\n\t            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\n\t            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\n\t            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\n\t\n\t            a = this.safe_add(a, olda);\n\t            b = this.safe_add(b, oldb);\n\t            c = this.safe_add(c, oldc);\n\t            d = this.safe_add(d, oldd);\n\t        }\n\t        return [a, b, c, d];\n\t    };\n\t\n\t    /*\n\t    * Convert an array of little-endian words to a string\n\t    */\n\t    BlueImpMD5.prototype.binl2rstr = function (input) {\n\t        var i,\n\t            output = '';\n\t        for (i = 0; i < input.length * 32; i += 8) {\n\t            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n\t        }\n\t        return output;\n\t    };\n\t\n\t    /*\n\t    * Convert a raw string to an array of little-endian words\n\t    * Characters >255 have their high-byte silently ignored.\n\t    */\n\t    BlueImpMD5.prototype.rstr2binl = function (input) {\n\t        var i,\n\t            output = [];\n\t        output[(input.length >> 2) - 1] = undefined;\n\t        for (i = 0; i < output.length; i += 1) {\n\t            output[i] = 0;\n\t        }\n\t        for (i = 0; i < input.length * 8; i += 8) {\n\t            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n\t        }\n\t        return output;\n\t    };\n\t\n\t    /*\n\t    * Calculate the MD5 of a raw string\n\t    */\n\t    BlueImpMD5.prototype.rstr_md5 = function (s) {\n\t        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n\t    };\n\t\n\t    /*\n\t    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n\t    */\n\t    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\n\t        var i,\n\t            bkey = this.rstr2binl(key),\n\t            ipad = [],\n\t            opad = [],\n\t            hash;\n\t        ipad[15] = opad[15] = undefined;\n\t        if (bkey.length > 16) {\n\t            bkey = this.binl_md5(bkey, key.length * 8);\n\t        }\n\t        for (i = 0; i < 16; i += 1) {\n\t            ipad[i] = bkey[i] ^ 0x36363636;\n\t            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t        }\n\t        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n\t        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n\t    };\n\t\n\t    /*\n\t    * Convert a raw string to a hex string\n\t    */\n\t    BlueImpMD5.prototype.rstr2hex = function (input) {\n\t        var hex_tab = '0123456789abcdef',\n\t            output = '',\n\t            x,\n\t            i;\n\t        for (i = 0; i < input.length; i += 1) {\n\t            x = input.charCodeAt(i);\n\t            output += hex_tab.charAt((x >>> 4) & 0x0F) +\n\t                hex_tab.charAt(x & 0x0F);\n\t        }\n\t        return output;\n\t    };\n\t\n\t    /*\n\t    * Encode a string as utf-8\n\t    */\n\t    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\n\t        return unescape(encodeURIComponent(input));\n\t    };\n\t\n\t    /*\n\t    * Take string arguments and return either raw or hex encoded strings\n\t    */\n\t    BlueImpMD5.prototype.raw_md5 = function (s) {\n\t        return this.rstr_md5(this.str2rstr_utf8(s));\n\t    };\n\t    BlueImpMD5.prototype.hex_md5 = function (s) {\n\t        return this.rstr2hex(this.raw_md5(s));\n\t    };\n\t    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\n\t        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\n\t    };\n\t    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\n\t        return this.rstr2hex(this.raw_hmac_md5(k, d));\n\t    };\n\t\n\t    BlueImpMD5.prototype.md5 = function (string, key, raw) {\n\t        if (!key) {\n\t            if (!raw) {\n\t                return this.hex_md5(string);\n\t            }\n\t\n\t            return this.raw_md5(string);\n\t        }\n\t\n\t        if (!raw) {\n\t            return this.hex_hmac_md5(key, string);\n\t        }\n\t\n\t        return this.raw_hmac_md5(key, string);\n\t    };\n\t\n\t    // CommonJS module\n\t    if (true) {\n\t        if (typeof module !== 'undefined' && module.exports) {\n\t            exports = module.exports = Chance;\n\t        }\n\t        exports.Chance = Chance;\n\t    }\n\t\n\t    // Register as an anonymous AMD module\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return Chance;\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\t\n\t    // if there is a importsScrips object define chance for worker\n\t    if (typeof importScripts !== 'undefined') {\n\t        chance = new Chance();\n\t    }\n\t\n\t    // If there is a window object, that at least has a document property,\n\t    // instantiate and define chance on the window\n\t    if (typeof window === \"object\" && typeof window.document === \"object\") {\n\t        window.Chance = Chance;\n\t        window.chance = new Chance();\n\t    }\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(703).Buffer))\n\n/***/ },\n\n/***/ 294:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TRACE_FIXTURES = exports.DEPENDENCIES_FIXTURES = undefined;\n\t\n\tvar _chance = __webpack_require__(179);\n\t\n\tvar _chance2 = _interopRequireDefault(_chance);\n\t\n\tvar _traceGenerators = __webpack_require__(688);\n\t\n\tvar _traceGenerators2 = _interopRequireDefault(_traceGenerators);\n\t\n\tvar _dependencyGenerators = __webpack_require__(687);\n\t\n\tvar _dependencyGenerators2 = _interopRequireDefault(_dependencyGenerators);\n\t\n\tvar _trace = __webpack_require__(34);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Copyright (c) 2017 Uber Technologies, Inc.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t\n\tvar chance = new _chance2.default();\n\t\n\tvar DEPENDENCIES_FIXTURES = exports.DEPENDENCIES_FIXTURES = _dependencyGenerators2.default.dependencies({});\n\tvar TRACE_FIXTURES = exports.TRACE_FIXTURES = _traceGenerators2.default.traces({});\n\tvar traceMap = new Map(TRACE_FIXTURES.map(function (trace) {\n\t  return [(0, _trace.getTraceId)(trace), trace];\n\t}));\n\t\n\tfunction resolveWithData(data) {\n\t  return new Promise(function (resolve) {\n\t    return setTimeout(function () {\n\t      return resolve({ data: data });\n\t    });\n\t  }, chance.integer({ min: 100, max: 2000 }));\n\t}\n\t\n\tfunction rejectWithErrors() {\n\t  for (var _len = arguments.length, errors = Array(_len), _key = 0; _key < _len; _key++) {\n\t    errors[_key] = arguments[_key];\n\t  }\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    return setTimeout(function () {\n\t      return reject({ errors: errors });\n\t    }, chance.integer({ min: 100, max: 2000 }));\n\t  });\n\t}\n\t\n\texports.default = {\n\t  fetchTrace: function fetchTrace(id) {\n\t    return traceMap.has(id) ? resolveWithData([Object.assign({}, traceMap.get(id))]) : rejectWithErrors(new Error('trace not found'));\n\t  },\n\t  searchTraces: function searchTraces() {\n\t    return resolveWithData(TRACE_FIXTURES);\n\t  },\n\t  fetchServices: function fetchServices() {\n\t    return resolveWithData(_traceGenerators.SERVICE_LIST);\n\t  },\n\t  fetchServiceOperations: function fetchServiceOperations() {\n\t    return resolveWithData(_traceGenerators.OPERATIONS_LIST);\n\t  },\n\t  fetchDependencies: function fetchDependencies() {\n\t    return resolveWithData(DEPENDENCIES_FIXTURES);\n\t  }\n\t};\n\n/***/ },\n\n/***/ 687:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _chance = __webpack_require__(179);\n\t\n\tvar _chance2 = _interopRequireDefault(_chance);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar chance = new _chance2.default(); // Copyright (c) 2017 Uber Technologies, Inc.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t\n\texports.default = chance.mixin({\n\t  dependencies: function dependencies(_ref) {\n\t    var _ref$numOfNodes = _ref.numOfNodes,\n\t        numOfNodes = _ref$numOfNodes === undefined ? 45 : _ref$numOfNodes,\n\t        _ref$numOfLinks = _ref.numOfLinks,\n\t        numOfLinks = _ref$numOfLinks === undefined ? 45 : _ref$numOfLinks;\n\t\n\t    return chance.n(chance.linkFromNodes, numOfLinks, {\n\t      nodeList: chance.n(chance.node, numOfNodes)\n\t    });\n\t  },\n\t  node: function node() {\n\t    return chance.city();\n\t  },\n\t  link: function link(_ref2) {\n\t    var _ref2$parent = _ref2.parent,\n\t        parent = _ref2$parent === undefined ? chance.city() : _ref2$parent,\n\t        _ref2$child = _ref2.child,\n\t        child = _ref2$child === undefined ? chance.city() : _ref2$child,\n\t        _ref2$callCount = _ref2.callCount,\n\t        callCount = _ref2$callCount === undefined ? chance.integer({ min: 1, max: 250000000 }) : _ref2$callCount;\n\t\n\t    return { parent: parent, child: child, callCount: callCount };\n\t  },\n\t  linkFromNodes: function linkFromNodes(_ref3) {\n\t    var nodeList = _ref3.nodeList;\n\t\n\t    return chance.link({\n\t      parent: chance.pickone(nodeList),\n\t      child: chance.pickone(nodeList)\n\t    });\n\t  }\n\t});\n\n/***/ },\n\n/***/ 688:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.OPERATIONS_LIST = exports.SERVICE_LIST = undefined;\n\t\n\tvar _chance = __webpack_require__(179);\n\t\n\tvar _chance2 = _interopRequireDefault(_chance);\n\t\n\tvar _span = __webpack_require__(78);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } // Copyright (c) 2017 Uber Technologies, Inc.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t\n\tvar chance = new _chance2.default();\n\t\n\tvar SERVICE_LIST = exports.SERVICE_LIST = ['serviceA', 'serviceB', 'serviceC', 'serviceD', 'serviceE', 'serviceF'];\n\tvar OPERATIONS_LIST = exports.OPERATIONS_LIST = ['GET', 'PUT', 'POST', 'DELETE', 'MySQL::SELECT', 'MySQL::INSERT', 'MongoDB::find', 'MongoDB::update'];\n\t\n\tfunction setupParentSpan(spans, parentSpanValues) {\n\t  Object.assign(spans[0], parentSpanValues);\n\t  return spans;\n\t}\n\t\n\tfunction getParentSpanId(span, levels) {\n\t  var nestingLevel = chance.integer({ min: 1, max: levels.length });\n\t\n\t  // pick the correct nesting level if allocated by the levels calculation\n\t  levels.forEach(function (level, idx) {\n\t    if (level.indexOf((0, _span.getSpanId)(span)) >= 0) {\n\t      nestingLevel = idx;\n\t    }\n\t  });\n\t\n\t  return nestingLevel - 1 >= 0 ? chance.pickone(levels[nestingLevel - 1]) : null;\n\t}\n\t\n\t/* this simulates the hierarchy created by CHILD_OF tags */\n\tfunction attachReferences(spans) {\n\t  var depth = chance.integer({ min: 1, max: 10 });\n\t  var levels = [[(0, _span.getSpanId)(spans[0])]];\n\t\n\t  var duplicateLevelFilter = function duplicateLevelFilter(currentLevels) {\n\t    return function (spanID) {\n\t      return !currentLevels.find(function (level) {\n\t        return level.indexOf(spanID) >= 0;\n\t      });\n\t    };\n\t  };\n\t\n\t  while (levels.length < depth) {\n\t    var newLevel = chance.pickset(spans, chance.integer({ min: 4, max: 8 })).map(_span.getSpanId).filter(duplicateLevelFilter(levels));\n\t    levels.push(newLevel);\n\t  }\n\t\n\t  // filter out empty levels\n\t  levels = levels.filter(function (level) {\n\t    return level.length > 0;\n\t  });\n\t\n\t  return spans.map(function (span) {\n\t    var parentSpanId = getParentSpanId(span, levels);\n\t    return parentSpanId ? Object.assign({}, span, {\n\t      references: [{\n\t        refType: 'CHILD_OF',\n\t        traceID: span.traceID,\n\t        spanID: parentSpanId\n\t      }]\n\t    }) : span;\n\t  });\n\t}\n\t\n\texports.default = chance.mixin({\n\t  trace: function trace(_ref) {\n\t    var _ref$numberOfSpans = _ref.numberOfSpans,\n\t        numberOfSpans = _ref$numberOfSpans === undefined ? chance.pickone([Math.ceil(chance.normal({ mean: 200, dev: 10 })) + 1, Math.ceil(chance.integer({ min: 3, max: 10 })), Math.ceil(chance.normal({ mean: 45, dev: 15 })) + 1]) : _ref$numberOfSpans,\n\t        _ref$numberOfProcesse = _ref.numberOfProcesses,\n\t        numberOfProcesses = _ref$numberOfProcesse === undefined ? chance.integer({ min: 1, max: 10 }) : _ref$numberOfProcesse;\n\t\n\t    var traceID = chance.guid();\n\t    var duration = chance.integer({ min: 10000, max: 5000000 });\n\t    var timestamp = (new Date().getTime() - chance.integer({ min: 0, max: 1000 }) * 1000) * 1000;\n\t\n\t    var processArray = chance.processes({ numberOfProcesses: numberOfProcesses });\n\t    var processes = processArray.reduce(function (pMap, p) {\n\t      return Object.assign({}, pMap, _defineProperty({}, p.processID, p));\n\t    }, {});\n\t\n\t    var spans = chance.n(chance.span, numberOfSpans, {\n\t      traceID: traceID,\n\t      processes: processes,\n\t      traceStartTime: timestamp,\n\t      traceEndTime: timestamp + duration\n\t    });\n\t    spans = attachReferences(spans);\n\t    if (spans.length > 1) {\n\t      spans = setupParentSpan(spans, { startTime: timestamp, duration: duration });\n\t    }\n\t\n\t    return {\n\t      traceID: traceID,\n\t      spans: spans,\n\t      duration: duration,\n\t      timestamp: timestamp,\n\t      processes: processes\n\t    };\n\t  },\n\t  tag: function tag() {\n\t    return {\n\t      key: 'http.url',\n\t      type: 'String',\n\t      value: '/v2/' + chance.pickone(['alpha', 'beta', 'gamma']) + '/' + chance.guid()\n\t    };\n\t  },\n\t  span: function span(_ref2) {\n\t    var _ref2$traceID = _ref2.traceID,\n\t        traceID = _ref2$traceID === undefined ? chance.guid() : _ref2$traceID,\n\t        _ref2$processes = _ref2.processes,\n\t        processes = _ref2$processes === undefined ? {} : _ref2$processes,\n\t        _ref2$traceStartTime = _ref2.traceStartTime,\n\t        traceStartTime = _ref2$traceStartTime === undefined ? chance.timestamp() * 1000 * 1000 : _ref2$traceStartTime,\n\t        _ref2$traceEndTime = _ref2.traceEndTime,\n\t        traceEndTime = _ref2$traceEndTime === undefined ? traceStartTime + 100000 : _ref2$traceEndTime,\n\t        _ref2$operations = _ref2.operations,\n\t        operations = _ref2$operations === undefined ? OPERATIONS_LIST : _ref2$operations;\n\t\n\t    var startTime = chance.integer({\n\t      min: traceStartTime,\n\t      max: traceEndTime\n\t    });\n\t\n\t    return {\n\t      traceID: traceID,\n\t      processID: chance.pickone(Object.keys(processes)),\n\t      spanID: chance.guid(),\n\t      flags: 0,\n\t      operationName: chance.pickone(operations),\n\t      references: [],\n\t      startTime: startTime,\n\t      duration: chance.integer({ min: 1, max: traceEndTime - startTime }),\n\t      tags: chance.tags(),\n\t      logs: []\n\t    };\n\t  },\n\t  process: function process(_ref3) {\n\t    var _ref3$services = _ref3.services,\n\t        services = _ref3$services === undefined ? SERVICE_LIST : _ref3$services;\n\t\n\t    return {\n\t      processID: chance.guid(),\n\t      serviceName: chance.pickone(services),\n\t      tags: chance.tags()\n\t    };\n\t  },\n\t  traces: function traces(_ref4) {\n\t    var _ref4$numberOfTraces = _ref4.numberOfTraces,\n\t        numberOfTraces = _ref4$numberOfTraces === undefined ? chance.integer({ min: 5, max: 15 }) : _ref4$numberOfTraces;\n\t\n\t    return chance.n(chance.trace, numberOfTraces, {});\n\t  },\n\t  tags: function tags() {\n\t    return chance.n(chance.tag, chance.integer({ min: 1, max: 10 }), {});\n\t  },\n\t  processes: function processes(_ref5) {\n\t    var _ref5$numberOfProcess = _ref5.numberOfProcesses,\n\t        numberOfProcesses = _ref5$numberOfProcess === undefined ? chance.integer({ min: 1, max: 25 }) : _ref5$numberOfProcess;\n\t\n\t    return chance.n(chance.process, numberOfProcesses, {});\n\t  }\n\t});\n\n/***/ },\n\n/***/ 702:\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n\n/***/ 703:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(702)\n\tvar ieee754 = __webpack_require__(874)\n\tvar isArray = __webpack_require__(875)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 874:\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n\n/***/ 875:\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.acaf8887.chunk.js","//  Chance.js 1.0.6\n//  http://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n\n(function () {\n\n    // Constants\n    var MAX_INT = 9007199254740992;\n    var MIN_INT = -MAX_INT;\n    var NUMBERS = '0123456789';\n    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n    var HEX_POOL  = NUMBERS + \"abcdef\";\n\n    // Cached array helpers\n    var slice = Array.prototype.slice;\n\n    // Constructor\n    function Chance (seed) {\n        if (!(this instanceof Chance)) {\n            return seed == null ? new Chance() : new Chance(seed);\n        }\n\n        // if user has provided a function, use that as the generator\n        if (typeof seed === 'function') {\n            this.random = seed;\n            return this;\n        }\n\n        if (arguments.length) {\n            // set a starting value of zero so we can add to it\n            this.seed = 0;\n        }\n\n        // otherwise, leave this.seed blank so that MT will receive a blank\n\n        for (var i = 0; i < arguments.length; i++) {\n            var seedling = 0;\n            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\n                for (var j = 0; j < arguments[i].length; j++) {\n                    // create a numeric hash for each argument, add to seedling\n                    var hash = 0;\n                    for (var k = 0; k < arguments[i].length; k++) {\n                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\n                    }\n                    seedling += hash;\n                }\n            } else {\n                seedling = arguments[i];\n            }\n            this.seed += (arguments.length - i) * seedling;\n        }\n\n        // If no generator function was provided, use our MT\n        this.mt = this.mersenne_twister(this.seed);\n        this.bimd5 = this.blueimp_md5();\n        this.random = function () {\n            return this.mt.random(this.seed);\n        };\n\n        return this;\n    }\n\n    Chance.prototype.VERSION = \"1.0.6\";\n\n    // Random helper functions\n    function initOptions(options, defaults) {\n        options || (options = {});\n\n        if (defaults) {\n            for (var i in defaults) {\n                if (typeof options[i] === 'undefined') {\n                    options[i] = defaults[i];\n                }\n            }\n        }\n\n        return options;\n    }\n\n    function testRange(test, errorMessage) {\n        if (test) {\n            throw new RangeError(errorMessage);\n        }\n    }\n\n    /**\n     * Encode the input string with Base64.\n     */\n    var base64 = function() {\n        throw new Error('No Base64 encoder available.');\n    };\n\n    // Select proper Base64 encoder.\n    (function determineBase64Encoder() {\n        if (typeof btoa === 'function') {\n            base64 = btoa;\n        } else if (typeof Buffer === 'function') {\n            base64 = function(input) {\n                return new Buffer(input).toString('base64');\n            };\n        }\n    })();\n\n    // -- Basics --\n\n    /**\n     *  Return a random bool, either true or false\n     *\n     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\n     *    receiving a true or false value back.\n     *  @throws {RangeError} if the likelihood is out of bounds\n     *  @returns {Bool} either true or false\n     */\n    Chance.prototype.bool = function (options) {\n        // likelihood of success (true)\n        options = initOptions(options, {likelihood : 50});\n\n        // Note, we could get some minor perf optimizations by checking range\n        // prior to initializing defaults, but that makes code a bit messier\n        // and the check more complicated as we have to check existence of\n        // the object then existence of the key before checking constraints.\n        // Since the options initialization should be minor computationally,\n        // decision made for code cleanliness intentionally. This is mentioned\n        // here as it's the first occurrence, will not be mentioned again.\n        testRange(\n            options.likelihood < 0 || options.likelihood > 100,\n            \"Chance: Likelihood accepts values from 0 to 100.\"\n        );\n\n        return this.random() * 100 < options.likelihood;\n    };\n\n    /**\n     *  Return a random character.\n     *\n     *  @param {Object} [options={}] can specify a character pool, only alpha,\n     *    only symbols, and casing (lower or upper)\n     *  @returns {String} a single random character\n     *  @throws {RangeError} Can only specify alpha or symbols, not both\n     */\n    Chance.prototype.character = function (options) {\n        options = initOptions(options);\n        testRange(\n            options.alpha && options.symbols,\n            \"Chance: Cannot specify both alpha and symbols.\"\n        );\n\n        var symbols = \"!@#$%^&*()[]\",\n            letters, pool;\n\n        if (options.casing === 'lower') {\n            letters = CHARS_LOWER;\n        } else if (options.casing === 'upper') {\n            letters = CHARS_UPPER;\n        } else {\n            letters = CHARS_LOWER + CHARS_UPPER;\n        }\n\n        if (options.pool) {\n            pool = options.pool;\n        } else if (options.alpha) {\n            pool = letters;\n        } else if (options.symbols) {\n            pool = symbols;\n        } else {\n            pool = letters + NUMBERS + symbols;\n        }\n\n        return pool.charAt(this.natural({max: (pool.length - 1)}));\n    };\n\n    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\n    // Note, fixed means N OR LESS digits after the decimal. This because\n    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n    // needed\n    /**\n     *  Return a random floating point number\n     *\n     *  @param {Object} [options={}] can specify a fixed precision, min, max\n     *  @returns {Number} a single floating point number\n     *  @throws {RangeError} Can only specify fixed or precision, not both. Also\n     *    min cannot be greater than max\n     */\n    Chance.prototype.floating = function (options) {\n        options = initOptions(options, {fixed : 4});\n        testRange(\n            options.fixed && options.precision,\n            \"Chance: Cannot specify both fixed and precision.\"\n        );\n\n        var num;\n        var fixed = Math.pow(10, options.fixed);\n\n        var max = MAX_INT / fixed;\n        var min = -max;\n\n        testRange(\n            options.min && options.fixed && options.min < min,\n            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n        );\n        testRange(\n            options.max && options.fixed && options.max > max,\n            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n        );\n\n        options = initOptions(options, { min : min, max : max });\n\n        // Todo - Make this work!\n        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n        var num_fixed = (num / fixed).toFixed(options.fixed);\n\n        return parseFloat(num_fixed);\n    };\n\n    /**\n     *  Return a random integer\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.integer({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.integer = function (options) {\n        // 9007199254740992 (2^53) is the max integer number in JavaScript\n        // See: http://vq.io/132sa2j\n        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n    };\n\n    /**\n     *  Return a random natural\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.natural({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.natural = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n        return this.integer(options);\n    };\n\t\n\t/**\n     *  Return a random hex number as string\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.hex({min: '9', max: 'B'});\n     *  would return either '9', 'A' or 'B'.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max and/or casing\n     *  @returns {String} a single random string hex number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.hex = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\t\tvar integer = this.natural({min: options.min, max: options.max});\n\t\tif (options.casing === 'upper') {\n\t\t\treturn integer.toString(16).toUpperCase();\n\t\t}\n\t\treturn integer.toString(16);\n    };\n\n    /**\n     *  Return a random string\n     *\n     *  @param {Object} [options={}] can specify a length\n     *  @returns {String} a string of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.string = function (options) {\n        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length,\n            text = this.n(this.character, length, options);\n\n        return text.join(\"\");\n    };\n\n    // -- End Basics --\n\n    // -- Helpers --\n\n    Chance.prototype.capitalize = function (word) {\n        return word.charAt(0).toUpperCase() + word.substr(1);\n    };\n\n    Chance.prototype.mixin = function (obj) {\n        for (var func_name in obj) {\n            Chance.prototype[func_name] = obj[func_name];\n        }\n        return this;\n    };\n\n    /**\n     *  Given a function that generates something random and a number of items to generate,\n     *    return an array of items where none repeat.\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} num number of terms to generate\n     *  @param {Object} options any options to pass on to the generator function\n     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.unique = function(fn, num, options) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };\n\n        if (options) {\n            comparator = options.comparator || comparator;\n        }\n\n        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\n        while (arr.length < num) {\n            var clonedParams = JSON.parse(JSON.stringify(params));\n            result = fn.apply(this, clonedParams);\n            if (!comparator(arr, result)) {\n                arr.push(result);\n                // reset count when unique found\n                count = 0;\n            }\n\n            if (++count > MAX_DUPLICATES) {\n                throw new RangeError(\"Chance: num is likely too large for sample set\");\n            }\n        }\n        return arr;\n    };\n\n    /**\n     *  Gives an array of n random terms\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} n number of terms to generate\n     *  @returns {Array} an array of length `n` with items generated by `fn`\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.n = function(fn, n) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        if (typeof n === 'undefined') {\n            n = 1;\n        }\n        var i = n, arr = [], params = slice.call(arguments, 2);\n\n        // Providing a negative count should result in a noop.\n        i = Math.max( 0, i );\n\n        for (null; i--; null) {\n            arr.push(fn.apply(this, params));\n        }\n\n        return arr;\n    };\n\n    // H/T to SO for this one: http://vq.io/OtUrZ5\n    Chance.prototype.pad = function (number, width, pad) {\n        // Default pad to 0 if none provided\n        pad = pad || '0';\n        // Convert number to a string\n        number = number + '';\n        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n    };\n\n    // DEPRECATED on 2015-10-01\n    Chance.prototype.pick = function (arr, count) {\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n        }\n        if (!count || count === 1) {\n            return arr[this.natural({max: arr.length - 1})];\n        } else {\n            return this.shuffle(arr).slice(0, count);\n        }\n    };\n\n    // Given an array, returns a single random element\n    Chance.prototype.pickone = function (arr) {\n        if (arr.length === 0) {\n          throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\n        }\n        return arr[this.natural({max: arr.length - 1})];\n    };\n\n    // Given an array, returns a random set with 'count' elements\n    Chance.prototype.pickset = function (arr, count) {\n        if (count === 0) {\n            return [];\n        }\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\n        }\n        if (count < 0) {\n            throw new RangeError(\"Chance: count must be positive number\");\n        }\n        if (!count || count === 1) {\n            return [ this.pickone(arr) ];\n        } else {\n            return this.shuffle(arr).slice(0, count);\n        }\n    };\n\n    Chance.prototype.shuffle = function (arr) {\n        var old_array = arr.slice(0),\n            new_array = [],\n            j = 0,\n            length = Number(old_array.length);\n\n        for (var i = 0; i < length; i++) {\n            // Pick a random index from the array\n            j = this.natural({max: old_array.length - 1});\n            // Add it to the new array\n            new_array[i] = old_array[j];\n            // Remove that element from the original array\n            old_array.splice(j, 1);\n        }\n\n        return new_array;\n    };\n\n    // Returns a single item from an array with relative weighting of odds\n    Chance.prototype.weighted = function (arr, weights, trim) {\n        if (arr.length !== weights.length) {\n            throw new RangeError(\"Chance: length of array and weights must match\");\n        }\n\n        // scan weights array and sum valid entries\n        var sum = 0;\n        var val;\n        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            if (isNaN(val)) {\n                throw new RangeError(\"all weights must be numbers\");\n            }\n\n            if (val > 0) {\n                sum += val;\n            }\n        }\n\n        if (sum === 0) {\n            throw new RangeError(\"Chance: no valid entries in array weights\");\n        }\n\n        // select a value within range\n        var selected = this.random() * sum;\n\n        // find array entry corresponding to selected value\n        var total = 0;\n        var lastGoodIdx = -1;\n        var chosenIdx;\n        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            total += val;\n            if (val > 0) {\n                if (selected <= total) {\n                    chosenIdx = weightIndex;\n                    break;\n                }\n                lastGoodIdx = weightIndex;\n            }\n\n            // handle any possible rounding error comparison to ensure something is picked\n            if (weightIndex === (weights.length - 1)) {\n                chosenIdx = lastGoodIdx;\n            }\n        }\n\n        var chosen = arr[chosenIdx];\n        trim = (typeof trim === 'undefined') ? false : trim;\n        if (trim) {\n            arr.splice(chosenIdx, 1);\n            weights.splice(chosenIdx, 1);\n        }\n\n        return chosen;\n    };\n\n    // -- End Helpers --\n\n    // -- Text --\n\n    Chance.prototype.paragraph = function (options) {\n        options = initOptions(options);\n\n        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n            sentence_array = this.n(this.sentence, sentences);\n\n        return sentence_array.join(' ');\n    };\n\n    // Could get smarter about this than generating random words and\n    // chaining them together. Such as: http://vq.io/1a5ceOh\n    Chance.prototype.sentence = function (options) {\n        options = initOptions(options);\n\n        var words = options.words || this.natural({min: 12, max: 18}),\n            punctuation = options.punctuation,\n            text, word_array = this.n(this.word, words);\n\n        text = word_array.join(' ');\n\n        // Capitalize first letter of sentence\n        text = this.capitalize(text);\n\n        // Make sure punctuation has a usable value\n        if (punctuation !== false && !/^[\\.\\?;!:]$/.test(punctuation)) {\n            punctuation = '.';\n        }\n\n        // Add punctuation mark\n        if (punctuation) {\n            text += punctuation;\n        }\n\n        return text;\n    };\n\n    Chance.prototype.syllable = function (options) {\n        options = initOptions(options);\n\n        var length = options.length || this.natural({min: 2, max: 3}),\n            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n            vowels = 'aeiou', // vowels\n            all = consonants + vowels, // all\n            text = '',\n            chr;\n\n        // I'm sure there's a more elegant way to do this, but this works\n        // decently well.\n        for (var i = 0; i < length; i++) {\n            if (i === 0) {\n                // First character can be anything\n                chr = this.character({pool: all});\n            } else if (consonants.indexOf(chr) === -1) {\n                // Last character was a vowel, now we want a consonant\n                chr = this.character({pool: consonants});\n            } else {\n                // Last character was a consonant, now we want a vowel\n                chr = this.character({pool: vowels});\n            }\n\n            text += chr;\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    Chance.prototype.word = function (options) {\n        options = initOptions(options);\n\n        testRange(\n            options.syllables && options.length,\n            \"Chance: Cannot specify both syllables AND length.\"\n        );\n\n        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n            text = '';\n\n        if (options.length) {\n            // Either bound word by length\n            do {\n                text += this.syllable();\n            } while (text.length < options.length);\n            text = text.substring(0, options.length);\n        } else {\n            // Or by number of syllables\n            for (var i = 0; i < syllables; i++) {\n                text += this.syllable();\n            }\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    // -- End Text --\n\n    // -- Person --\n\n    Chance.prototype.age = function (options) {\n        options = initOptions(options);\n        var ageRange;\n\n        switch (options.type) {\n            case 'child':\n                ageRange = {min: 0, max: 12};\n                break;\n            case 'teen':\n                ageRange = {min: 13, max: 19};\n                break;\n            case 'adult':\n                ageRange = {min: 18, max: 65};\n                break;\n            case 'senior':\n                ageRange = {min: 65, max: 100};\n                break;\n            case 'all':\n                ageRange = {min: 0, max: 100};\n                break;\n            default:\n                ageRange = {min: 18, max: 65};\n                break;\n        }\n\n        return this.natural(ageRange);\n    };\n\n    Chance.prototype.birthday = function (options) {\n        var age = this.age(options);\n        var currentYear = new Date().getFullYear();\n\n        if (options && options.type) {\n            var min = new Date();\n            var max = new Date();\n            min.setFullYear(currentYear - age - 1);\n            max.setFullYear(currentYear - age);\n\n            options = initOptions(options, {\n                min: min,\n                max: max\n            });\n        } else {\n            options = initOptions(options, {\n                year: currentYear - age\n            });\n        }\n\n        return this.date(options);\n    };\n\n    // CPF; ID to identify taxpayers in Brazil\n    Chance.prototype.cpf = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 9, { max: 9 });\n        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10) {\n            d2 = 0;\n        }\n        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n        return options.formatted ? cpf : cpf.replace(/\\D/g,'');\n    };\n\n    // CNPJ: ID to identify companies in Brazil\n    Chance.prototype.cnpj = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 12, { max: 12 });\n        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1<2) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2<2) {\n            d2 = 0;\n        }\n        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;\n        return options.formatted ? cnpj : cnpj.replace(/\\D/g,'');\n    };\n\n    Chance.prototype.first = function (options) {\n        options = initOptions(options, {gender: this.gender(), nationality: 'en'});\n        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\n    };\n\n    Chance.prototype.profession = function () {\n        return this.pick(this.get(\"professions\"));\n    };\n\n    Chance.prototype.gender = function (options) {\n        options = initOptions(options, {extraGenders: []});\n        return this.pick(['Male', 'Female'].concat(options.extraGenders));\n    };\n\n    Chance.prototype.last = function (options) {\n        options = initOptions(options, {nationality: 'en'});\n        return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\n    };\n\n    Chance.prototype.israelId=function(){\n        var x=this.string({pool: '0123456789',length:8});\n        var y=0;\n        for (var i=0;i<x.length;i++){\n            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);\n            thisDigit=this.pad(thisDigit,2).toString();\n            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\n            y=y+thisDigit;\n        }\n        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);\n        return x;\n    };\n\n    Chance.prototype.mrz = function (options) {\n        var checkDigit = function (input) {\n            var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\n                multipliers = [ 7, 3, 1 ],\n                runningTotal = 0;\n\n            if (typeof input !== 'string') {\n                input = input.toString();\n            }\n\n            input.split('').forEach(function(character, idx) {\n                var pos = alpha.indexOf(character);\n\n                if(pos !== -1) {\n                    character = pos === 0 ? 0 : pos + 9;\n                } else {\n                    character = parseInt(character, 10);\n                }\n                character *= multipliers[idx % multipliers.length];\n                runningTotal += character;\n            });\n            return runningTotal % 10;\n        };\n        var generate = function (opts) {\n            var pad = function (length) {\n                return new Array(length + 1).join('<');\n            };\n            var number = [ 'P<',\n                           opts.issuer,\n                           opts.last.toUpperCase(),\n                           '<<',\n                           opts.first.toUpperCase(),\n                           pad(39 - (opts.last.length + opts.first.length + 2)),\n                           opts.passportNumber,\n                           checkDigit(opts.passportNumber),\n                           opts.nationality,\n                           opts.dob,\n                           checkDigit(opts.dob),\n                           opts.gender,\n                           opts.expiry,\n                           checkDigit(opts.expiry),\n                           pad(14),\n                           checkDigit(pad(14)) ].join('');\n\n            return number +\n                (checkDigit(number.substr(44, 10) +\n                            number.substr(57, 7) +\n                            number.substr(65, 7)));\n        };\n\n        var that = this;\n\n        options = initOptions(options, {\n            first: this.first(),\n            last: this.last(),\n            passportNumber: this.integer({min: 100000000, max: 999999999}),\n            dob: (function () {\n                var date = that.birthday({type: 'adult'});\n                return [date.getFullYear().toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            expiry: (function () {\n                var date = new Date();\n                return [(date.getFullYear() + 5).toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            gender: this.gender() === 'Female' ? 'F': 'M',\n            issuer: 'GBR',\n            nationality: 'GBR'\n        });\n        return generate (options);\n    };\n\n    Chance.prototype.name = function (options) {\n        options = initOptions(options);\n\n        var first = this.first(options),\n            last = this.last(options),\n            name;\n\n        if (options.middle) {\n            name = first + ' ' + this.first(options) + ' ' + last;\n        } else if (options.middle_initial) {\n            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n        } else {\n            name = first + ' ' + last;\n        }\n\n        if (options.prefix) {\n            name = this.prefix(options) + ' ' + name;\n        }\n\n        if (options.suffix) {\n            name = name + ' ' + this.suffix(options);\n        }\n\n        return name;\n    };\n\n    // Return the list of available name prefixes based on supplied gender.\n    // @todo introduce internationalization\n    Chance.prototype.name_prefixes = function (gender) {\n        gender = gender || \"all\";\n        gender = gender.toLowerCase();\n\n        var prefixes = [\n            { name: 'Doctor', abbreviation: 'Dr.' }\n        ];\n\n        if (gender === \"male\" || gender === \"all\") {\n            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n        }\n\n        if (gender === \"female\" || gender === \"all\") {\n            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n        }\n\n        return prefixes;\n    };\n\n    // Alias for name_prefix\n    Chance.prototype.prefix = function (options) {\n        return this.name_prefix(options);\n    };\n\n    Chance.prototype.name_prefix = function (options) {\n        options = initOptions(options, { gender: \"all\" });\n        return options.full ?\n            this.pick(this.name_prefixes(options.gender)).name :\n            this.pick(this.name_prefixes(options.gender)).abbreviation;\n    };\n    //Hungarian ID number\n    Chance.prototype.HIDN= function(){\n     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\n      var idn_pool=\"0123456789\";\n      var idn_chrs=\"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\n      var idn=\"\";\n        idn+=this.string({pool:idn_pool,length:6});\n        idn+=this.string({pool:idn_chrs,length:2});\n        return idn;\n    };\n\n\n    Chance.prototype.ssn = function (options) {\n        options = initOptions(options, {ssnFour: false, dashes: true});\n        var ssn_pool = \"1234567890\",\n            ssn,\n            dash = options.dashes ? '-' : '';\n\n        if(!options.ssnFour) {\n            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n            this.string({pool: ssn_pool, length: 2}) + dash +\n            this.string({pool: ssn_pool, length: 4});\n        } else {\n            ssn = this.string({pool: ssn_pool, length: 4});\n        }\n        return ssn;\n    };\n\n    // Return the list of available name suffixes\n    // @todo introduce internationalization\n    Chance.prototype.name_suffixes = function () {\n        var suffixes = [\n            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n            { name: 'Esquire', abbreviation: 'Esq.' },\n            { name: 'Junior', abbreviation: 'Jr.' },\n            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n            { name: 'Master of Arts', abbreviation: 'M.A.' },\n            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n            { name: 'Master of Science', abbreviation: 'M.S.' },\n            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n            { name: 'Senior', abbreviation: 'Sr.' },\n            { name: 'The Third', abbreviation: 'III' },\n            { name: 'The Fourth', abbreviation: 'IV' },\n            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },\n            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }\n        ];\n        return suffixes;\n    };\n\n    // Alias for name_suffix\n    Chance.prototype.suffix = function (options) {\n        return this.name_suffix(options);\n    };\n\n    Chance.prototype.name_suffix = function (options) {\n        options = initOptions(options);\n        return options.full ?\n            this.pick(this.name_suffixes()).name :\n            this.pick(this.name_suffixes()).abbreviation;\n    };\n\n    Chance.prototype.nationalities = function () {\n        return this.get(\"nationalities\");\n    };\n\n    // Generate random nationality based on json list\n    Chance.prototype.nationality = function () {\n        var nationality = this.pick(this.nationalities());\n        return nationality.name;\n    };\n\n    // -- End Person --\n\n    // -- Mobile --\n    // Android GCM Registration ID\n    Chance.prototype.android_id = function () {\n        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n    };\n\n    // Apple Push Token\n    Chance.prototype.apple_token = function () {\n        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n    };\n\n    // Windows Phone 8 ANID2\n    Chance.prototype.wp8_anid2 = function () {\n        return base64( this.hash( { length : 32 } ) );\n    };\n\n    // Windows Phone 7 ANID\n    Chance.prototype.wp7_anid = function () {\n        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n    };\n\n    // BlackBerry Device PIN\n    Chance.prototype.bb_pin = function () {\n        return this.hash({ length: 8 });\n    };\n\n    // -- End Mobile --\n\n    // -- Web --\n    Chance.prototype.avatar = function (options) {\n        var url = null;\n        var URL_BASE = '//www.gravatar.com/avatar/';\n        var PROTOCOLS = {\n            http: 'http',\n            https: 'https'\n        };\n        var FILE_TYPES = {\n            bmp: 'bmp',\n            gif: 'gif',\n            jpg: 'jpg',\n            png: 'png'\n        };\n        var FALLBACKS = {\n            '404': '404', // Return 404 if not found\n            mm: 'mm', // Mystery man\n            identicon: 'identicon', // Geometric pattern based on hash\n            monsterid: 'monsterid', // A generated monster icon\n            wavatar: 'wavatar', // A generated face\n            retro: 'retro', // 8-bit icon\n            blank: 'blank' // A transparent png\n        };\n        var RATINGS = {\n            g: 'g',\n            pg: 'pg',\n            r: 'r',\n            x: 'x'\n        };\n        var opts = {\n            protocol: null,\n            email: null,\n            fileExtension: null,\n            size: null,\n            fallback: null,\n            rating: null\n        };\n\n        if (!options) {\n            // Set to a random email\n            opts.email = this.email();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.email = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if (options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if (!opts.email) {\n            // Set to a random email\n            opts.email = this.email();\n        }\n\n        // Safe checking for params\n        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\n        opts.size = parseInt(opts.size, 0) ? opts.size : '';\n        opts.rating = RATINGS[opts.rating] ? opts.rating : '';\n        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\n        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\n\n        url =\n            opts.protocol +\n            URL_BASE +\n            this.bimd5.md5(opts.email) +\n            (opts.fileExtension ? '.' + opts.fileExtension : '') +\n            (opts.size || opts.rating || opts.fallback ? '?' : '') +\n            (opts.size ? '&s=' + opts.size.toString() : '') +\n            (opts.rating ? '&r=' + opts.rating : '') +\n            (opts.fallback ? '&d=' + opts.fallback : '')\n            ;\n\n        return url;\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate random color value base on color type:\n     * -> hex\n     * -> rgb\n     * -> rgba\n     * -> 0x\n     * -> named color\n     *\n     * #Examples:\n     * ===============================================\n     * * Geerate random hex color\n     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\n     *\n     * * Generate Hex based color value\n     * chance.color({format: 'hex'})    => '#d67118'\n     *\n     * * Generate simple rgb value\n     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\n     *\n     * * Generate Ox based color value\n     * chance.color({format: '0x'})     => '0x67ae0b'\n     *\n     * * Generate graiscale based value\n     * chance.color({grayscale: true})  => '#e2e2e2'\n     *\n     * * Return valide color name\n     * chance.color({format: 'name'})   => 'red'\n     *\n     * * Make color uppercase\n     * chance.color({casing: 'upper'})  => '#29CFA7'\n\t \n\t * * Min Max values for RGBA\n\t * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\n     *\n     * @param  [object] options\n     * @return [string] color value\n     */\n    Chance.prototype.color = function (options) {\n\t\tfunction pad(n, width, z) {\n\t\t\tz = z || '0';\n\t\t\tn = n + '';\n\t\t\treturn n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t\t}\n\t\t\n        function gray(value, delimiter) {\n            return [value, value, value].join(delimiter || '');\n        }\n\n        function rgb(hasAlpha) {\n            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';\n            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : \"\";\n            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));\n            return rgbValue + '(' + colorValue + alphaChannel + ')';\n        }\n\n        function hex(start, end, withHash) {\n            var symbol = (withHash) ? \"#\" : \"\";\n\t\t\tvar hexstring = \"\";\n\t\t\t\n\t\t\tif (isGrayscale) {\n\t\t\t\thexstring = gray(pad(this.hex({min: min_rgb, max: max_rgb}), 2));\n\t\t\t\tif (options.format === \"shorthex\") {\n\t\t\t\t\thexstring = gray(this.hex({min: 0, max: 15}));\n\t\t\t\t\tconsole.log(\"hex: \" + hexstring);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (options.format === \"shorthex\") {\n\t\t\t\t\thexstring = pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);\n\t\t\t\t}\n\t\t\t\telse if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\n\t\t\t\t\thexstring = pad(this.hex({min: min_red, max: max_red}), 2) + pad(this.hex({min: min_green, max: max_green}), 2) + pad(this.hex({min: min_blue, max: max_blue}), 2);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thexstring = pad(this.hex({min: min_rgb, max: max_rgb}), 2) + pad(this.hex({min: min_rgb, max: max_rgb}), 2) + pad(this.hex({min: min_rgb, max: max_rgb}), 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n            return symbol + hexstring;\n        }\n\n        options = initOptions(options, {\n            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\n            grayscale: false,\n            casing: 'lower', \n\t\t\tmin: 0, \n\t\t\tmax: 255, \n\t\t\tmin_red: undefined,\n\t\t\tmax_red: undefined, \n\t\t\tmin_green: undefined,\n\t\t\tmax_green: undefined, \n\t\t\tmin_blue: undefined, \n\t\t\tmax_blue: undefined, \n\t\t\tmin_alpha: 0,\n\t\t\tmax_alpha: 1\n        });\n\n        var isGrayscale = options.grayscale;\n\t\tvar min_rgb = options.min;\n\t\tvar max_rgb = options.max;\t\t\n\t\tvar min_red = options.min_red;\n\t\tvar max_red = options.max_red;\n\t\tvar min_green = options.min_green;\n\t\tvar max_green = options.max_green;\n\t\tvar min_blue = options.min_blue;\n\t\tvar max_blue = options.max_blue;\n\t\tvar min_alpha = options.min_alpha;\n\t\tvar max_alpha = options.max_alpha;\n\t\tif (options.min_red === undefined) { min_red = min_rgb; }\n\t\tif (options.max_red === undefined) { max_red = max_rgb; }\n\t\tif (options.min_green === undefined) { min_green = min_rgb; }\n\t\tif (options.max_green === undefined) { max_green = max_rgb; }\n\t\tif (options.min_blue === undefined) { min_blue = min_rgb; }\n\t\tif (options.max_blue === undefined) { max_blue = max_rgb; }\n\t\tif (options.min_alpha === undefined) { min_alpha = 0; }\n\t\tif (options.max_alpha === undefined) { max_alpha = 1; }\n\t\tif (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\t\t\t\n\t\t\tmin_rgb = ((min_red + min_green + min_blue) / 3);\n\t\t\tmax_rgb = ((max_red + max_green + max_blue) / 3);\n\t\t}\n        var colorValue;\n\n        if (options.format === 'hex') {\n            colorValue = hex.call(this, 2, 6, true);\n        }\n        else if (options.format === 'shorthex') {\n            colorValue = hex.call(this, 1, 3, true);\n        }\n        else if (options.format === 'rgb') {\n            colorValue = rgb.call(this, false);\n        }\n        else if (options.format === 'rgba') {\n            colorValue = rgb.call(this, true);\n        }\n        else if (options.format === '0x') {\n            colorValue = '0x' + hex.call(this, 2, 6);\n        }\n        else if(options.format === 'name') {\n            return this.pick(this.get(\"colorNames\"));\n        }\n        else {\n            throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\n        }\n\n        if (options.casing === 'upper' ) {\n            colorValue = colorValue.toUpperCase();\n        }\n\n        return colorValue;\n    };\n\n    Chance.prototype.domain = function (options) {\n        options = initOptions(options);\n        return this.word() + '.' + (options.tld || this.tld());\n    };\n\n    Chance.prototype.email = function (options) {\n        options = initOptions(options);\n        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n    };\n\n    Chance.prototype.fbid = function () {\n        return parseInt('10000' + this.natural({max: 100000000000}), 10);\n    };\n\n    Chance.prototype.google_analytics = function () {\n        var account = this.pad(this.natural({max: 999999}), 6);\n        var property = this.pad(this.natural({max: 99}), 2);\n\n        return 'UA-' + account + '-' + property;\n    };\n\n    Chance.prototype.hashtag = function () {\n        return '#' + this.word();\n    };\n\n    Chance.prototype.ip = function () {\n        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n        // this should probably be updated to account for that rare as it may be\n        return this.natural({min: 1, max: 254}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({min: 1, max: 254});\n    };\n\n    Chance.prototype.ipv6 = function () {\n        var ip_addr = this.n(this.hash, 8, {length: 4});\n\n        return ip_addr.join(\":\");\n    };\n\n    Chance.prototype.klout = function () {\n        return this.natural({min: 1, max: 99});\n    };\n\n    Chance.prototype.semver = function (options) {\n        options = initOptions(options, { include_prerelease: true });\n\n        var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\n        if (options.range) {\n            range = options.range;\n        }\n\n        var prerelease = \"\";\n        if (options.include_prerelease) {\n            prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\n        }\n        return range + this.rpg('3d10').join('.') + prerelease;\n    };\n\n    Chance.prototype.tlds = function () {\n        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'bq', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\n    };\n\n    Chance.prototype.tld = function () {\n        return this.pick(this.tlds());\n    };\n\n    Chance.prototype.twitter = function () {\n        return '@' + this.word();\n    };\n\n    Chance.prototype.url = function (options) {\n        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\n        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\n        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n    };\n\n    Chance.prototype.port = function() {\n        return this.integer({min: 0, max: 65535});\n    };\n\n    // -- End Web --\n\n    // -- Location --\n\n    Chance.prototype.address = function (options) {\n        options = initOptions(options);\n        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n    };\n\n    Chance.prototype.altitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: 0, max: 8848});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.areacode = function (options) {\n        options = initOptions(options, {parens : true});\n        // Don't want area codes to start with 1, or have a 9 as the second digit\n        var areacode = this.natural({min: 2, max: 9}).toString() +\n                this.natural({min: 0, max: 8}).toString() +\n                this.natural({min: 0, max: 9}).toString();\n\n        return options.parens ? '(' + areacode + ')' : areacode;\n    };\n\n    Chance.prototype.city = function () {\n        return this.capitalize(this.word({syllables: 3}));\n    };\n\n    Chance.prototype.coordinates = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options);\n    };\n\n    Chance.prototype.countries = function () {\n        return this.get(\"countries\");\n    };\n\n    Chance.prototype.country = function (options) {\n        options = initOptions(options);\n        var country = this.pick(this.countries());\n        return options.full ? country.name : country.abbreviation;\n    };\n\n    Chance.prototype.depth = function (options) {\n        options = initOptions(options, {fixed: 5, min: -10994, max: 0});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.geohash = function (options) {\n        options = initOptions(options, { length: 7 });\n        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n    };\n\n    Chance.prototype.geojson = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n    };\n\n    Chance.prototype.latitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: -90, max: 90});\n        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n    };\n\n    Chance.prototype.longitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: -180, max: 180});\n        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n    };\n\n    Chance.prototype.phone = function (options) {\n        var self = this,\n            numPick,\n            ukNum = function (parts) {\n                var section = [];\n                //fills the section part of the phone number with random numbers.\n                parts.sections.forEach(function(n) {\n                    section.push(self.string({ pool: '0123456789', length: n}));\n                });\n                return parts.area + section.join(' ');\n            };\n        options = initOptions(options, {\n            formatted: true,\n            country: 'us',\n            mobile: false\n        });\n        if (!options.formatted) {\n            options.parens = false;\n        }\n        var phone;\n        switch (options.country) {\n            case 'fr':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        // Valid zone and département codes.\n                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n                        '09' + self.string({ pool: '0123456789', length: 8}),\n                    ]);\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                } else {\n                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                }\n                break;\n            case 'uk':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        //valid area codes of major cities/counties followed by random numbers in required format.\n\n                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n                        { area: '024 7', sections: [3,4] },\n                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },\n                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },\n                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },\n                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },\n                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },\n                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },\n                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },\n                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n                } else {\n                    numPick = this.pick([\n                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n                        { area: '07624 ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n                }\n                break;\n            case 'za':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),\n                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),   \n                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                } else {\n                    numPick = this.pick([\n                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),\n                        '06'  + self.string({ pool: '0123456789', length: 7}),\n                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),\n                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),                     \n                    ]);\n                    phone = options.formatted || numPick;\n                }\n                \n                break;\n\n            case 'us':\n                var areacode = this.areacode(options).toString();\n                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString();\n                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n        }\n        return phone;\n    };\n\n    Chance.prototype.postal = function () {\n        // Postal District\n        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n        // Forward Sortation Area (FSA)\n        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n        // Local Delivery Unut (LDU)\n        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\n        return fsa + \" \" + ldu;\n    };\n\n    Chance.prototype.counties = function (options) {\n        options = initOptions(options, { country: 'uk' });\n        return this.get(\"counties\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.county = function (options) {\n        return this.pick(this.counties(options)).name;\n    };\n\n    Chance.prototype.provinces = function (options) {\n        options = initOptions(options, { country: 'ca' });\n        return this.get(\"provinces\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.province = function (options) {\n        return (options && options.full) ?\n            this.pick(this.provinces(options)).name :\n            this.pick(this.provinces(options)).abbreviation;\n    };\n\n    Chance.prototype.state = function (options) {\n        return (options && options.full) ?\n            this.pick(this.states(options)).name :\n            this.pick(this.states(options)).abbreviation;\n    };\n\n    Chance.prototype.states = function (options) {\n        options = initOptions(options, { country: 'us', us_states_and_dc: true } );\n\n        var states;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                var us_states_and_dc = this.get(\"us_states_and_dc\"),\n                    territories = this.get(\"territories\"),\n                    armed_forces = this.get(\"armed_forces\");\n\n                states = [];\n\n                if (options.us_states_and_dc) {\n                    states = states.concat(us_states_and_dc);\n                }\n                if (options.territories) {\n                    states = states.concat(territories);\n                }\n                if (options.armed_forces) {\n                    states = states.concat(armed_forces);\n                }\n                break;\n            case 'it':\n                states = this.get(\"country_regions\")[options.country.toLowerCase()];\n                break;\n            case 'uk':\n                states = this.get(\"counties\")[options.country.toLowerCase()];\n                break;\n        }\n\n        return states;\n    };\n\n    Chance.prototype.street = function (options) {\n        options = initOptions(options, { country: 'us', syllables: 2 });\n        var     street;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street += ' ';\n                street += options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name;\n                break;\n            case 'it':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street = (options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name) + \" \" + street;\n                break;\n        }\n        return street;\n    };\n\n    Chance.prototype.street_suffix = function (options) {\n        options = initOptions(options, { country: 'us' });\n        return this.pick(this.street_suffixes(options));\n    };\n\n    Chance.prototype.street_suffixes = function (options) {\n        options = initOptions(options, { country: 'us' });\n        // These are the most common suffixes.\n        return this.get(\"street_suffixes\")[options.country.toLowerCase()];\n    };\n\n    // Note: only returning US zip codes, internationalization will be a whole\n    // other beast to tackle at some point.\n    Chance.prototype.zip = function (options) {\n        var zip = this.n(this.natural, 5, {max: 9});\n\n        if (options && options.plusfour === true) {\n            zip.push('-');\n            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n        }\n\n        return zip.join(\"\");\n    };\n\n    // -- End Location --\n\n    // -- Time\n\n    Chance.prototype.ampm = function () {\n        return this.bool() ? 'am' : 'pm';\n    };\n\n    Chance.prototype.date = function (options) {\n        var date_string, date;\n\n        // If interval is specified we ignore preset\n        if(options && (options.min || options.max)) {\n            options = initOptions(options, {\n                american: true,\n                string: false\n            });\n            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\n            date = new Date(this.integer({min: min, max: max}));\n        } else {\n            var m = this.month({raw: true});\n            var daysInMonth = m.days;\n\n            if(options && options.month) {\n                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\n                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;\n            }\n\n            options = initOptions(options, {\n                year: parseInt(this.year(), 10),\n                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n                // for some reason.\n                month: m.numeric - 1,\n                day: this.natural({min: 1, max: daysInMonth}),\n                hour: this.hour({twentyfour: true}),\n                minute: this.minute(),\n                second: this.second(),\n                millisecond: this.millisecond(),\n                american: true,\n                string: false\n            });\n\n            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n        }\n\n        if (options.american) {\n            // Adding 1 to the month is necessary because Date() 0-indexes\n            // months but not day for some odd reason.\n            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n        } else {\n            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n        }\n\n        return options.string ? date_string : date;\n    };\n\n    Chance.prototype.hammertime = function (options) {\n        return this.date(options).getTime();\n    };\n\n    Chance.prototype.hour = function (options) {\n        options = initOptions(options, {\n            min: options && options.twentyfour ? 0 : 1,\n            max: options && options.twentyfour ? 23 : 12\n        });\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\n        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.millisecond = function () {\n        return this.natural({max: 999});\n    };\n\n    Chance.prototype.minute = Chance.prototype.second = function (options) {\n        options = initOptions(options, {min: 0, max: 59});\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.month = function (options) {\n        options = initOptions(options, {min: 1, max: 12});\n\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var month = this.pick(this.months().slice(options.min - 1, options.max));\n        return options.raw ? month : month.name;\n    };\n\n    Chance.prototype.months = function () {\n        return this.get(\"months\");\n    };\n\n    Chance.prototype.second = function () {\n        return this.natural({max: 59});\n    };\n\n    Chance.prototype.timestamp = function () {\n        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n    };\n\n    Chance.prototype.weekday = function (options) {\n        options = initOptions(options, {weekday_only: false});\n        var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        if (!options.weekday_only) {\n            weekdays.push(\"Saturday\");\n            weekdays.push(\"Sunday\");\n        }\n        return this.pickone(weekdays);\n    };\n\n    Chance.prototype.year = function (options) {\n        // Default to current year as min if none specified\n        options = initOptions(options, {min: new Date().getFullYear()});\n\n        // Default to one century after current year as max if none specified\n        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\n        return this.natural(options).toString();\n    };\n\n    // -- End Time\n\n    // -- Finance --\n\n    Chance.prototype.cc = function (options) {\n        options = initOptions(options);\n\n        var type, number, to_generate;\n\n        type = (options.type) ?\n                    this.cc_type({ name: options.type, raw: true }) :\n                    this.cc_type({ raw: true });\n\n        number = type.prefix.split(\"\");\n        to_generate = type.length - type.prefix.length - 1;\n\n        // Generates n - 1 digits\n        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\n        // Generates the last digit according to Luhn algorithm\n        number.push(this.luhn_calculate(number.join(\"\")));\n\n        return number.join(\"\");\n    };\n\n    Chance.prototype.cc_types = function () {\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        return this.get(\"cc_types\");\n    };\n\n    Chance.prototype.cc_type = function (options) {\n        options = initOptions(options);\n        var types = this.cc_types(),\n            type = null;\n\n        if (options.name) {\n            for (var i = 0; i < types.length; i++) {\n                // Accept either name or short_name to specify card type\n                if (types[i].name === options.name || types[i].short_name === options.name) {\n                    type = types[i];\n                    break;\n                }\n            }\n            if (type === null) {\n                throw new RangeError(\"Credit card type '\" + options.name + \"'' is not supported\");\n            }\n        } else {\n            type = this.pick(types);\n        }\n\n        return options.raw ? type : type.name;\n    };\n\n    //return all world currency by ISO 4217\n    Chance.prototype.currency_types = function () {\n        return this.get(\"currency_types\");\n    };\n\n    //return random world currency by ISO 4217\n    Chance.prototype.currency = function () {\n        return this.pick(this.currency_types());\n    };\n\n    //return all timezones availabel\n    Chance.prototype.timezones = function () {\n        return this.get(\"timezones\");\n    };\n\n    //return random timezone\n    Chance.prototype.timezone = function () {\n        return this.pick(this.timezones());\n    };\n\n    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n    Chance.prototype.currency_pair = function (returnAsString) {\n        var currencies = this.unique(this.currency, 2, {\n            comparator: function(arr, val) {\n\n                return arr.reduce(function(acc, item) {\n                    // If a match has been found, short circuit check and just return\n                    return acc || (item.code === val.code);\n                }, false);\n            }\n        });\n\n        if (returnAsString) {\n            return currencies[0].code + '/' + currencies[1].code;\n        } else {\n            return currencies;\n        }\n    };\n\n    Chance.prototype.dollar = function (options) {\n        // By default, a somewhat more sane max for dollar than all available numbers\n        options = initOptions(options, {max : 10000, min : 0});\n\n        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n            cents = dollar.split('.')[1];\n\n        if (cents === undefined) {\n            dollar += '.00';\n        } else if (cents.length < 2) {\n            dollar = dollar + '0';\n        }\n\n        if (dollar < 0) {\n            return '-$' + dollar.replace('-', '');\n        } else {\n            return '$' + dollar;\n        }\n    };\n\n    Chance.prototype.euro = function (options) {\n        return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\n    };\n\n    Chance.prototype.exp = function (options) {\n        options = initOptions(options);\n        var exp = {};\n\n        exp.year = this.exp_year();\n\n        // If the year is this year, need to ensure month is greater than the\n        // current month or this expiration will not be valid\n        if (exp.year === (new Date().getFullYear()).toString()) {\n            exp.month = this.exp_month({future: true});\n        } else {\n            exp.month = this.exp_month();\n        }\n\n        return options.raw ? exp : exp.month + '/' + exp.year;\n    };\n\n    Chance.prototype.exp_month = function (options) {\n        options = initOptions(options);\n        var month, month_int,\n            // Date object months are 0 indexed\n            curMonth = new Date().getMonth() + 1;\n\n        if (options.future && (curMonth !== 12)) {\n            do {\n                month = this.month({raw: true}).numeric;\n                month_int = parseInt(month, 10);\n            } while (month_int <= curMonth);\n        } else {\n            month = this.month({raw: true}).numeric;\n        }\n\n        return month;\n    };\n\n    Chance.prototype.exp_year = function () {\n        var curMonth = new Date().getMonth() + 1,\n            curYear = new Date().getFullYear();\n\n        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});\n    };\n\n    Chance.prototype.vat = function (options) {\n        options = initOptions(options, { country: 'it' });\n        switch (options.country.toLowerCase()) {\n            case 'it':\n                return this.it_vat();\n        }\n    };\n\n    /**\n     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number). \n     * No country-specific formats support (yet)\n     */\n    Chance.prototype.iban = function () {\n        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var alphanum = alpha + '0123456789';\n        var iban = \n            this.string({ length: 2, pool: alpha }) + \n            this.pad(this.integer({ min: 0, max: 99 }), 2) + \n            this.string({ length: 4, pool: alphanum }) + \n            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));\n        return iban;\n    };\n\n    // -- End Finance\n\n    // -- Regional\n\n    Chance.prototype.it_vat = function () {\n        var it_vat = this.natural({min: 1, max: 1800000});\n\n        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);\n        return it_vat + this.luhn_calculate(it_vat);\n    };\n\n    /*\n     * this generator is written following the official algorithm\n     * all data can be passed explicitely or randomized by calling chance.cf() without options\n     * the code does not check that the input data is valid (it goes beyond the scope of the generator)\n     *\n     * @param  [Object] options = { first: first name,\n     *                              last: last name,\n     *                              gender: female|male,\n                                    birthday: JavaScript date object,\n                                    city: string(4), 1 letter + 3 numbers\n                                   }\n     * @return [string] codice fiscale\n     *\n    */\n    Chance.prototype.cf = function (options) {\n        options = options || {};\n        var gender = !!options.gender ? options.gender : this.gender(),\n            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),\n            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),\n            birthday = !!options.birthday ? options.birthday : this.birthday(),\n            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),\n            cf = [],\n            name_generator = function(name, isLast) {\n                var temp,\n                    return_value = [];\n\n                if (name.length < 3) {\n                    return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0,3);\n                }\n                else {\n                    temp = name.toUpperCase().split('').map(function(c){\n                        return (\"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1) ? c : undefined;\n                    }).join('');\n                    if (temp.length > 3) {\n                        if (isLast) {\n                            temp = temp.substr(0,3);\n                        } else {\n                            temp = temp[0] + temp.substr(2,2);\n                        }\n                    }\n                    if (temp.length < 3) {\n                        return_value = temp;\n                        temp = name.toUpperCase().split('').map(function(c){\n                            return (\"AEIOU\".indexOf(c) !== -1) ? c : undefined;\n                        }).join('').substr(0, 3 - return_value.length);\n                    }\n                    return_value = return_value + temp;\n                }\n\n                return return_value;\n            },\n            date_generator = function(birthday, gender, that) {\n                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\n\n                return  birthday.getFullYear().toString().substr(2) +\n                        lettermonths[birthday.getMonth()] +\n                        that.pad(birthday.getDate() + ((gender.toLowerCase() === \"female\") ? 40 : 0), 2);\n            },\n            checkdigit_generator = function(cf) {\n                var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    evens  = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    odds   = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\n                    digit  = 0;\n\n\n                for(var i = 0; i < 15; i++) {\n                    if (i % 2 !== 0) {\n                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                    else {\n                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                }\n                return evens[digit % 26];\n            };\n\n        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\n        cf += checkdigit_generator(cf.toUpperCase(), this);\n\n        return cf.toUpperCase();\n    };\n\n    Chance.prototype.pl_pesel = function () {\n        var number = this.natural({min: 1, max: 9999999999});\n        var arr = this.pad(number, 10).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\n        if(controlNumber !== 0) {\n            controlNumber = 10 - controlNumber;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_nip = function () {\n        var number = this.natural({min: 1, max: 999999999});\n        var arr = this.pad(number, 9).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\n        if(controlNumber === 10) {\n            return this.pl_nip();\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_regon = function () {\n        var number = this.natural({min: 1, max: 99999999});\n        var arr = this.pad(number, 8).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\n        if(controlNumber === 10) {\n            controlNumber = 0;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    // -- End Regional\n\n    // -- Miscellaneous --\n\n    // Dice - For all the board game geeks out there, myself included ;)\n    function diceFn (range) {\n        return function () {\n            return this.natural(range);\n        };\n    }\n    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\n    Chance.prototype.rpg = function (thrown, options) {\n        options = initOptions(options);\n        if (!thrown) {\n            throw new RangeError(\"A type of die roll must be included\");\n        } else {\n            var bits = thrown.toLowerCase().split(\"d\"),\n                rolls = [];\n\n            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n                throw new Error(\"Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n            }\n            for (var i = bits[0]; i > 0; i--) {\n                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n            }\n            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n        }\n    };\n\n    // Guid\n    Chance.prototype.guid = function (options) {\n        options = initOptions(options, { version: 5 });\n\n        var guid_pool = \"abcdef1234567890\",\n            variant_pool = \"ab89\",\n            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n                   // The Version\n                   options.version +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   // The Variant\n                   this.string({ pool: variant_pool, length: 1 }) +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   this.string({ pool: guid_pool, length: 12 });\n        return guid;\n    };\n\n    // Hash\n    Chance.prototype.hash = function (options) {\n        options = initOptions(options, {length : 40, casing: 'lower'});\n        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n        return this.string({pool: pool, length: options.length});\n    };\n\n    Chance.prototype.luhn_check = function (num) {\n        var str = num.toString();\n        var checkDigit = +str.substring(str.length - 1);\n        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n    };\n\n    Chance.prototype.luhn_calculate = function (num) {\n        var digits = num.toString().split(\"\").reverse();\n        var sum = 0;\n        var digit;\n\n        for (var i = 0, l = digits.length; l > i; ++i) {\n            digit = +digits[i];\n            if (i % 2 === 0) {\n                digit *= 2;\n                if (digit > 9) {\n                    digit -= 9;\n                }\n            }\n            sum += digit;\n        }\n        return (sum * 9) % 10;\n    };\n\n    // MD5 Hash\n    Chance.prototype.md5 = function(options) {\n        var opts = { str: '', key: null, raw: false };\n\n        if (!options) {\n            opts.str = this.string();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.str = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if(options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if(!opts.str){\n            throw new Error('A parameter is required to return an md5 hash.');\n        }\n\n        return this.bimd5.md5(opts.str, opts.key, opts.raw);\n    };\n\n    /**\n     * #Description:\n     * =====================================================\n     * Generate random file name with extension\n     *\n     * The argument provide extension type\n     * -> raster\n     * -> vector\n     * -> 3d\n     * -> document\n     *\n     * If nothing is provided the function return random file name with random\n     * extension type of any kind\n     *\n     * The user can validate the file name length range\n     * If nothing provided the generated file name is random\n     *\n     * #Extension Pool :\n     * * Currently the supported extensions are\n     *  -> some of the most popular raster image extensions\n     *  -> some of the most popular vector image extensions\n     *  -> some of the most popular 3d image extensions\n     *  -> some of the most popular document extensions\n     *\n     * #Examples :\n     * =====================================================\n     *\n     * Return random file name with random extension. The file extension\n     * is provided by a predefined collection of extensions. More about the extension\n     * pool can be found in #Extension Pool section\n     *\n     * chance.file()\n     * => dsfsdhjf.xml\n     *\n     * In order to generate a file name with specific length, specify the\n     * length property and integer value. The extension is going to be random\n     *\n     * chance.file({length : 10})\n     * => asrtineqos.pdf\n     *\n     * In order to generate file with extension from some of the predefined groups\n     * of the extension pool just specify the extension pool category in fileType property\n     *\n     * chance.file({fileType : 'raster'})\n     * => dshgssds.psd\n     *\n     * You can provide specific extension for your files\n     * chance.file({extension : 'html'})\n     * => djfsd.html\n     *\n     * Or you could pass custom collection of extensions by array or by object\n     * chance.file({extensions : [...]})\n     * => dhgsdsd.psd\n     *\n     * chance.file({extensions : { key : [...], key : [...]}})\n     * => djsfksdjsd.xml\n     *\n     * @param  [collection] options\n     * @return [string]\n     *\n     */\n    Chance.prototype.file = function(options) {\n\n        var fileOptions = options || {};\n        var poolCollectionKey = \"fileExtension\";\n        var typeRange   = Object.keys(this.get(\"fileExtension\"));//['raster', 'vector', '3d', 'document'];\n        var fileName;\n        var fileExtension;\n\n        // Generate random file name\n        fileName = this.word({length : fileOptions.length});\n\n        // Generate file by specific extension provided by the user\n        if(fileOptions.extension) {\n\n            fileExtension = fileOptions.extension;\n            return (fileName + '.' + fileExtension);\n        }\n\n        // Generate file by specific extension collection\n        if(fileOptions.extensions) {\n\n            if(Array.isArray(fileOptions.extensions)) {\n\n                fileExtension = this.pickone(fileOptions.extensions);\n                return (fileName + '.' + fileExtension);\n            }\n            else if(fileOptions.extensions.constructor === Object) {\n\n                var extensionObjectCollection = fileOptions.extensions;\n                var keys = Object.keys(extensionObjectCollection);\n\n                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new Error(\"Expect collection of type Array or Object to be passed as an argument \");\n        }\n\n        // Generate file extension based on specific file type\n        if(fileOptions.fileType) {\n\n            var fileType = fileOptions.fileType;\n            if(typeRange.indexOf(fileType) !== -1) {\n\n                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new Error(\"Expect file type value to be 'raster', 'vector', '3d' or 'document' \");\n        }\n\n        // Generate random file name if no extension options are passed\n        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\n        return (fileName + '.' + fileExtension);\n    };\n\n    var data = {\n\n        firstNames: {\n            \"male\": {\n                \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\n                \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"]\n            },\n            \"female\": {\n                \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\n                \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Leda\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"]\n            }\n        },\n\n        lastNames: {\n            \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\n            \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"]\n        },\n\n        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json\n        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua & Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Ascension Island\",\"abbreviation\":\"AC\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia & Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canary Islands\",\"abbreviation\":\"IC\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Caribbean Netherlands\",\"abbreviation\":\"BQ\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Ceuta & Melilla\",\"abbreviation\":\"EA\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos (Keeling) Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Côte d'Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Curaçao\",\"abbreviation\":\"CW\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Diego Garcia\",\"abbreviation\":\"DG\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kosovo\",\"abbreviation\":\"XK\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar (Burma)\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Sint Maarten\",\"abbreviation\":\"SX\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia & South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"South Sudan\",\"abbreviation\":\"SS\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"St. Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"St. Helena\",\"abbreviation\":\"SH\"},{\"name\":\"St. Kitts & Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"St. Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"St. Martin\",\"abbreviation\":\"MF\"},{\"name\":\"St. Pierre & Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"St. Vincent & Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard & Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad & Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tristan da Cunha\",\"abbreviation\":\"TA\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks & Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wallis & Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"}],\n\n\t\tcounties: {\n            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\n            \"uk\": [\n                {name: 'Bath and North East Somerset'},\n                {name: 'Aberdeenshire'},\n                {name: 'Anglesey'},\n                {name: 'Angus'},\n                {name: 'Bedford'},\n                {name: 'Blackburn with Darwen'},\n                {name: 'Blackpool'},\n                {name: 'Bournemouth'},\n                {name: 'Bracknell Forest'},\n                {name: 'Brighton & Hove'},\n                {name: 'Bristol'},\n                {name: 'Buckinghamshire'},\n                {name: 'Cambridgeshire'},\n                {name: 'Carmarthenshire'},\n                {name: 'Central Bedfordshire'},\n                {name: 'Ceredigion'},\n                {name: 'Cheshire East'},\n                {name: 'Cheshire West and Chester'},\n                {name: 'Clackmannanshire'},\n                {name: 'Conwy'},\n                {name: 'Cornwall'},\n                {name: 'County Antrim'},\n                {name: 'County Armagh'},\n                {name: 'County Down'},\n                {name: 'County Durham'},\n                {name: 'County Fermanagh'},\n                {name: 'County Londonderry'},\n                {name: 'County Tyrone'},\n                {name: 'Cumbria'},\n                {name: 'Darlington'},\n                {name: 'Denbighshire'},\n                {name: 'Derby'},\n                {name: 'Derbyshire'},\n                {name: 'Devon'},\n                {name: 'Dorset'},\n                {name: 'Dumfries and Galloway'},\n                {name: 'Dundee'},\n                {name: 'East Lothian'},\n                {name: 'East Riding of Yorkshire'},\n                {name: 'East Sussex'},\n                {name: 'Edinburgh?'},\n                {name: 'Essex'},\n                {name: 'Falkirk'},\n                {name: 'Fife'},\n                {name: 'Flintshire'},\n                {name: 'Gloucestershire'},\n                {name: 'Greater London'},\n                {name: 'Greater Manchester'},\n                {name: 'Gwent'},\n                {name: 'Gwynedd'},\n                {name: 'Halton'},\n                {name: 'Hampshire'},\n                {name: 'Hartlepool'},\n                {name: 'Herefordshire'},\n                {name: 'Hertfordshire'},\n                {name: 'Highlands'},\n                {name: 'Hull'},\n                {name: 'Isle of Wight'},\n                {name: 'Isles of Scilly'},\n                {name: 'Kent'},\n                {name: 'Lancashire'},\n                {name: 'Leicester'},\n                {name: 'Leicestershire'},\n                {name: 'Lincolnshire'},\n                {name: 'Lothian'},\n                {name: 'Luton'},\n                {name: 'Medway'},\n                {name: 'Merseyside'},\n                {name: 'Mid Glamorgan'},\n                {name: 'Middlesbrough'},\n                {name: 'Milton Keynes'},\n                {name: 'Monmouthshire'},\n                {name: 'Moray'},\n                {name: 'Norfolk'},\n                {name: 'North East Lincolnshire'},\n                {name: 'North Lincolnshire'},\n                {name: 'North Somerset'},\n                {name: 'North Yorkshire'},\n                {name: 'Northamptonshire'},\n                {name: 'Northumberland'},\n                {name: 'Nottingham'},\n                {name: 'Nottinghamshire'},\n                {name: 'Oxfordshire'},\n                {name: 'Pembrokeshire'},\n                {name: 'Perth and Kinross'},\n                {name: 'Peterborough'},\n                {name: 'Plymouth'},\n                {name: 'Poole'},\n                {name: 'Portsmouth'},\n                {name: 'Powys'},\n                {name: 'Reading'},\n                {name: 'Redcar and Cleveland'},\n                {name: 'Rutland'},\n                {name: 'Scottish Borders'},\n                {name: 'Shropshire'},\n                {name: 'Slough'},\n                {name: 'Somerset'},\n                {name: 'South Glamorgan'},\n                {name: 'South Gloucestershire'},\n                {name: 'South Yorkshire'},\n                {name: 'Southampton'},\n                {name: 'Southend-on-Sea'},\n                {name: 'Staffordshire'},\n                {name: 'Stirlingshire'},\n                {name: 'Stockton-on-Tees'},\n                {name: 'Stoke-on-Trent'},\n                {name: 'Strathclyde'},\n                {name: 'Suffolk'},\n                {name: 'Surrey'},\n                {name: 'Swindon'},\n                {name: 'Telford and Wrekin'},\n                {name: 'Thurrock'},\n                {name: 'Torbay'},\n                {name: 'Tyne and Wear'},\n                {name: 'Warrington'},\n                {name: 'Warwickshire'},\n                {name: 'West Berkshire'},\n                {name: 'West Glamorgan'},\n                {name: 'West Lothian'},\n                {name: 'West Midlands'},\n                {name: 'West Sussex'},\n                {name: 'West Yorkshire'},\n                {name: 'Western Isles'},\n                {name: 'Wiltshire'},\n                {name: 'Windsor and Maidenhead'},\n                {name: 'Wokingham'},\n                {name: 'Worcestershire'},\n                {name: 'Wrexham'},\n                {name: 'York'}]\n\t\t\t\t},\n        provinces: {\n            \"ca\": [\n                {name: 'Alberta', abbreviation: 'AB'},\n                {name: 'British Columbia', abbreviation: 'BC'},\n                {name: 'Manitoba', abbreviation: 'MB'},\n                {name: 'New Brunswick', abbreviation: 'NB'},\n                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n                {name: 'Nova Scotia', abbreviation: 'NS'},\n                {name: 'Ontario', abbreviation: 'ON'},\n                {name: 'Prince Edward Island', abbreviation: 'PE'},\n                {name: 'Quebec', abbreviation: 'QC'},\n                {name: 'Saskatchewan', abbreviation: 'SK'},\n\n                // The case could be made that the following are not actually provinces\n                // since they are technically considered \"territories\" however they all\n                // look the same on an envelope!\n                {name: 'Northwest Territories', abbreviation: 'NT'},\n                {name: 'Nunavut', abbreviation: 'NU'},\n                {name: 'Yukon', abbreviation: 'YT'}\n            ],\n            \"it\": [\n                { name: \"Agrigento\", abbreviation: \"AG\", code: 84 },\n                { name: \"Alessandria\", abbreviation: \"AL\", code: 6 },\n                { name: \"Ancona\", abbreviation: \"AN\", code: 42 },\n                { name: \"Aosta\", abbreviation: \"AO\", code: 7 },\n                { name: \"L'Aquila\", abbreviation: \"AQ\", code: 66 },\n                { name: \"Arezzo\", abbreviation: \"AR\", code: 51 },\n                { name: \"Ascoli-Piceno\", abbreviation: \"AP\", code: 44 },\n                { name: \"Asti\", abbreviation: \"AT\", code: 5 },\n                { name: \"Avellino\", abbreviation: \"AV\", code: 64 },\n                { name: \"Bari\", abbreviation: \"BA\", code: 72 },\n                { name: \"Barletta-Andria-Trani\", abbreviation: \"BT\", code: 72 },\n                { name: \"Belluno\", abbreviation: \"BL\", code: 25 },\n                { name: \"Benevento\", abbreviation: \"BN\", code: 62 },\n                { name: \"Bergamo\", abbreviation: \"BG\", code: 16 },\n                { name: \"Biella\", abbreviation: \"BI\", code: 96 },\n                { name: \"Bologna\", abbreviation: \"BO\", code: 37 },\n                { name: \"Bolzano\", abbreviation: \"BZ\", code: 21 },\n                { name: \"Brescia\", abbreviation: \"BS\", code: 17 },\n                { name: \"Brindisi\", abbreviation: \"BR\", code: 74 },\n                { name: \"Cagliari\", abbreviation: \"CA\", code: 92 },\n                { name: \"Caltanissetta\", abbreviation: \"CL\", code: 85 },\n                { name: \"Campobasso\", abbreviation: \"CB\", code: 70 },\n                { name: \"Carbonia Iglesias\", abbreviation: \"CI\", code: 70 },\n                { name: \"Caserta\", abbreviation: \"CE\", code: 61 },\n                { name: \"Catania\", abbreviation: \"CT\", code: 87 },\n                { name: \"Catanzaro\", abbreviation: \"CZ\", code: 79 },\n                { name: \"Chieti\", abbreviation: \"CH\", code: 69 },\n                { name: \"Como\", abbreviation: \"CO\", code: 13 },\n                { name: \"Cosenza\", abbreviation: \"CS\", code: 78 },\n                { name: \"Cremona\", abbreviation: \"CR\", code: 19 },\n                { name: \"Crotone\", abbreviation: \"KR\", code: 101 },\n                { name: \"Cuneo\", abbreviation: \"CN\", code: 4 },\n                { name: \"Enna\", abbreviation: \"EN\", code: 86 },\n                { name: \"Fermo\", abbreviation: \"FM\", code: 86 },\n                { name: \"Ferrara\", abbreviation: \"FE\", code: 38 },\n                { name: \"Firenze\", abbreviation: \"FI\", code: 48 },\n                { name: \"Foggia\", abbreviation: \"FG\", code: 71 },\n                { name: \"Forli-Cesena\", abbreviation: \"FC\", code: 71 },\n                { name: \"Frosinone\", abbreviation: \"FR\", code: 60 },\n                { name: \"Genova\", abbreviation: \"GE\", code: 10 },\n                { name: \"Gorizia\", abbreviation: \"GO\", code: 31 },\n                { name: \"Grosseto\", abbreviation: \"GR\", code: 53 },\n                { name: \"Imperia\", abbreviation: \"IM\", code: 8 },\n                { name: \"Isernia\", abbreviation: \"IS\", code: 94 },\n                { name: \"La-Spezia\", abbreviation: \"SP\", code: 66 },\n                { name: \"Latina\", abbreviation: \"LT\", code: 59 },\n                { name: \"Lecce\", abbreviation: \"LE\", code: 75 },\n                { name: \"Lecco\", abbreviation: \"LC\", code: 97 },\n                { name: \"Livorno\", abbreviation: \"LI\", code: 49 },\n                { name: \"Lodi\", abbreviation: \"LO\", code: 98 },\n                { name: \"Lucca\", abbreviation: \"LU\", code: 46 },\n                { name: \"Macerata\", abbreviation: \"MC\", code: 43 },\n                { name: \"Mantova\", abbreviation: \"MN\", code: 20 },\n                { name: \"Massa-Carrara\", abbreviation: \"MS\", code: 45 },\n                { name: \"Matera\", abbreviation: \"MT\", code: 77 },\n                { name: \"Medio Campidano\", abbreviation: \"VS\", code: 77 },\n                { name: \"Messina\", abbreviation: \"ME\", code: 83 },\n                { name: \"Milano\", abbreviation: \"MI\", code: 15 },\n                { name: \"Modena\", abbreviation: \"MO\", code: 36 },\n                { name: \"Monza-Brianza\", abbreviation: \"MB\", code: 36 },\n                { name: \"Napoli\", abbreviation: \"NA\", code: 63 },\n                { name: \"Novara\", abbreviation: \"NO\", code: 3 },\n                { name: \"Nuoro\", abbreviation: \"NU\", code: 91 },\n                { name: \"Ogliastra\", abbreviation: \"OG\", code: 91 },\n                { name: \"Olbia Tempio\", abbreviation: \"OT\", code: 91 },\n                { name: \"Oristano\", abbreviation: \"OR\", code: 95 },\n                { name: \"Padova\", abbreviation: \"PD\", code: 28 },\n                { name: \"Palermo\", abbreviation: \"PA\", code: 82 },\n                { name: \"Parma\", abbreviation: \"PR\", code: 34 },\n                { name: \"Pavia\", abbreviation: \"PV\", code: 18 },\n                { name: \"Perugia\", abbreviation: \"PG\", code: 54 },\n                { name: \"Pesaro-Urbino\", abbreviation: \"PU\", code: 41 },\n                { name: \"Pescara\", abbreviation: \"PE\", code: 68 },\n                { name: \"Piacenza\", abbreviation: \"PC\", code: 33 },\n                { name: \"Pisa\", abbreviation: \"PI\", code: 50 },\n                { name: \"Pistoia\", abbreviation: \"PT\", code: 47 },\n                { name: \"Pordenone\", abbreviation: \"PN\", code: 93 },\n                { name: \"Potenza\", abbreviation: \"PZ\", code: 76 },\n                { name: \"Prato\", abbreviation: \"PO\", code: 100 },\n                { name: \"Ragusa\", abbreviation: \"RG\", code: 88 },\n                { name: \"Ravenna\", abbreviation: \"RA\", code: 39 },\n                { name: \"Reggio-Calabria\", abbreviation: \"RC\", code: 35 },\n                { name: \"Reggio-Emilia\", abbreviation: \"RE\", code: 35 },\n                { name: \"Rieti\", abbreviation: \"RI\", code: 57 },\n                { name: \"Rimini\", abbreviation: \"RN\", code: 99 },\n                { name: \"Roma\", abbreviation: \"Roma\", code: 58 },\n                { name: \"Rovigo\", abbreviation: \"RO\", code: 29 },\n                { name: \"Salerno\", abbreviation: \"SA\", code: 65 },\n                { name: \"Sassari\", abbreviation: \"SS\", code: 90 },\n                { name: \"Savona\", abbreviation: \"SV\", code: 9 },\n                { name: \"Siena\", abbreviation: \"SI\", code: 52 },\n                { name: \"Siracusa\", abbreviation: \"SR\", code: 89 },\n                { name: \"Sondrio\", abbreviation: \"SO\", code: 14 },\n                { name: \"Taranto\", abbreviation: \"TA\", code: 73 },\n                { name: \"Teramo\", abbreviation: \"TE\", code: 67 },\n                { name: \"Terni\", abbreviation: \"TR\", code: 55 },\n                { name: \"Torino\", abbreviation: \"TO\", code: 1 },\n                { name: \"Trapani\", abbreviation: \"TP\", code: 81 },\n                { name: \"Trento\", abbreviation: \"TN\", code: 22 },\n                { name: \"Treviso\", abbreviation: \"TV\", code: 26 },\n                { name: \"Trieste\", abbreviation: \"TS\", code: 32 },\n                { name: \"Udine\", abbreviation: \"UD\", code: 30 },\n                { name: \"Varese\", abbreviation: \"VA\", code: 12 },\n                { name: \"Venezia\", abbreviation: \"VE\", code: 27 },\n                { name: \"Verbania\", abbreviation: \"VB\", code: 27 },\n                { name: \"Vercelli\", abbreviation: \"VC\", code: 2 },\n                { name: \"Verona\", abbreviation: \"VR\", code: 23 },\n                { name: \"Vibo-Valentia\", abbreviation: \"VV\", code: 102 },\n                { name: \"Vicenza\", abbreviation: \"VI\", code: 24 },\n                { name: \"Viterbo\", abbreviation: \"VT\", code: 56 }\n            ]\n        },\n\n            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\n        nationalities: [\n           {name: 'Afghan'},\n           {name: 'Albanian'},\n           {name: 'Algerian'},\n           {name: 'American'},\n           {name: 'Andorran'},\n           {name: 'Angolan'},\n           {name: 'Antiguans'},\n           {name: 'Argentinean'},\n           {name: 'Armenian'},\n           {name: 'Australian'},\n           {name: 'Austrian'},\n           {name: 'Azerbaijani'},\n           {name: 'Bahami'},\n           {name: 'Bahraini'},\n           {name: 'Bangladeshi'},\n           {name: 'Barbadian'},\n           {name: 'Barbudans'},\n           {name: 'Batswana'},\n           {name: 'Belarusian'},\n           {name: 'Belgian'},\n           {name: 'Belizean'},\n           {name: 'Beninese'},\n           {name: 'Bhutanese'},\n           {name: 'Bolivian'},\n           {name: 'Bosnian'},\n           {name: 'Brazilian'},\n           {name: 'British'},\n           {name: 'Bruneian'},\n           {name: 'Bulgarian'},\n           {name: 'Burkinabe'},\n           {name: 'Burmese'},\n           {name: 'Burundian'},\n           {name: 'Cambodian'},\n           {name: 'Cameroonian'},\n           {name: 'Canadian'},\n           {name: 'Cape Verdean'},\n           {name: 'Central African'},\n           {name: 'Chadian'},\n           {name: 'Chilean'},\n           {name: 'Chinese'},\n           {name: 'Colombian'},\n           {name: 'Comoran'},\n           {name: 'Congolese'},\n           {name: 'Costa Rican'},\n           {name: 'Croatian'},\n           {name: 'Cuban'},\n           {name: 'Cypriot'},\n           {name: 'Czech'},\n           {name: 'Danish'},\n           {name: 'Djibouti'},\n           {name: 'Dominican'},\n           {name: 'Dutch'},\n           {name: 'East Timorese'},\n           {name: 'Ecuadorean'},\n           {name: 'Egyptian'},\n           {name: 'Emirian'},\n           {name: 'Equatorial Guinean'},\n           {name: 'Eritrean'},\n           {name: 'Estonian'},\n           {name: 'Ethiopian'},\n           {name: 'Fijian'},\n           {name: 'Filipino'},\n           {name: 'Finnish'},\n           {name: 'French'},\n           {name: 'Gabonese'},\n           {name: 'Gambian'},\n           {name: 'Georgian'},\n           {name: 'German'},\n           {name: 'Ghanaian'},\n           {name: 'Greek'},\n           {name: 'Grenadian'},\n           {name: 'Guatemalan'},\n           {name: 'Guinea-Bissauan'},\n           {name: 'Guinean'},\n           {name: 'Guyanese'},\n           {name: 'Haitian'},\n           {name: 'Herzegovinian'},\n           {name: 'Honduran'},\n           {name: 'Hungarian'},\n           {name: 'I-Kiribati'},\n           {name: 'Icelander'},\n           {name: 'Indian'},\n           {name: 'Indonesian'},\n           {name: 'Iranian'},\n           {name: 'Iraqi'},\n           {name: 'Irish'},\n           {name: 'Israeli'},\n           {name: 'Italian'},\n           {name: 'Ivorian'},\n           {name: 'Jamaican'},\n           {name: 'Japanese'},\n           {name: 'Jordanian'},\n           {name: 'Kazakhstani'},\n           {name: 'Kenyan'},\n           {name: 'Kittian and Nevisian'},\n           {name: 'Kuwaiti'},\n           {name: 'Kyrgyz'},\n           {name: 'Laotian'},\n           {name: 'Latvian'},\n           {name: 'Lebanese'},\n           {name: 'Liberian'},\n           {name: 'Libyan'},\n           {name: 'Liechtensteiner'},\n           {name: 'Lithuanian'},\n           {name: 'Luxembourger'},\n           {name: 'Macedonian'},\n           {name: 'Malagasy'},\n           {name: 'Malawian'},\n           {name: 'Malaysian'},\n           {name: 'Maldivan'},\n           {name: 'Malian'},\n           {name: 'Maltese'},\n           {name: 'Marshallese'},\n           {name: 'Mauritanian'},\n           {name: 'Mauritian'},\n           {name: 'Mexican'},\n           {name: 'Micronesian'},\n           {name: 'Moldovan'},\n           {name: 'Monacan'},\n           {name: 'Mongolian'},\n           {name: 'Moroccan'},\n           {name: 'Mosotho'},\n           {name: 'Motswana'},\n           {name: 'Mozambican'},\n           {name: 'Namibian'},\n           {name: 'Nauruan'},\n           {name: 'Nepalese'},\n           {name: 'New Zealander'},\n           {name: 'Nicaraguan'},\n           {name: 'Nigerian'},\n           {name: 'Nigerien'},\n           {name: 'North Korean'},\n           {name: 'Northern Irish'},\n           {name: 'Norwegian'},\n           {name: 'Omani'},\n           {name: 'Pakistani'},\n           {name: 'Palauan'},\n           {name: 'Panamanian'},\n           {name: 'Papua New Guinean'},\n           {name: 'Paraguayan'},\n           {name: 'Peruvian'},\n           {name: 'Polish'},\n           {name: 'Portuguese'},\n           {name: 'Qatari'},\n           {name: 'Romani'},\n           {name: 'Russian'},\n           {name: 'Rwandan'},\n           {name: 'Saint Lucian'},\n           {name: 'Salvadoran'},\n           {name: 'Samoan'},\n           {name: 'San Marinese'},\n           {name: 'Sao Tomean'},\n           {name: 'Saudi'},\n           {name: 'Scottish'},\n           {name: 'Senegalese'},\n           {name: 'Serbian'},\n           {name: 'Seychellois'},\n           {name: 'Sierra Leonean'},\n           {name: 'Singaporean'},\n           {name: 'Slovakian'},\n           {name: 'Slovenian'},\n           {name: 'Solomon Islander'},\n           {name: 'Somali'},\n           {name: 'South African'},\n           {name: 'South Korean'},\n           {name: 'Spanish'},\n           {name: 'Sri Lankan'},\n           {name: 'Sudanese'},\n           {name: 'Surinamer'},\n           {name: 'Swazi'},\n           {name: 'Swedish'},\n           {name: 'Swiss'},\n           {name: 'Syrian'},\n           {name: 'Taiwanese'},\n           {name: 'Tajik'},\n           {name: 'Tanzanian'},\n           {name: 'Thai'},\n           {name: 'Togolese'},\n           {name: 'Tongan'},\n           {name: 'Trinidadian or Tobagonian'},\n           {name: 'Tunisian'},\n           {name: 'Turkish'},\n           {name: 'Tuvaluan'},\n           {name: 'Ugandan'},\n           {name: 'Ukrainian'},\n           {name: 'Uruguaya'},\n           {name: 'Uzbekistani'},\n           {name: 'Venezuela'},\n           {name: 'Vietnamese'},\n           {name: 'Wels'},\n           {name: 'Yemenit'},\n           {name: 'Zambia'},\n           {name: 'Zimbabwe'},\n        ],\n\n        us_states_and_dc: [\n            {name: 'Alabama', abbreviation: 'AL'},\n            {name: 'Alaska', abbreviation: 'AK'},\n            {name: 'Arizona', abbreviation: 'AZ'},\n            {name: 'Arkansas', abbreviation: 'AR'},\n            {name: 'California', abbreviation: 'CA'},\n            {name: 'Colorado', abbreviation: 'CO'},\n            {name: 'Connecticut', abbreviation: 'CT'},\n            {name: 'Delaware', abbreviation: 'DE'},\n            {name: 'District of Columbia', abbreviation: 'DC'},\n            {name: 'Florida', abbreviation: 'FL'},\n            {name: 'Georgia', abbreviation: 'GA'},\n            {name: 'Hawaii', abbreviation: 'HI'},\n            {name: 'Idaho', abbreviation: 'ID'},\n            {name: 'Illinois', abbreviation: 'IL'},\n            {name: 'Indiana', abbreviation: 'IN'},\n            {name: 'Iowa', abbreviation: 'IA'},\n            {name: 'Kansas', abbreviation: 'KS'},\n            {name: 'Kentucky', abbreviation: 'KY'},\n            {name: 'Louisiana', abbreviation: 'LA'},\n            {name: 'Maine', abbreviation: 'ME'},\n            {name: 'Maryland', abbreviation: 'MD'},\n            {name: 'Massachusetts', abbreviation: 'MA'},\n            {name: 'Michigan', abbreviation: 'MI'},\n            {name: 'Minnesota', abbreviation: 'MN'},\n            {name: 'Mississippi', abbreviation: 'MS'},\n            {name: 'Missouri', abbreviation: 'MO'},\n            {name: 'Montana', abbreviation: 'MT'},\n            {name: 'Nebraska', abbreviation: 'NE'},\n            {name: 'Nevada', abbreviation: 'NV'},\n            {name: 'New Hampshire', abbreviation: 'NH'},\n            {name: 'New Jersey', abbreviation: 'NJ'},\n            {name: 'New Mexico', abbreviation: 'NM'},\n            {name: 'New York', abbreviation: 'NY'},\n            {name: 'North Carolina', abbreviation: 'NC'},\n            {name: 'North Dakota', abbreviation: 'ND'},\n            {name: 'Ohio', abbreviation: 'OH'},\n            {name: 'Oklahoma', abbreviation: 'OK'},\n            {name: 'Oregon', abbreviation: 'OR'},\n            {name: 'Pennsylvania', abbreviation: 'PA'},\n            {name: 'Rhode Island', abbreviation: 'RI'},\n            {name: 'South Carolina', abbreviation: 'SC'},\n            {name: 'South Dakota', abbreviation: 'SD'},\n            {name: 'Tennessee', abbreviation: 'TN'},\n            {name: 'Texas', abbreviation: 'TX'},\n            {name: 'Utah', abbreviation: 'UT'},\n            {name: 'Vermont', abbreviation: 'VT'},\n            {name: 'Virginia', abbreviation: 'VA'},\n            {name: 'Washington', abbreviation: 'WA'},\n            {name: 'West Virginia', abbreviation: 'WV'},\n            {name: 'Wisconsin', abbreviation: 'WI'},\n            {name: 'Wyoming', abbreviation: 'WY'}\n        ],\n\n        territories: [\n            {name: 'American Samoa', abbreviation: 'AS'},\n            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n            {name: 'Guam', abbreviation: 'GU'},\n            {name: 'Marshall Islands', abbreviation: 'MH'},\n            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n            {name: 'Puerto Rico', abbreviation: 'PR'},\n            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n        ],\n\n        armed_forces: [\n            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n        ],\n\n        country_regions: {\n            it: [\n                { name: \"Valle d'Aosta\", abbreviation: \"VDA\" },\n                { name: \"Piemonte\", abbreviation: \"PIE\" },\n                { name: \"Lombardia\", abbreviation: \"LOM\" },\n                { name: \"Veneto\", abbreviation: \"VEN\" },\n                { name: \"Trentino Alto Adige\", abbreviation: \"TAA\" },\n                { name: \"Friuli Venezia Giulia\", abbreviation: \"FVG\" },\n                { name: \"Liguria\", abbreviation: \"LIG\" },\n                { name: \"Emilia Romagna\", abbreviation: \"EMR\" },\n                { name: \"Toscana\", abbreviation: \"TOS\" },\n                { name: \"Umbria\", abbreviation: \"UMB\" },\n                { name: \"Marche\", abbreviation: \"MAR\" },\n                { name: \"Abruzzo\", abbreviation: \"ABR\" },\n                { name: \"Lazio\", abbreviation: \"LAZ\" },\n                { name: \"Campania\", abbreviation: \"CAM\" },\n                { name: \"Puglia\", abbreviation: \"PUG\" },\n                { name: \"Basilicata\", abbreviation: \"BAS\" },\n                { name: \"Molise\", abbreviation: \"MOL\" },\n                { name: \"Calabria\", abbreviation: \"CAL\" },\n                { name: \"Sicilia\", abbreviation: \"SIC\" },\n                { name: \"Sardegna\", abbreviation: \"SAR\" }\n            ]\n        },\n\n        street_suffixes: {\n            'us': [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Boulevard', abbreviation: 'Blvd'},\n                {name: 'Center', abbreviation: 'Ctr'},\n                {name: 'Circle', abbreviation: 'Cir'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Extension', abbreviation: 'Ext'},\n                {name: 'Glen', abbreviation: 'Gln'},\n                {name: 'Grove', abbreviation: 'Grv'},\n                {name: 'Heights', abbreviation: 'Hts'},\n                {name: 'Highway', abbreviation: 'Hwy'},\n                {name: 'Junction', abbreviation: 'Jct'},\n                {name: 'Key', abbreviation: 'Key'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Loop', abbreviation: 'Loop'},\n                {name: 'Manor', abbreviation: 'Mnr'},\n                {name: 'Mill', abbreviation: 'Mill'},\n                {name: 'Park', abbreviation: 'Park'},\n                {name: 'Parkway', abbreviation: 'Pkwy'},\n                {name: 'Pass', abbreviation: 'Pass'},\n                {name: 'Path', abbreviation: 'Path'},\n                {name: 'Pike', abbreviation: 'Pike'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Plaza', abbreviation: 'Plz'},\n                {name: 'Point', abbreviation: 'Pt'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'River', abbreviation: 'Riv'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Trail', abbreviation: 'Trl'},\n                {name: 'Turnpike', abbreviation: 'Tpke'},\n                {name: 'View', abbreviation: 'Vw'},\n                {name: 'Way', abbreviation: 'Way'}\n            ],\n            'it': [\n                { name: 'Accesso', abbreviation: 'Acc.' },\n                { name: 'Alzaia', abbreviation: 'Alz.' },\n                { name: 'Arco', abbreviation: 'Arco' },\n                { name: 'Archivolto', abbreviation: 'Acv.' },\n                { name: 'Arena', abbreviation: 'Arena' },\n                { name: 'Argine', abbreviation: 'Argine' },\n                { name: 'Bacino', abbreviation: 'Bacino' },\n                { name: 'Banchi', abbreviation: 'Banchi' },\n                { name: 'Banchina', abbreviation: 'Ban.' },\n                { name: 'Bastioni', abbreviation: 'Bas.' },\n                { name: 'Belvedere', abbreviation: 'Belv.' },\n                { name: 'Borgata', abbreviation: 'B.ta' },\n                { name: 'Borgo', abbreviation: 'B.go' },\n                { name: 'Calata', abbreviation: 'Cal.' },\n                { name: 'Calle', abbreviation: 'Calle' },\n                { name: 'Campiello', abbreviation: 'Cam.' },\n                { name: 'Campo', abbreviation: 'Cam.' },\n                { name: 'Canale', abbreviation: 'Can.' },\n                { name: 'Carraia', abbreviation: 'Carr.' },\n                { name: 'Cascina', abbreviation: 'Cascina' },\n                { name: 'Case sparse', abbreviation: 'c.s.' },\n                { name: 'Cavalcavia', abbreviation: 'Cv.' },\n                { name: 'Circonvallazione', abbreviation: 'Cv.' },\n                { name: 'Complanare', abbreviation: 'C.re' },\n                { name: 'Contrada', abbreviation: 'C.da' },\n                { name: 'Corso', abbreviation: 'C.so' },\n                { name: 'Corte', abbreviation: 'C.te' },\n                { name: 'Cortile', abbreviation: 'C.le' },\n                { name: 'Diramazione', abbreviation: 'Dir.' },\n                { name: 'Fondaco', abbreviation: 'F.co' },\n                { name: 'Fondamenta', abbreviation: 'F.ta' },\n                { name: 'Fondo', abbreviation: 'F.do' },\n                { name: 'Frazione', abbreviation: 'Fr.' },\n                { name: 'Isola', abbreviation: 'Is.' },\n                { name: 'Largo', abbreviation: 'L.go' },\n                { name: 'Litoranea', abbreviation: 'Lit.' },\n                { name: 'Lungolago', abbreviation: 'L.go lago' },\n                { name: 'Lungo Po', abbreviation: 'l.go Po' },\n                { name: 'Molo', abbreviation: 'Molo' },\n                { name: 'Mura', abbreviation: 'Mura' },\n                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },\n                { name: 'Passeggiata', abbreviation: 'Pass.' },\n                { name: 'Piazza', abbreviation: 'P.zza' },\n                { name: 'Piazzale', abbreviation: 'P.le' },\n                { name: 'Ponte', abbreviation: 'P.te' },\n                { name: 'Portico', abbreviation: 'P.co' },\n                { name: 'Rampa', abbreviation: 'Rampa' },\n                { name: 'Regione', abbreviation: 'Reg.' },\n                { name: 'Rione', abbreviation: 'R.ne' },\n                { name: 'Rio', abbreviation: 'Rio' },\n                { name: 'Ripa', abbreviation: 'Ripa' },\n                { name: 'Riva', abbreviation: 'Riva' },\n                { name: 'Rondò', abbreviation: 'Rondò' },\n                { name: 'Rotonda', abbreviation: 'Rot.' },\n                { name: 'Sagrato', abbreviation: 'Sagr.' },\n                { name: 'Salita', abbreviation: 'Sal.' },\n                { name: 'Scalinata', abbreviation: 'Scal.' },\n                { name: 'Scalone', abbreviation: 'Scal.' },\n                { name: 'Slargo', abbreviation: 'Sl.' },\n                { name: 'Sottoportico', abbreviation: 'Sott.' },\n                { name: 'Strada', abbreviation: 'Str.' },\n                { name: 'Stradale', abbreviation: 'Str.le' },\n                { name: 'Strettoia', abbreviation: 'Strett.' },\n                { name: 'Traversa', abbreviation: 'Trav.' },\n                { name: 'Via', abbreviation: 'V.' },\n                { name: 'Viale', abbreviation: 'V.le' },\n                { name: 'Vicinale', abbreviation: 'Vic.le' },\n                { name: 'Vicolo', abbreviation: 'Vic.' }\n            ],\n            'uk' : [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Close', abbreviation: 'Cl'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Crescent', abbreviation: 'Cr'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Garden', abbreviation: 'Gdn'},\n                {name: 'Gardens', abbreviation: 'Gdns'},\n                {name: 'Green', abbreviation: 'Gn'},\n                {name: 'Grove', abbreviation: 'Gr'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Mount', abbreviation: 'Mt'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Park', abbreviation: 'Pk'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Valley', abbreviation: 'Val'}\n            ]\n        },\n\n        months: [\n            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n            // Not messing with leap years...\n            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n        ],\n\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        cc_types: [\n            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n        ],\n\n        //return all world currency by ISO 4217\n        currency_types: [\n            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n            {'code' : 'ALL', 'name' : 'Albania Lek'},\n            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n            {'code' : 'BRL', 'name' : 'Brazil Real'},\n            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n            {'code' : 'CLP', 'name' : 'Chile Peso'},\n            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n            {'code' : 'COP', 'name' : 'Colombia Peso'},\n            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n            {'code' : 'INR', 'name' : 'India Rupee'},\n            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n            {'code' : 'IRR', 'name' : 'Iran Rial'},\n            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n            {'code' : 'JPY', 'name' : 'Japan Yen'},\n            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n            {'code' : 'LAK', 'name' : 'Laos Kip'},\n            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n            {'code' : 'NOK', 'name' : 'Norway Krone'},\n            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n            {'code' : 'OMR', 'name' : 'Oman Rial'},\n            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n            {'code' : 'RON', 'name' : 'Romania New Leu'},\n            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n            {'code' : 'SYP', 'name' : 'Syria Pound'},\n            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n            {'code' : 'THB', 'name' : 'Thailand Baht'},\n            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n            {'code' : 'USD', 'name' : 'United States Dollar'},\n            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n            {'code' : 'WST', 'name' : 'Samoa Tala'},\n            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n            {'code' : 'YER', 'name' : 'Yemen Rial'},\n            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n        ],\n\n        // return the names of all valide colors\n        colorNames : [  \"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\",\n            \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\",\n            \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\",\n            \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\",\n            \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\",\n            \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\",\n            \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\",\n            \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\",\n            \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"\n        ],\n\n        fileExtension : {\n            \"raster\"    : [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\n            \"vector\"    : [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\n            \"3d\"        : [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\n            \"document\"  : [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\n        },\n\n        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\n        timezones: [\n                  {\n                    \"name\": \"Dateline Standard Time\",\n                    \"abbr\": \"DST\",\n                    \"offset\": -12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-12:00) International Date Line West\",\n                    \"utc\": [\n                      \"Etc/GMT+12\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-11\",\n                    \"abbr\": \"U\",\n                    \"offset\": -11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n                    \"utc\": [\n                      \"Etc/GMT+11\",\n                      \"Pacific/Midway\",\n                      \"Pacific/Niue\",\n                      \"Pacific/Pago_Pago\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Hawaiian Standard Time\",\n                    \"abbr\": \"HST\",\n                    \"offset\": -10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-10:00) Hawaii\",\n                    \"utc\": [\n                      \"Etc/GMT+10\",\n                      \"Pacific/Honolulu\",\n                      \"Pacific/Johnston\",\n                      \"Pacific/Rarotonga\",\n                      \"Pacific/Tahiti\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Alaskan Standard Time\",\n                    \"abbr\": \"AKDT\",\n                    \"offset\": -8,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-09:00) Alaska\",\n                    \"utc\": [\n                      \"America/Anchorage\",\n                      \"America/Juneau\",\n                      \"America/Nome\",\n                      \"America/Sitka\",\n                      \"America/Yakutat\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time (Mexico)\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-08:00) Baja California\",\n                    \"utc\": [\n                      \"America/Santa_Isabel\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\",\n                      \"PST8PDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Mountain Standard Time\",\n                    \"abbr\": \"UMST\",\n                    \"offset\": -7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-07:00) Arizona\",\n                    \"utc\": [\n                      \"America/Creston\",\n                      \"America/Dawson_Creek\",\n                      \"America/Hermosillo\",\n                      \"America/Phoenix\",\n                      \"Etc/GMT+7\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time (Mexico)\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n                    \"utc\": [\n                      \"America/Chihuahua\",\n                      \"America/Mazatlan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Boise\",\n                      \"America/Cambridge_Bay\",\n                      \"America/Denver\",\n                      \"America/Edmonton\",\n                      \"America/Inuvik\",\n                      \"America/Ojinaga\",\n                      \"America/Yellowknife\",\n                      \"MST7MDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central America Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Central America\",\n                    \"utc\": [\n                      \"America/Belize\",\n                      \"America/Costa_Rica\",\n                      \"America/El_Salvador\",\n                      \"America/Guatemala\",\n                      \"America/Managua\",\n                      \"America/Tegucigalpa\",\n                      \"Etc/GMT+6\",\n                      \"Pacific/Galapagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Chicago\",\n                      \"America/Indiana/Knox\",\n                      \"America/Indiana/Tell_City\",\n                      \"America/Matamoros\",\n                      \"America/Menominee\",\n                      \"America/North_Dakota/Beulah\",\n                      \"America/North_Dakota/Center\",\n                      \"America/North_Dakota/New_Salem\",\n                      \"America/Rainy_River\",\n                      \"America/Rankin_Inlet\",\n                      \"America/Resolute\",\n                      \"America/Winnipeg\",\n                      \"CST6CDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time (Mexico)\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n                    \"utc\": [\n                      \"America/Bahia_Banderas\",\n                      \"America/Cancun\",\n                      \"America/Merida\",\n                      \"America/Mexico_City\",\n                      \"America/Monterrey\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Canada Central Standard Time\",\n                    \"abbr\": \"CCST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Saskatchewan\",\n                    \"utc\": [\n                      \"America/Regina\",\n                      \"America/Swift_Current\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Pacific Standard Time\",\n                    \"abbr\": \"SPST\",\n                    \"offset\": -5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n                    \"utc\": [\n                      \"America/Bogota\",\n                      \"America/Cayman\",\n                      \"America/Coral_Harbour\",\n                      \"America/Eirunepe\",\n                      \"America/Guayaquil\",\n                      \"America/Jamaica\",\n                      \"America/Lima\",\n                      \"America/Panama\",\n                      \"America/Rio_Branco\",\n                      \"Etc/GMT+5\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Eastern Standard Time\",\n                    \"abbr\": \"EDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Detroit\",\n                      \"America/Havana\",\n                      \"America/Indiana/Petersburg\",\n                      \"America/Indiana/Vincennes\",\n                      \"America/Indiana/Winamac\",\n                      \"America/Iqaluit\",\n                      \"America/Kentucky/Monticello\",\n                      \"America/Louisville\",\n                      \"America/Montreal\",\n                      \"America/Nassau\",\n                      \"America/New_York\",\n                      \"America/Nipigon\",\n                      \"America/Pangnirtung\",\n                      \"America/Port-au-Prince\",\n                      \"America/Thunder_Bay\",\n                      \"America/Toronto\",\n                      \"EST5EDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Eastern Standard Time\",\n                    \"abbr\": \"UEDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Indiana (East)\",\n                    \"utc\": [\n                      \"America/Indiana/Marengo\",\n                      \"America/Indiana/Vevay\",\n                      \"America/Indianapolis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Venezuela Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": -4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:30) Caracas\",\n                    \"utc\": [\n                      \"America/Caracas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Paraguay Standard Time\",\n                    \"abbr\": \"PST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Asuncion\",\n                    \"utc\": [\n                      \"America/Asuncion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Atlantic Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n                    \"utc\": [\n                      \"America/Glace_Bay\",\n                      \"America/Goose_Bay\",\n                      \"America/Halifax\",\n                      \"America/Moncton\",\n                      \"America/Thule\",\n                      \"Atlantic/Bermuda\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Brazilian Standard Time\",\n                    \"abbr\": \"CBST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Cuiaba\",\n                    \"utc\": [\n                      \"America/Campo_Grande\",\n                      \"America/Cuiaba\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Western Standard Time\",\n                    \"abbr\": \"SWST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n                    \"utc\": [\n                      \"America/Anguilla\",\n                      \"America/Antigua\",\n                      \"America/Aruba\",\n                      \"America/Barbados\",\n                      \"America/Blanc-Sablon\",\n                      \"America/Boa_Vista\",\n                      \"America/Curacao\",\n                      \"America/Dominica\",\n                      \"America/Grand_Turk\",\n                      \"America/Grenada\",\n                      \"America/Guadeloupe\",\n                      \"America/Guyana\",\n                      \"America/Kralendijk\",\n                      \"America/La_Paz\",\n                      \"America/Lower_Princes\",\n                      \"America/Manaus\",\n                      \"America/Marigot\",\n                      \"America/Martinique\",\n                      \"America/Montserrat\",\n                      \"America/Port_of_Spain\",\n                      \"America/Porto_Velho\",\n                      \"America/Puerto_Rico\",\n                      \"America/Santo_Domingo\",\n                      \"America/St_Barthelemy\",\n                      \"America/St_Kitts\",\n                      \"America/St_Lucia\",\n                      \"America/St_Thomas\",\n                      \"America/St_Vincent\",\n                      \"America/Tortola\",\n                      \"Etc/GMT+4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific SA Standard Time\",\n                    \"abbr\": \"PSST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Santiago\",\n                    \"utc\": [\n                      \"America/Santiago\",\n                      \"Antarctica/Palmer\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Newfoundland Standard Time\",\n                    \"abbr\": \"NDT\",\n                    \"offset\": -2.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:30) Newfoundland\",\n                    \"utc\": [\n                      \"America/St_Johns\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. South America Standard Time\",\n                    \"abbr\": \"ESAST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Brasilia\",\n                    \"utc\": [\n                      \"America/Sao_Paulo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Argentina Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Buenos Aires\",\n                    \"utc\": [\n                      \"America/Argentina/La_Rioja\",\n                      \"America/Argentina/Rio_Gallegos\",\n                      \"America/Argentina/Salta\",\n                      \"America/Argentina/San_Juan\",\n                      \"America/Argentina/San_Luis\",\n                      \"America/Argentina/Tucuman\",\n                      \"America/Argentina/Ushuaia\",\n                      \"America/Buenos_Aires\",\n                      \"America/Catamarca\",\n                      \"America/Cordoba\",\n                      \"America/Jujuy\",\n                      \"America/Mendoza\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Eastern Standard Time\",\n                    \"abbr\": \"SEST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n                    \"utc\": [\n                      \"America/Araguaina\",\n                      \"America/Belem\",\n                      \"America/Cayenne\",\n                      \"America/Fortaleza\",\n                      \"America/Maceio\",\n                      \"America/Paramaribo\",\n                      \"America/Recife\",\n                      \"America/Santarem\",\n                      \"Antarctica/Rothera\",\n                      \"Atlantic/Stanley\",\n                      \"Etc/GMT+3\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenland Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": -2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:00) Greenland\",\n                    \"utc\": [\n                      \"America/Godthab\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Montevideo Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Montevideo\",\n                    \"utc\": [\n                      \"America/Montevideo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bahia Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Salvador\",\n                    \"utc\": [\n                      \"America/Bahia\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-02\",\n                    \"abbr\": \"U\",\n                    \"offset\": -2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n                    \"utc\": [\n                      \"America/Noronha\",\n                      \"Atlantic/South_Georgia\",\n                      \"Etc/GMT+2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mid-Atlantic Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-02:00) Mid-Atlantic - Old\"\n                  },\n                  {\n                    \"name\": \"Azores Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 0,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-01:00) Azores\",\n                    \"utc\": [\n                      \"America/Scoresbysund\",\n                      \"Atlantic/Azores\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cape Verde Standard Time\",\n                    \"abbr\": \"CVST\",\n                    \"offset\": -1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-01:00) Cape Verde Is.\",\n                    \"utc\": [\n                      \"Atlantic/Cape_Verde\",\n                      \"Etc/GMT+1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Morocco Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Casablanca\",\n                    \"utc\": [\n                      \"Africa/Casablanca\",\n                      \"Africa/El_Aaiun\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC\",\n                    \"abbr\": \"CUT\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Coordinated Universal Time\",\n                    \"utc\": [\n                      \"America/Danmarkshavn\",\n                      \"Etc/GMT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Dublin, Edinburgh, Lisbon, London\",\n                    \"utc\": [\n                      \"Atlantic/Canary\",\n                      \"Atlantic/Faeroe\",\n                      \"Atlantic/Madeira\",\n                      \"Europe/Dublin\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Jersey\",\n                      \"Europe/Lisbon\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenwich Standard Time\",\n                    \"abbr\": \"GST\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Monrovia, Reykjavik\",\n                    \"utc\": [\n                      \"Africa/Abidjan\",\n                      \"Africa/Accra\",\n                      \"Africa/Bamako\",\n                      \"Africa/Banjul\",\n                      \"Africa/Bissau\",\n                      \"Africa/Conakry\",\n                      \"Africa/Dakar\",\n                      \"Africa/Freetown\",\n                      \"Africa/Lome\",\n                      \"Africa/Monrovia\",\n                      \"Africa/Nouakchott\",\n                      \"Africa/Ouagadougou\",\n                      \"Africa/Sao_Tome\",\n                      \"Atlantic/Reykjavik\",\n                      \"Atlantic/St_Helena\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Europe Standard Time\",\n                    \"abbr\": \"WEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n                    \"utc\": [\n                      \"Arctic/Longyearbyen\",\n                      \"Europe/Amsterdam\",\n                      \"Europe/Andorra\",\n                      \"Europe/Berlin\",\n                      \"Europe/Busingen\",\n                      \"Europe/Gibraltar\",\n                      \"Europe/Luxembourg\",\n                      \"Europe/Malta\",\n                      \"Europe/Monaco\",\n                      \"Europe/Oslo\",\n                      \"Europe/Rome\",\n                      \"Europe/San_Marino\",\n                      \"Europe/Stockholm\",\n                      \"Europe/Vaduz\",\n                      \"Europe/Vatican\",\n                      \"Europe/Vienna\",\n                      \"Europe/Zurich\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Europe Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n                    \"utc\": [\n                      \"Europe/Belgrade\",\n                      \"Europe/Bratislava\",\n                      \"Europe/Budapest\",\n                      \"Europe/Ljubljana\",\n                      \"Europe/Podgorica\",\n                      \"Europe/Prague\",\n                      \"Europe/Tirane\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Romance Standard Time\",\n                    \"abbr\": \"RDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n                    \"utc\": [\n                      \"Africa/Ceuta\",\n                      \"Europe/Brussels\",\n                      \"Europe/Copenhagen\",\n                      \"Europe/Madrid\",\n                      \"Europe/Paris\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central European Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n                    \"utc\": [\n                      \"Europe/Sarajevo\",\n                      \"Europe/Skopje\",\n                      \"Europe/Warsaw\",\n                      \"Europe/Zagreb\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Central Africa Standard Time\",\n                    \"abbr\": \"WCAST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) West Central Africa\",\n                    \"utc\": [\n                      \"Africa/Algiers\",\n                      \"Africa/Bangui\",\n                      \"Africa/Brazzaville\",\n                      \"Africa/Douala\",\n                      \"Africa/Kinshasa\",\n                      \"Africa/Lagos\",\n                      \"Africa/Libreville\",\n                      \"Africa/Luanda\",\n                      \"Africa/Malabo\",\n                      \"Africa/Ndjamena\",\n                      \"Africa/Niamey\",\n                      \"Africa/Porto-Novo\",\n                      \"Africa/Tunis\",\n                      \"Etc/GMT-1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Namibia Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) Windhoek\",\n                    \"utc\": [\n                      \"Africa/Windhoek\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GTB Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Athens, Bucharest\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Middle East Standard Time\",\n                    \"abbr\": \"MEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Beirut\",\n                    \"utc\": [\n                      \"Asia/Beirut\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Egypt Standard Time\",\n                    \"abbr\": \"EST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Cairo\",\n                    \"utc\": [\n                      \"Africa/Cairo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Syria Standard Time\",\n                    \"abbr\": \"SDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Damascus\",\n                    \"utc\": [\n                      \"Asia/Damascus\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Europe Standard Time\",\n                    \"abbr\": \"EEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) E. Europe\"\n                  },\n                  {\n                    \"name\": \"South Africa Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Harare, Pretoria\",\n                    \"utc\": [\n                      \"Africa/Blantyre\",\n                      \"Africa/Bujumbura\",\n                      \"Africa/Gaborone\",\n                      \"Africa/Harare\",\n                      \"Africa/Johannesburg\",\n                      \"Africa/Kigali\",\n                      \"Africa/Lubumbashi\",\n                      \"Africa/Lusaka\",\n                      \"Africa/Maputo\",\n                      \"Africa/Maseru\",\n                      \"Africa/Mbabane\",\n                      \"Etc/GMT-2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"FLE Standard Time\",\n                    \"abbr\": \"FDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n                    \"utc\": [\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Turkey Standard Time\",\n                    \"abbr\": \"TDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Istanbul\",\n                    \"utc\": [\n                      \"Europe/Istanbul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Israel Standard Time\",\n                    \"abbr\": \"JDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Jerusalem\",\n                    \"utc\": [\n                      \"Asia/Jerusalem\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Libya Standard Time\",\n                    \"abbr\": \"LST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Tripoli\",\n                    \"utc\": [\n                      \"Africa/Tripoli\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Jordan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Amman\",\n                    \"utc\": [\n                      \"Asia/Amman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabic Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Baghdad\",\n                    \"utc\": [\n                      \"Asia/Baghdad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kaliningrad Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Kaliningrad, Minsk\",\n                    \"utc\": [\n                      \"Europe/Kaliningrad\",\n                      \"Europe/Minsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arab Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n                    \"utc\": [\n                      \"Asia/Aden\",\n                      \"Asia/Bahrain\",\n                      \"Asia/Kuwait\",\n                      \"Asia/Qatar\",\n                      \"Asia/Riyadh\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Africa Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Nairobi\",\n                    \"utc\": [\n                      \"Africa/Addis_Ababa\",\n                      \"Africa/Asmera\",\n                      \"Africa/Dar_es_Salaam\",\n                      \"Africa/Djibouti\",\n                      \"Africa/Juba\",\n                      \"Africa/Kampala\",\n                      \"Africa/Khartoum\",\n                      \"Africa/Mogadishu\",\n                      \"Africa/Nairobi\",\n                      \"Antarctica/Syowa\",\n                      \"Etc/GMT-3\",\n                      \"Indian/Antananarivo\",\n                      \"Indian/Comoro\",\n                      \"Indian/Mayotte\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Iran Standard Time\",\n                    \"abbr\": \"IDT\",\n                    \"offset\": 4.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+03:30) Tehran\",\n                    \"utc\": [\n                      \"Asia/Tehran\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabian Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n                    \"utc\": [\n                      \"Asia/Dubai\",\n                      \"Asia/Muscat\",\n                      \"Etc/GMT-4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Azerbaijan Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+04:00) Baku\",\n                    \"utc\": [\n                      \"Asia/Baku\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Russian Standard Time\",\n                    \"abbr\": \"RST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\n                    \"utc\": [\n                      \"Europe/Moscow\",\n                      \"Europe/Samara\",\n                      \"Europe/Simferopol\",\n                      \"Europe/Volgograd\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mauritius Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Port Louis\",\n                    \"utc\": [\n                      \"Indian/Mahe\",\n                      \"Indian/Mauritius\",\n                      \"Indian/Reunion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Georgian Standard Time\",\n                    \"abbr\": \"GST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Tbilisi\",\n                    \"utc\": [\n                      \"Asia/Tbilisi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Caucasus Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Yerevan\",\n                    \"utc\": [\n                      \"Asia/Yerevan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Afghanistan Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:30) Kabul\",\n                    \"utc\": [\n                      \"Asia/Kabul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Asia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n                    \"utc\": [\n                      \"Antarctica/Mawson\",\n                      \"Asia/Aqtau\",\n                      \"Asia/Aqtobe\",\n                      \"Asia/Ashgabat\",\n                      \"Asia/Dushanbe\",\n                      \"Asia/Oral\",\n                      \"Asia/Samarkand\",\n                      \"Asia/Tashkent\",\n                      \"Etc/GMT-5\",\n                      \"Indian/Kerguelen\",\n                      \"Indian/Maldives\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pakistan Standard Time\",\n                    \"abbr\": \"PST\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n                    \"utc\": [\n                      \"Asia/Karachi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"India Standard Time\",\n                    \"abbr\": \"IST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n                    \"utc\": [\n                      \"Asia/Calcutta\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Sri Lanka Standard Time\",\n                    \"abbr\": \"SLST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n                    \"utc\": [\n                      \"Asia/Colombo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Nepal Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 5.75,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:45) Kathmandu\",\n                    \"utc\": [\n                      \"Asia/Katmandu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Asia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Astana\",\n                    \"utc\": [\n                      \"Antarctica/Vostok\",\n                      \"Asia/Almaty\",\n                      \"Asia/Bishkek\",\n                      \"Asia/Qyzylorda\",\n                      \"Asia/Urumqi\",\n                      \"Etc/GMT-6\",\n                      \"Indian/Chagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bangladesh Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Dhaka\",\n                    \"utc\": [\n                      \"Asia/Dhaka\",\n                      \"Asia/Thimphu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Ekaterinburg Standard Time\",\n                    \"abbr\": \"EST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Ekaterinburg\",\n                    \"utc\": [\n                      \"Asia/Yekaterinburg\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Myanmar Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 6.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n                    \"utc\": [\n                      \"Asia/Rangoon\",\n                      \"Indian/Cocos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SE Asia Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n                    \"utc\": [\n                      \"Antarctica/Davis\",\n                      \"Asia/Bangkok\",\n                      \"Asia/Hovd\",\n                      \"Asia/Jakarta\",\n                      \"Asia/Phnom_Penh\",\n                      \"Asia/Pontianak\",\n                      \"Asia/Saigon\",\n                      \"Asia/Vientiane\",\n                      \"Etc/GMT-7\",\n                      \"Indian/Christmas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"N. Central Asia Standard Time\",\n                    \"abbr\": \"NCAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Novosibirsk\",\n                    \"utc\": [\n                      \"Asia/Novokuznetsk\",\n                      \"Asia/Novosibirsk\",\n                      \"Asia/Omsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"China Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n                    \"utc\": [\n                      \"Asia/Hong_Kong\",\n                      \"Asia/Macau\",\n                      \"Asia/Shanghai\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia Standard Time\",\n                    \"abbr\": \"NAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Krasnoyarsk\",\n                    \"utc\": [\n                      \"Asia/Krasnoyarsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Singapore Standard Time\",\n                    \"abbr\": \"MPST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n                    \"utc\": [\n                      \"Asia/Brunei\",\n                      \"Asia/Kuala_Lumpur\",\n                      \"Asia/Kuching\",\n                      \"Asia/Makassar\",\n                      \"Asia/Manila\",\n                      \"Asia/Singapore\",\n                      \"Etc/GMT-8\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Australia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Perth\",\n                    \"utc\": [\n                      \"Antarctica/Casey\",\n                      \"Australia/Perth\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Taipei Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Taipei\",\n                    \"utc\": [\n                      \"Asia/Taipei\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Ulaanbaatar Standard Time\",\n                    \"abbr\": \"UST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Ulaanbaatar\",\n                    \"utc\": [\n                      \"Asia/Choibalsan\",\n                      \"Asia/Ulaanbaatar\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia East Standard Time\",\n                    \"abbr\": \"NAEST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Irkutsk\",\n                    \"utc\": [\n                      \"Asia/Irkutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tokyo Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n                    \"utc\": [\n                      \"Asia/Dili\",\n                      \"Asia/Jayapura\",\n                      \"Asia/Tokyo\",\n                      \"Etc/GMT-9\",\n                      \"Pacific/Palau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Korea Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Seoul\",\n                    \"utc\": [\n                      \"Asia/Pyongyang\",\n                      \"Asia/Seoul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cen. Australia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Adelaide\",\n                    \"utc\": [\n                      \"Australia/Adelaide\",\n                      \"Australia/Broken_Hill\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Central Standard Time\",\n                    \"abbr\": \"ACST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Darwin\",\n                    \"utc\": [\n                      \"Australia/Darwin\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Australia Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Brisbane\",\n                    \"utc\": [\n                      \"Australia/Brisbane\",\n                      \"Australia/Lindeman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Eastern Standard Time\",\n                    \"abbr\": \"AEST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n                    \"utc\": [\n                      \"Australia/Melbourne\",\n                      \"Australia/Sydney\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Pacific Standard Time\",\n                    \"abbr\": \"WPST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n                    \"utc\": [\n                      \"Antarctica/DumontDUrville\",\n                      \"Etc/GMT-10\",\n                      \"Pacific/Guam\",\n                      \"Pacific/Port_Moresby\",\n                      \"Pacific/Saipan\",\n                      \"Pacific/Truk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tasmania Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Hobart\",\n                    \"utc\": [\n                      \"Australia/Currie\",\n                      \"Australia/Hobart\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yakutsk Standard Time\",\n                    \"abbr\": \"YST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Yakutsk\",\n                    \"utc\": [\n                      \"Asia/Chita\",\n                      \"Asia/Khandyga\",\n                      \"Asia/Yakutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Pacific Standard Time\",\n                    \"abbr\": \"CPST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n                    \"utc\": [\n                      \"Antarctica/Macquarie\",\n                      \"Etc/GMT-11\",\n                      \"Pacific/Efate\",\n                      \"Pacific/Guadalcanal\",\n                      \"Pacific/Kosrae\",\n                      \"Pacific/Noumea\",\n                      \"Pacific/Ponape\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Vladivostok Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Vladivostok\",\n                    \"utc\": [\n                      \"Asia/Sakhalin\",\n                      \"Asia/Ust-Nera\",\n                      \"Asia/Vladivostok\"\n                    ]\n                  },\n                  {\n                    \"name\": \"New Zealand Standard Time\",\n                    \"abbr\": \"NZST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Auckland, Wellington\",\n                    \"utc\": [\n                      \"Antarctica/McMurdo\",\n                      \"Pacific/Auckland\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC+12\",\n                    \"abbr\": \"U\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n                    \"utc\": [\n                      \"Etc/GMT-12\",\n                      \"Pacific/Funafuti\",\n                      \"Pacific/Kwajalein\",\n                      \"Pacific/Majuro\",\n                      \"Pacific/Nauru\",\n                      \"Pacific/Tarawa\",\n                      \"Pacific/Wake\",\n                      \"Pacific/Wallis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Fiji Standard Time\",\n                    \"abbr\": \"FST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Fiji\",\n                    \"utc\": [\n                      \"Pacific/Fiji\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Magadan Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Magadan\",\n                    \"utc\": [\n                      \"Asia/Anadyr\",\n                      \"Asia/Kamchatka\",\n                      \"Asia/Magadan\",\n                      \"Asia/Srednekolymsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kamchatka Standard Time\",\n                    \"abbr\": \"KDT\",\n                    \"offset\": 13,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\"\n                  },\n                  {\n                    \"name\": \"Tonga Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Nuku'alofa\",\n                    \"utc\": [\n                      \"Etc/GMT-13\",\n                      \"Pacific/Enderbury\",\n                      \"Pacific/Fakaofo\",\n                      \"Pacific/Tongatapu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samoa Standard Time\",\n                    \"abbr\": \"SST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Samoa\",\n                    \"utc\": [\n                      \"Pacific/Apia\"\n                    ]\n                  }\n                ],\n        //List source: http://answers.google.com/answers/threadview/id/589312.html\n        profession: [\n            \"Airline Pilot\",\n            \"Academic Team\",\n            \"Accountant\",\n            \"Account Executive\",\n            \"Actor\",\n            \"Actuary\",\n            \"Acquisition Analyst\",\n            \"Administrative Asst.\",\n            \"Administrative Analyst\",\n            \"Administrator\",\n            \"Advertising Director\",\n            \"Aerospace Engineer\",\n            \"Agent\",\n            \"Agricultural Inspector\",\n            \"Agricultural Scientist\",\n            \"Air Traffic Controller\",\n            \"Animal Trainer\",\n            \"Anthropologist\",\n            \"Appraiser\",\n            \"Architect\",\n            \"Art Director\",\n            \"Artist\",\n            \"Astronomer\",\n            \"Athletic Coach\",\n            \"Auditor\",\n            \"Author\",\n            \"Baker\",\n            \"Banker\",\n            \"Bankruptcy Attorney\",\n            \"Benefits Manager\",\n            \"Biologist\",\n            \"Bio-feedback Specialist\",\n            \"Biomedical Engineer\",\n            \"Biotechnical Researcher\",\n            \"Broadcaster\",\n            \"Broker\",\n            \"Building Manager\",\n            \"Building Contractor\",\n            \"Building Inspector\",\n            \"Business Analyst\",\n            \"Business Planner\",\n            \"Business Manager\",\n            \"Buyer\",\n            \"Call Center Manager\",\n            \"Career Counselor\",\n            \"Cash Manager\",\n            \"Ceramic Engineer\",\n            \"Chief Executive Officer\",\n            \"Chief Operation Officer\",\n            \"Chef\",\n            \"Chemical Engineer\",\n            \"Chemist\",\n            \"Child Care Manager\",\n            \"Chief Medical Officer\",\n            \"Chiropractor\",\n            \"Cinematographer\",\n            \"City Housing Manager\",\n            \"City Manager\",\n            \"Civil Engineer\",\n            \"Claims Manager\",\n            \"Clinical Research Assistant\",\n            \"Collections Manager.\",\n            \"Compliance Manager\",\n            \"Comptroller\",\n            \"Computer Manager\",\n            \"Commercial Artist\",\n            \"Communications Affairs Director\",\n            \"Communications Director\",\n            \"Communications Engineer\",\n            \"Compensation Analyst\",\n            \"Computer Programmer\",\n            \"Computer Ops. Manager\",\n            \"Computer Engineer\",\n            \"Computer Operator\",\n            \"Computer Graphics Specialist\",\n            \"Construction Engineer\",\n            \"Construction Manager\",\n            \"Consultant\",\n            \"Consumer Relations Manager\",\n            \"Contract Administrator\",\n            \"Copyright Attorney\",\n            \"Copywriter\",\n            \"Corporate Planner\",\n            \"Corrections Officer\",\n            \"Cosmetologist\",\n            \"Credit Analyst\",\n            \"Cruise Director\",\n            \"Chief Information Officer\",\n            \"Chief Technology Officer\",\n            \"Customer Service Manager\",\n            \"Cryptologist\",\n            \"Dancer\",\n            \"Data Security Manager\",\n            \"Database Manager\",\n            \"Day Care Instructor\",\n            \"Dentist\",\n            \"Designer\",\n            \"Design Engineer\",\n            \"Desktop Publisher\",\n            \"Developer\",\n            \"Development Officer\",\n            \"Diamond Merchant\",\n            \"Dietitian\",\n            \"Direct Marketer\",\n            \"Director\",\n            \"Distribution Manager\",\n            \"Diversity Manager\",\n            \"Economist\",\n            \"EEO Compliance Manager\",\n            \"Editor\",\n            \"Education Adminator\",\n            \"Electrical Engineer\",\n            \"Electro Optical Engineer\",\n            \"Electronics Engineer\",\n            \"Embassy Management\",\n            \"Employment Agent\",\n            \"Engineer Technician\",\n            \"Entrepreneur\",\n            \"Environmental Analyst\",\n            \"Environmental Attorney\",\n            \"Environmental Engineer\",\n            \"Environmental Specialist\",\n            \"Escrow Officer\",\n            \"Estimator\",\n            \"Executive Assistant\",\n            \"Executive Director\",\n            \"Executive Recruiter\",\n            \"Facilities Manager\",\n            \"Family Counselor\",\n            \"Fashion Events Manager\",\n            \"Fashion Merchandiser\",\n            \"Fast Food Manager\",\n            \"Film Producer\",\n            \"Film Production Assistant\",\n            \"Financial Analyst\",\n            \"Financial Planner\",\n            \"Financier\",\n            \"Fine Artist\",\n            \"Wildlife Specialist\",\n            \"Fitness Consultant\",\n            \"Flight Attendant\",\n            \"Flight Engineer\",\n            \"Floral Designer\",\n            \"Food & Beverage Director\",\n            \"Food Service Manager\",\n            \"Forestry Technician\",\n            \"Franchise Management\",\n            \"Franchise Sales\",\n            \"Fraud Investigator\",\n            \"Freelance Writer\",\n            \"Fund Raiser\",\n            \"General Manager\",\n            \"Geologist\",\n            \"General Counsel\",\n            \"Geriatric Specialist\",\n            \"Gerontologist\",\n            \"Glamour Photographer\",\n            \"Golf Club Manager\",\n            \"Gourmet Chef\",\n            \"Graphic Designer\",\n            \"Grounds Keeper\",\n            \"Hazardous Waste Manager\",\n            \"Health Care Manager\",\n            \"Health Therapist\",\n            \"Health Service Administrator\",\n            \"Hearing Officer\",\n            \"Home Economist\",\n            \"Horticulturist\",\n            \"Hospital Administrator\",\n            \"Hotel Manager\",\n            \"Human Resources Manager\",\n            \"Importer\",\n            \"Industrial Designer\",\n            \"Industrial Engineer\",\n            \"Information Director\",\n            \"Inside Sales\",\n            \"Insurance Adjuster\",\n            \"Interior Decorator\",\n            \"Internal Controls Director\",\n            \"International Acct.\",\n            \"International Courier\",\n            \"International Lawyer\",\n            \"Interpreter\",\n            \"Investigator\",\n            \"Investment Banker\",\n            \"Investment Manager\",\n            \"IT Architect\",\n            \"IT Project Manager\",\n            \"IT Systems Analyst\",\n            \"Jeweler\",\n            \"Joint Venture Manager\",\n            \"Journalist\",\n            \"Labor Negotiator\",\n            \"Labor Organizer\",\n            \"Labor Relations Manager\",\n            \"Lab Services Director\",\n            \"Lab Technician\",\n            \"Land Developer\",\n            \"Landscape Architect\",\n            \"Law Enforcement Officer\",\n            \"Lawyer\",\n            \"Lead Software Engineer\",\n            \"Lead Software Test Engineer\",\n            \"Leasing Manager\",\n            \"Legal Secretary\",\n            \"Library Manager\",\n            \"Litigation Attorney\",\n            \"Loan Officer\",\n            \"Lobbyist\",\n            \"Logistics Manager\",\n            \"Maintenance Manager\",\n            \"Management Consultant\",\n            \"Managed Care Director\",\n            \"Managing Partner\",\n            \"Manufacturing Director\",\n            \"Manpower Planner\",\n            \"Marine Biologist\",\n            \"Market Res. Analyst\",\n            \"Marketing Director\",\n            \"Materials Manager\",\n            \"Mathematician\",\n            \"Membership Chairman\",\n            \"Mechanic\",\n            \"Mechanical Engineer\",\n            \"Media Buyer\",\n            \"Medical Investor\",\n            \"Medical Secretary\",\n            \"Medical Technician\",\n            \"Mental Health Counselor\",\n            \"Merchandiser\",\n            \"Metallurgical Engineering\",\n            \"Meteorologist\",\n            \"Microbiologist\",\n            \"MIS Manager\",\n            \"Motion Picture Director\",\n            \"Multimedia Director\",\n            \"Musician\",\n            \"Network Administrator\",\n            \"Network Specialist\",\n            \"Network Operator\",\n            \"New Product Manager\",\n            \"Novelist\",\n            \"Nuclear Engineer\",\n            \"Nuclear Specialist\",\n            \"Nutritionist\",\n            \"Nursing Administrator\",\n            \"Occupational Therapist\",\n            \"Oceanographer\",\n            \"Office Manager\",\n            \"Operations Manager\",\n            \"Operations Research Director\",\n            \"Optical Technician\",\n            \"Optometrist\",\n            \"Organizational Development Manager\",\n            \"Outplacement Specialist\",\n            \"Paralegal\",\n            \"Park Ranger\",\n            \"Patent Attorney\",\n            \"Payroll Specialist\",\n            \"Personnel Specialist\",\n            \"Petroleum Engineer\",\n            \"Pharmacist\",\n            \"Photographer\",\n            \"Physical Therapist\",\n            \"Physician\",\n            \"Physician Assistant\",\n            \"Physicist\",\n            \"Planning Director\",\n            \"Podiatrist\",\n            \"Political Analyst\",\n            \"Political Scientist\",\n            \"Politician\",\n            \"Portfolio Manager\",\n            \"Preschool Management\",\n            \"Preschool Teacher\",\n            \"Principal\",\n            \"Private Banker\",\n            \"Private Investigator\",\n            \"Probation Officer\",\n            \"Process Engineer\",\n            \"Producer\",\n            \"Product Manager\",\n            \"Product Engineer\",\n            \"Production Engineer\",\n            \"Production Planner\",\n            \"Professional Athlete\",\n            \"Professional Coach\",\n            \"Professor\",\n            \"Project Engineer\",\n            \"Project Manager\",\n            \"Program Manager\",\n            \"Property Manager\",\n            \"Public Administrator\",\n            \"Public Safety Director\",\n            \"PR Specialist\",\n            \"Publisher\",\n            \"Purchasing Agent\",\n            \"Publishing Director\",\n            \"Quality Assurance Specialist\",\n            \"Quality Control Engineer\",\n            \"Quality Control Inspector\",\n            \"Radiology Manager\",\n            \"Railroad Engineer\",\n            \"Real Estate Broker\",\n            \"Recreational Director\",\n            \"Recruiter\",\n            \"Redevelopment Specialist\",\n            \"Regulatory Affairs Manager\",\n            \"Registered Nurse\",\n            \"Rehabilitation Counselor\",\n            \"Relocation Manager\",\n            \"Reporter\",\n            \"Research Specialist\",\n            \"Restaurant Manager\",\n            \"Retail Store Manager\",\n            \"Risk Analyst\",\n            \"Safety Engineer\",\n            \"Sales Engineer\",\n            \"Sales Trainer\",\n            \"Sales Promotion Manager\",\n            \"Sales Representative\",\n            \"Sales Manager\",\n            \"Service Manager\",\n            \"Sanitation Engineer\",\n            \"Scientific Programmer\",\n            \"Scientific Writer\",\n            \"Securities Analyst\",\n            \"Security Consultant\",\n            \"Security Director\",\n            \"Seminar Presenter\",\n            \"Ship's Officer\",\n            \"Singer\",\n            \"Social Director\",\n            \"Social Program Planner\",\n            \"Social Research\",\n            \"Social Scientist\",\n            \"Social Worker\",\n            \"Sociologist\",\n            \"Software Developer\",\n            \"Software Engineer\",\n            \"Software Test Engineer\",\n            \"Soil Scientist\",\n            \"Special Events Manager\",\n            \"Special Education Teacher\",\n            \"Special Projects Director\",\n            \"Speech Pathologist\",\n            \"Speech Writer\",\n            \"Sports Event Manager\",\n            \"Statistician\",\n            \"Store Manager\",\n            \"Strategic Alliance Director\",\n            \"Strategic Planning Director\",\n            \"Stress Reduction Specialist\",\n            \"Stockbroker\",\n            \"Surveyor\",\n            \"Structural Engineer\",\n            \"Superintendent\",\n            \"Supply Chain Director\",\n            \"System Engineer\",\n            \"Systems Analyst\",\n            \"Systems Programmer\",\n            \"System Administrator\",\n            \"Tax Specialist\",\n            \"Teacher\",\n            \"Technical Support Specialist\",\n            \"Technical Illustrator\",\n            \"Technical Writer\",\n            \"Technology Director\",\n            \"Telecom Analyst\",\n            \"Telemarketer\",\n            \"Theatrical Director\",\n            \"Title Examiner\",\n            \"Tour Escort\",\n            \"Tour Guide Director\",\n            \"Traffic Manager\",\n            \"Trainer Translator\",\n            \"Transportation Manager\",\n            \"Travel Agent\",\n            \"Treasurer\",\n            \"TV Programmer\",\n            \"Underwriter\",\n            \"Union Representative\",\n            \"University Administrator\",\n            \"University Dean\",\n            \"Urban Planner\",\n            \"Veterinarian\",\n            \"Vendor Relations Director\",\n            \"Viticulturist\",\n            \"Warehouse Manager\"\n        ]\n    };\n\n    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n    var o_keys = (Object.keys || function(obj) {\n      var result = [];\n      for (var key in obj) {\n        if (o_hasOwnProperty.call(obj, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    });\n\n    function _copyObject(source, target) {\n      var keys = o_keys(source);\n      var key;\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        target[key] = source[key] || target[key];\n      }\n    }\n\n    function _copyArray(source, target) {\n      for (var i = 0, l = source.length; i < l; i++) {\n        target[i] = source[i];\n      }\n    }\n\n    function copyObject(source, _target) {\n        var isArray = Array.isArray(source);\n        var target = _target || (isArray ? new Array(source.length) : {});\n\n        if (isArray) {\n          _copyArray(source, target);\n        } else {\n          _copyObject(source, target);\n        }\n\n        return target;\n    }\n\n    /** Get the data based on key**/\n    Chance.prototype.get = function (name) {\n        return copyObject(data[name]);\n    };\n\n    // Mac Address\n    Chance.prototype.mac_address = function(options){\n        // typically mac addresses are separated by \":\"\n        // however they can also be separated by \"-\"\n        // the network variant uses a dot every fourth byte\n\n        options = initOptions(options);\n        if(!options.separator) {\n            options.separator =  options.networkVersion ? \".\" : \":\";\n        }\n\n        var mac_pool=\"ABCDEF1234567890\",\n            mac = \"\";\n        if(!options.networkVersion) {\n            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n        } else {\n            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n        }\n\n        return mac;\n    };\n\n    Chance.prototype.normal = function (options) {\n        options = initOptions(options, {mean : 0, dev : 1, pool : []});\n\n        testRange(\n            options.pool.constructor !== Array,\n            \"Chance: The pool option must be a valid array.\"\n        );\n\n        // If a pool has been passed, then we are returning an item from that pool,\n        // using the normal distribution settings that were passed in\n        if (options.pool.length > 0) {\n            return this.normal_pool(options);\n        }\n\n        // The Marsaglia Polar method\n        var s, u, v, norm,\n            mean = options.mean,\n            dev = options.dev;\n\n        do {\n            // U and V are from the uniform distribution on (-1, 1)\n            u = this.random() * 2 - 1;\n            v = this.random() * 2 - 1;\n\n            s = u * u + v * v;\n        } while (s >= 1);\n\n        // Compute the standard normal variate\n        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\n        // Shape and scale\n        return dev * norm + mean;\n    };\n\n    Chance.prototype.normal_pool = function(options) {\n        var performanceCounter = 0;\n        do {\n            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));\n            if (idx < options.pool.length && idx >= 0) {\n                return options.pool[idx];\n            } else {\n                performanceCounter++;\n            }\n        } while(performanceCounter < 100);\n\n        throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\n    };\n\n    Chance.prototype.radio = function (options) {\n        // Initial Letter (Typically Designated by Side of Mississippi River)\n        options = initOptions(options, {side : \"?\"});\n        var fl = \"\";\n        switch (options.side.toLowerCase()) {\n        case \"east\":\n        case \"e\":\n            fl = \"W\";\n            break;\n        case \"west\":\n        case \"w\":\n            fl = \"K\";\n            break;\n        default:\n            fl = this.character({pool: \"KW\"});\n            break;\n        }\n\n        return fl + this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"});\n    };\n\n    // Set the data as key and data or the data map\n    Chance.prototype.set = function (name, values) {\n        if (typeof name === \"string\") {\n            data[name] = values;\n        } else {\n            data = copyObject(name, data);\n        }\n    };\n\n    Chance.prototype.tv = function (options) {\n        return this.radio(options);\n    };\n\n    // ID number for Brazil companies\n    Chance.prototype.cnpj = function () {\n        var n = this.n(this.natural, 8, { max: 9 });\n        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10){\n            d1 = 0;\n        }\n        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10){\n            d2 = 0;\n        }\n        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n    };\n\n    // -- End Miscellaneous --\n\n    Chance.prototype.mersenne_twister = function (seed) {\n        return new MersenneTwister(seed);\n    };\n\n    Chance.prototype.blueimp_md5 = function () {\n        return new BlueImpMD5();\n    };\n\n    // Mersenne Twister from https://gist.github.com/banksean/300494\n    var MersenneTwister = function (seed) {\n        if (seed === undefined) {\n            // kept random number same size as time used previously to ensure no unexpected results downstream\n            seed = Math.floor(Math.random()*Math.pow(10,13));\n        }\n        /* Period parameters */\n        this.N = 624;\n        this.M = 397;\n        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n        this.mt = new Array(this.N); /* the array for the state vector */\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n        this.init_genrand(seed);\n    };\n\n    /* initializes mt[N] with a seed */\n    MersenneTwister.prototype.init_genrand = function (s) {\n        this.mt[0] = s >>> 0;\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n            /* In the previous versions, MSBs of the seed affect   */\n            /* only MSBs of the array mt[].                        */\n            /* 2002/01/09 modified by Makoto Matsumoto             */\n            this.mt[this.mti] >>>= 0;\n            /* for >32 bit machines */\n        }\n    };\n\n    /* initialize by an array with array-length */\n    /* init_key is the array for initializing keys */\n    /* key_length is its length */\n    /* slight change for C++, 2004/2/26 */\n    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n        var i = 1, j = 0, k, s;\n        this.init_genrand(19650218);\n        k = (this.N > key_length ? this.N : key_length);\n        for (; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            j++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n            if (j >= key_length) { j = 0; }\n        }\n        for (k = this.N - 1; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n        }\n\n        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n    };\n\n    /* generates a random number on [0,0xffffffff]-interval */\n    MersenneTwister.prototype.genrand_int32 = function () {\n        var y;\n        var mag01 = new Array(0x0, this.MATRIX_A);\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n        if (this.mti >= this.N) { /* generate N words at one time */\n            var kk;\n\n            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n                this.init_genrand(5489); /* a default initial seed is used */\n            }\n            for (kk = 0; kk < this.N - this.M; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            for (;kk < this.N - 1; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n            this.mti = 0;\n        }\n\n        y = this.mt[this.mti++];\n\n        /* Tempering */\n        y ^= (y >>> 11);\n        y ^= (y << 7) & 0x9d2c5680;\n        y ^= (y << 15) & 0xefc60000;\n        y ^= (y >>> 18);\n\n        return y >>> 0;\n    };\n\n    /* generates a random number on [0,0x7fffffff]-interval */\n    MersenneTwister.prototype.genrand_int31 = function () {\n        return (this.genrand_int32() >>> 1);\n    };\n\n    /* generates a random number on [0,1]-real-interval */\n    MersenneTwister.prototype.genrand_real1 = function () {\n        return this.genrand_int32() * (1.0 / 4294967295.0);\n        /* divided by 2^32-1 */\n    };\n\n    /* generates a random number on [0,1)-real-interval */\n    MersenneTwister.prototype.random = function () {\n        return this.genrand_int32() * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on (0,1)-real-interval */\n    MersenneTwister.prototype.genrand_real3 = function () {\n        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on [0,1) with 53-bit resolution*/\n    MersenneTwister.prototype.genrand_res53 = function () {\n        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n    };\n\n    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\n    var BlueImpMD5 = function () {};\n\n    BlueImpMD5.prototype.VERSION = '1.0.1';\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    BlueImpMD5.prototype.bit_roll = function (num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    };\n\n    /*\n    * These functions implement the five basic operations the algorithm uses.\n    */\n    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\n        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\n    };\n    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    BlueImpMD5.prototype.binl_md5 = function (x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var i, olda, oldb, oldc, oldd,\n            a =  1732584193,\n            b = -271733879,\n            c = -1732584194,\n            d =  271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);\n            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\n            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\n            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\n            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\n            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);\n            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);\n            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    };\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    BlueImpMD5.prototype.binl2rstr = function (input) {\n        var i,\n            output = '';\n        for (i = 0; i < input.length * 32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        }\n        return output;\n    };\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    BlueImpMD5.prototype.rstr2binl = function (input) {\n        var i,\n            output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0;\n        }\n        for (i = 0; i < input.length * 8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        }\n        return output;\n    };\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    BlueImpMD5.prototype.rstr_md5 = function (s) {\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n    };\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\n        var i,\n            bkey = this.rstr2binl(key),\n            ipad = [],\n            opad = [],\n            hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n            bkey = this.binl_md5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n    };\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    BlueImpMD5.prototype.rstr2hex = function (input) {\n        var hex_tab = '0123456789abcdef',\n            output = '',\n            x,\n            i;\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F) +\n                hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    };\n\n    /*\n    * Encode a string as utf-8\n    */\n    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\n        return unescape(encodeURIComponent(input));\n    };\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    BlueImpMD5.prototype.raw_md5 = function (s) {\n        return this.rstr_md5(this.str2rstr_utf8(s));\n    };\n    BlueImpMD5.prototype.hex_md5 = function (s) {\n        return this.rstr2hex(this.raw_md5(s));\n    };\n    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\n        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\n    };\n    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\n        return this.rstr2hex(this.raw_hmac_md5(k, d));\n    };\n\n    BlueImpMD5.prototype.md5 = function (string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return this.hex_md5(string);\n            }\n\n            return this.raw_md5(string);\n        }\n\n        if (!raw) {\n            return this.hex_hmac_md5(key, string);\n        }\n\n        return this.raw_hmac_md5(key, string);\n    };\n\n    // CommonJS module\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = Chance;\n        }\n        exports.Chance = Chance;\n    }\n\n    // Register as an anonymous AMD module\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return Chance;\n        });\n    }\n\n    // if there is a importsScrips object define chance for worker\n    if (typeof importScripts !== 'undefined') {\n        chance = new Chance();\n    }\n\n    // If there is a window object, that at least has a document property,\n    // instantiate and define chance on the window\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\n        window.Chance = Chance;\n        window.chance = new Chance();\n    }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chance/chance.js\n// module id = 179\n// module chunks = 1","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Chance from 'chance';\n\nimport traceGenerator, { SERVICE_LIST, OPERATIONS_LIST } from './trace-generators';\nimport dependencyGenerator from './dependency-generators';\nimport { getTraceId } from '../selectors/trace';\n\nconst chance = new Chance();\n\nexport const DEPENDENCIES_FIXTURES = dependencyGenerator.dependencies({});\nexport const TRACE_FIXTURES = traceGenerator.traces({});\nconst traceMap = new Map(TRACE_FIXTURES.map(trace => [getTraceId(trace), trace]));\n\nfunction resolveWithData(data) {\n  return new Promise(resolve => setTimeout(() => resolve({ data })), chance.integer({ min: 100, max: 2000 }));\n}\n\nfunction rejectWithErrors(...errors) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => reject({ errors }), chance.integer({ min: 100, max: 2000 }))\n  );\n}\n\nexport default {\n  fetchTrace: id =>\n    traceMap.has(id)\n      ? resolveWithData([{ ...traceMap.get(id) }])\n      : rejectWithErrors(new Error('trace not found')),\n  searchTraces: () => resolveWithData(TRACE_FIXTURES),\n  fetchServices: () => resolveWithData(SERVICE_LIST),\n  fetchServiceOperations: () => resolveWithData(OPERATIONS_LIST),\n  fetchDependencies: () => resolveWithData(DEPENDENCIES_FIXTURES),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/jaeger-mock.js","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Chance from 'chance';\n\nconst chance = new Chance();\n\nexport default chance.mixin({\n  dependencies({ numOfNodes = 45, numOfLinks = 45 }) {\n    return chance.n(chance.linkFromNodes, numOfLinks, {\n      nodeList: chance.n(chance.node, numOfNodes),\n    });\n  },\n\n  node() {\n    return chance.city();\n  },\n\n  link({\n    parent = chance.city(),\n    child = chance.city(),\n    callCount = chance.integer({ min: 1, max: 250000000 }),\n  }) {\n    return { parent, child, callCount };\n  },\n\n  linkFromNodes({ nodeList }) {\n    return chance.link({\n      parent: chance.pickone(nodeList),\n      child: chance.pickone(nodeList),\n    });\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/dependency-generators.js","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Chance from 'chance';\n\nimport { getSpanId } from '../selectors/span';\n\nconst chance = new Chance();\n\nexport const SERVICE_LIST = ['serviceA', 'serviceB', 'serviceC', 'serviceD', 'serviceE', 'serviceF'];\nexport const OPERATIONS_LIST = [\n  'GET',\n  'PUT',\n  'POST',\n  'DELETE',\n  'MySQL::SELECT',\n  'MySQL::INSERT',\n  'MongoDB::find',\n  'MongoDB::update',\n];\n\nfunction setupParentSpan(spans, parentSpanValues) {\n  Object.assign(spans[0], parentSpanValues);\n  return spans;\n}\n\nfunction getParentSpanId(span, levels) {\n  let nestingLevel = chance.integer({ min: 1, max: levels.length });\n\n  // pick the correct nesting level if allocated by the levels calculation\n  levels.forEach((level, idx) => {\n    if (level.indexOf(getSpanId(span)) >= 0) {\n      nestingLevel = idx;\n    }\n  });\n\n  return nestingLevel - 1 >= 0 ? chance.pickone(levels[nestingLevel - 1]) : null;\n}\n\n/* this simulates the hierarchy created by CHILD_OF tags */\nfunction attachReferences(spans) {\n  const depth = chance.integer({ min: 1, max: 10 });\n  let levels = [[getSpanId(spans[0])]];\n\n  const duplicateLevelFilter = currentLevels => spanID =>\n    !currentLevels.find(level => level.indexOf(spanID) >= 0);\n\n  while (levels.length < depth) {\n    const newLevel = chance\n      .pickset(spans, chance.integer({ min: 4, max: 8 }))\n      .map(getSpanId)\n      .filter(duplicateLevelFilter(levels));\n    levels.push(newLevel);\n  }\n\n  // filter out empty levels\n  levels = levels.filter(level => level.length > 0);\n\n  return spans.map(span => {\n    const parentSpanId = getParentSpanId(span, levels);\n    return parentSpanId\n      ? {\n          ...span,\n          references: [\n            {\n              refType: 'CHILD_OF',\n              traceID: span.traceID,\n              spanID: parentSpanId,\n            },\n          ],\n        }\n      : span;\n  });\n}\n\nexport default chance.mixin({\n  trace({\n    // long trace\n    // very short trace\n    // average case\n    numberOfSpans = chance.pickone([\n      Math.ceil(chance.normal({ mean: 200, dev: 10 })) + 1,\n      Math.ceil(chance.integer({ min: 3, max: 10 })),\n      Math.ceil(chance.normal({ mean: 45, dev: 15 })) + 1,\n    ]),\n    numberOfProcesses = chance.integer({ min: 1, max: 10 }),\n  }) {\n    const traceID = chance.guid();\n    const duration = chance.integer({ min: 10000, max: 5000000 });\n    const timestamp = (new Date().getTime() - chance.integer({ min: 0, max: 1000 }) * 1000) * 1000;\n\n    const processArray = chance.processes({ numberOfProcesses });\n    const processes = processArray.reduce((pMap, p) => ({ ...pMap, [p.processID]: p }), {});\n\n    let spans = chance.n(chance.span, numberOfSpans, {\n      traceID,\n      processes,\n      traceStartTime: timestamp,\n      traceEndTime: timestamp + duration,\n    });\n    spans = attachReferences(spans);\n    if (spans.length > 1) {\n      spans = setupParentSpan(spans, { startTime: timestamp, duration });\n    }\n\n    return {\n      traceID,\n      spans,\n      duration,\n      timestamp,\n      processes,\n    };\n  },\n  tag() {\n    return {\n      key: 'http.url',\n      type: 'String',\n      value: `/v2/${chance.pickone(['alpha', 'beta', 'gamma'])}/${chance.guid()}`,\n    };\n  },\n  span({\n    traceID = chance.guid(),\n    processes = {},\n    traceStartTime = chance.timestamp() * 1000 * 1000,\n    traceEndTime = traceStartTime + 100000,\n    operations = OPERATIONS_LIST,\n  }) {\n    const startTime = chance.integer({\n      min: traceStartTime,\n      max: traceEndTime,\n    });\n\n    return {\n      traceID,\n      processID: chance.pickone(Object.keys(processes)),\n      spanID: chance.guid(),\n      flags: 0,\n      operationName: chance.pickone(operations),\n      references: [],\n      startTime,\n      duration: chance.integer({ min: 1, max: traceEndTime - startTime }),\n      tags: chance.tags(),\n      logs: [],\n    };\n  },\n  process({ services = SERVICE_LIST }) {\n    return {\n      processID: chance.guid(),\n      serviceName: chance.pickone(services),\n      tags: chance.tags(),\n    };\n  },\n  traces({ numberOfTraces = chance.integer({ min: 5, max: 15 }) }) {\n    return chance.n(chance.trace, numberOfTraces, {});\n  },\n  tags() {\n    return chance.n(chance.tag, chance.integer({ min: 1, max: 10 }), {});\n  },\n  processes({ numberOfProcesses = chance.integer({ min: 1, max: 25 }) }) {\n    return chance.n(chance.process, numberOfProcesses, {});\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/trace-generators.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 702\n// module chunks = 1","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 703\n// module chunks = 1","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 874\n// module chunks = 1","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 875\n// module chunks = 1"],"sourceRoot":""}